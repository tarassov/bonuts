{"version":3,"sources":["assets/img/donut.svg","actions/actionTypes.jsx","api/jsonParser.jsx","common/storage.jsx","api/api.jsx","api/authenticateApi.jsx","actions/notifierActions.jsx","actions/profile/actionTypes.jsx","api/profileApi.jsx","api/tenantApi.jsx","api/departmentApi.jsx","api/storeApi.jsx","api/regardApi.jsx","api/profilesApi.jsx","api/accountLogApi.jsx","api/apiRoot.jsx","actions/modal/actionTypes.jsx","actions/modal/modalResults.jsx","actions/modal/modalActions.jsx","api/dashboardApi.jsx","actions/eventActions.jsx","actions/dashboardActions.jsx","assets/jss/modals/modalStyle.jsx","components/input/InputWithRange.jsx","components/downshift/Input.jsx","components/downshift/Suggestion.jsx","components/downshift/AutoDownshift.jsx","components/forms/common/render.jsx","modals/share/ShareForm.jsx","modals/share/ShareModalView.jsx","modals/share/ShareModal.jsx","modals/store/StoreItemForm.jsx","modals/store/StoreItemModalView.jsx","actions/storeActions.jsx","modals/store/StoreItemModal.jsx","modals/confirm/ConfirmModalView.jsx","components/grid/GridItem.jsx","components/grid/GridContainer.jsx","modals/regard/RegardModalView.jsx","assets/jss/baseStyles.jsx","assets/jss/components/formStyle.jsx","components/forms/SimpleFieldForm.jsx","components/forms/DynamicForm.jsx","components/forms/reduxFormGenerator.jsx","modals/LayoutModal.jsx","modals/department/DepartmentModal.jsx","modals/DynamicModal.jsx","assets/jss/layouts/userStyle.jsx","components/UserImage.jsx","modals/profile/ProfileModal.jsx","modals/profile/ProfilePreviewModal.jsx","components/UserAvatar.jsx","assets/jss/components/eventCardStyle.jsx","components/EventCard.jsx","containers/EventCardContainer.jsx","containers/CommentContainer.jsx","components/Progress.jsx","containers/ProgressContainer.jsx","modals/event/EventModal.jsx","modals/modalList.jsx","actions/listActions.jsx","actions/profile/profileActions.jsx","actions/errores.jsx","actions/commonActions.jsx","actions/authActions.jsx","reducers/errors.jsx","reducers/authenticate.jsx","reducers/dashboard.jsx","reducers/system.jsx","reducers/profile.jsx","reducers/account.jsx","reducers/modal.jsx","reducers/notifier.jsx","reducers/loader.jsx","reducers/index.jsx","store/configureStore.jsx","store/initialState.jsx","serviceWorker.js","assets/jss/components/headerStyle.jsx","components/forms/LoginForm.jsx","components/forms/RecoverForm.jsx","containers/pages/LoginPage.jsx","components/forms/register/asyncValidate.jsx","assets/jss/components/registerFormStyle.jsx","components/forms/register/RegisterForm.jsx","layouts/Register.jsx","containers/pages/RegisterPage.jsx","assets/jss/components/dashboardStyle.jsx","components/Fabs.jsx","components/AccountBalance.jsx","containers/SelfAccountContainer.jsx","containers/DistribAccountContainer.jsx","assets/jss/components/eventsFilterStyle.jsx","components/EventsFilter.jsx","assets/jss/components/eventsListStyle.jsx","components/EventList.jsx","containers/EventListContainer.jsx","layouts/Dashboard.jsx","containers/pages/DashboardPage.jsx","assets/jss/components/homeStyle.jsx","layouts/Home.jsx","containers/pages/HomePage.jsx","components/Previews.jsx","layouts/User.jsx","containers/pages/UserPage.jsx","actions/regardsActions.jsx","assets/jss/checkBoxAndRadioStyle.jsx","assets/jss/components/customTableStyle.jsx","components/table/CustomTableToolbar.jsx","components/table/CustomTable.jsx","assets/jss/components/cardStyle.jsx","components/card/Card.jsx","assets/jss/components/cardHeaderStyle.jsx","components/card/CardHeader.jsx","assets/jss/components/cardBodyStyle.jsx","components/card/CardBody.jsx","assets/jss/layouts/listStyle.jsx","layouts/Regards.jsx","containers/pages/RegardsPage.jsx","components/store/StoreTableHead.jsx","components/store/StoreToolbar.jsx","components/store/Store.jsx","actions/assetActions.jsx","containers/pages/StorePage.jsx","assets/jss/layouts/settingsStyles.jsx","layouts/Settings.jsx","containers/pages/SettingsPage.jsx","actions/tenantActions.jsx","assets/jss/components/confrimEmailStyle.jsx","containers/pages/ConfirmEmailPage.jsx","components/forms/NewPasswordForm.jsx","containers/pages/NewPasswordPage.jsx","layouts/Departments.jsx","containers/pages/DepartmentsPage.jsx","layouts/Profiles.jsx","containers/pages/ProfilesPage.jsx","layouts/Donuts.jsx","containers/pages/DonutsPage.jsx","layouts/AccountOperations.jsx","containers/pages/AccountOperationsPage.jsx","components/charts/Leaderboard.jsx","layouts/Statistic.jsx","containers/pages/StatisticPage.jsx","containers/NewCommentContainer.jsx","layouts/EventLayout.jsx","containers/pages/EventPage.jsx","routes/appRoutes.jsx","assets/jss/components/accountMenuStyle.jsx","assets/jss/components/sideboardStyle.jsx","components/MenuLinks.jsx","components/menu/AccountMenu.jsx","containers/menu/AccountMenuContainer.jsx","components/Header.jsx","containers/HeaderContainer.jsx","assets/jss/layouts/appStyle.jsx","components/Sideboard.jsx","containers/SideboardContainer.jsx","modals/DialogWindow.jsx","modals/Modal.jsx","components/Notifier.jsx","components/App.js","routes/index.jsx","containers/AppContainer.jsx","i18n.js","index.js"],"names":["module","exports","AUTHENTICATE_SUCCESS","AUTHENTICATE_FAILED","LOG_OUT","NEW_REGISTER","REGISTER_SUCCESS","REGISTER_FAILED","START_LOADING","END_LOADING","ADD_ERROR","REMOVE_ERROR","CLEAR_ERRORS","LOAD_USERS_FAILED","LOAD_USERS_SUCCESS","SEND_POINT_SUCCESS","LOAD_EVENTS_SUCCESS","ADD_EVENTS_SUCCESS","loadSuccess","name","toUpperCase","addSuccess","loadItemSuccess","loadFailed","updateSuccess","deleteSuccess","getActionName","action","result","actionName","undefined","parseData","data","Array","isArray","forEach","element","arrayName","pluralize","plural","type","push","parseElement","res","id","attributes","relationships","Object","keys","key","Storage","localStorage","getItem","handleErrors","response","ok","status","unauthorized","json","post","url","body","token","request","put","get","method","shouldParse","formData","tenant","getTenant","init","headers","JSON","stringify","Headers","append","Promise","resolve","reject","window","fetch","then","console","log","error","errorText","message","errorMessage","errorCode","errorParams","included","parsedData","parse","catch","AuthenticateApi","email","password","credentials","first_name","last_name","enqueueSnackbar","notification","Date","getTime","Math","random","removeSnackbar","LOAD_PROFILE_SUCCESS","LOAD_PROFILE_FAILED","SAVE_PROFILE_SUCCESS","LOAD_SELF_BALANCE_SUCCESS","LOAD_SELF_BALANCE_FAILED","LOAD_DISTRIB_BALANCE_SUCCESS","LOAD_DISTRIB_BALANCE_FAILED","CONFIRM_EMAIL_SUCCESS","CONFIRM_EMAIL_FAILED","LOAD_ACCOUNT_SUCCESS","LOAD_ACCOUNT_FAILED","SAVE_ACCOUNT_SUCCESS","ProfileApi","PROFILES_URL","confirm_token","CONFIRM_EMAIL_URL","recover_token","RECOVER_BY_TOKEN","profile","department_id","department","position","admin","active","PROFILE_URL","account_id","SELF_ACCOUNT_URL","DISTRIB_ACCOUNT_URL","payload","domain","TENANT_BY_DOMAIN","itemName","DepartmentApi","item","head_profile_id","head_profile","DEPARTMENTS_URL","DashboardApi","DONUTS_URL","del","donut_id","RegardApi","regard","ProfilesApi","args","show_score","show_balance","show_sent","AccountLogApi","URL","apis","departments","departmentApi","donuts","storeApi","regards","regardApi","profiles","profilesApi","account_log","SHOW_MODAL","HIDE_MODAL","RESULT_MODAL","CANCEL","EMPTY","showModal","modalName","actionTypes","hideModal","resultModal","amount","from_profile_id","to_profile_ids","comment","is_for_distrib","share_for_all","burn_old","page","filter","filterString","showMine","EVENTS_URL","event","like","text","loadEvents","dispatch","options","useToken","apiFunction","dashboardApi","commonActions","events","per_page","total","request_date","items","loadEventsSuccess","addEventsSuccess","loadEventWithComments","callback","loadEventWithComment","success","bind","this","commentItem","params","show_progress","loadUsers","i","map","user_id","users","loadUsersSuccess","sendPoints","profile_ids","profileActions","modalStyle","theme","root","height","container","display","button","width","margin","textField","InputWithRange","state","value","handleChange","prop","newValue","target","props","maxValue","minValue","setState","classes","measure","label","FormControl","className","classNames","withoutLabel","aria-describedby","Input","onChange","endAdornment","InputAdornment","inputProps","FormHelperText","Component","withStyles","InputProps","ref","other","TextField","disabled","inputRef","inputRoot","input","inputInput","Suggestion","suggestion","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","MenuItem","selected","component","style","fontWeight","itemToString","flexGrow","paper","zIndex","marginTop","spacing","left","right","flexWrap","divider","placeholder","source","touched","invalid","Fragment","initialValue","initialSelectedItem","getInputProps","getItemProps","getMenuProps","inputValue","isOpen","fullWidth","onFocus","Paper","square","elevation","deburr","trim","toLowerCase","inputLength","length","count","keep","includes","getSuggestions","currentId","renderTextField","meta","custom","formControl","toString","renderNumberField","InputLabelProps","shrink","renderDateField","helperText","renderCheckbox","FormControlLabel","control","Checkbox","checked","renderInputWithRange","renderDownshift","downshiftControl","ShareForm","t","handleSubmit","pristine","submitting","reset","min","max","currentUserId","onSubmit","DialogContent","Field","DialogActions","Button","color","autoFocus","onClick","onClose","reduxForm","form","validate","values","errors","point_amount","isNaN","Number","user","field","withTranslation","ShareModalView","submit","onShare","dashboard","DialogTitle","distrib_balance","userChanged","React","withMobileDialog","connect","ownProps","modal","authenticate","onCloseModal","from_profile","to_profile","StoreItemForm","StoreItemModalView","addItem","donut_name","price","donut_price","updateItem","expiration_date","donut_expiration","initialValues","removeItem","unsubscribe","subscribe","modalResults","modalActions","callRemoveItem","postItem","donut","ConfirmModalView","accept","e","preventDefault","onAccept","cancel","onCancel","grid","padding","children","rest","classItem","Grid","RegardModalView","el","componentRef","title","xs","sm","md","public_uid","bgColor","fgColor","level","trigger","content","transition","paddingRight","paddingLeft","marginRight","marginLeft","card","boxShadow","borderRadius","background","flexContainer","justifyContent","overflow","defaultFont","fontFamily","lineHeight","warningColor","dangerColor","successColor","infoColor","grayColor","primaryBoxShadow","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","secondaryCardHeader","roseCardHeader","defaultBoxShadow","paddingTop","borderTop","border","textDecoration","marginBottom","minHeight","hexToRgb","replace","test","Error","first","second","last","parseInt","formStyle","gridItem","infoButton","primaryButton","warningButton","paddingBottom","menu","smField","mdField","breakpoints","up","lgField","okButton","float","cancelButton","image","maxWidth","maxHeight","down","modalImage","SimpleFieldForm","field_xs","field_sm","lg","field_md","size","submitCaption","fields","formId","columns","cancelCaption","cancelable","detachedSubmit","hasInitial","okButtonClass","cancelButtonClass","concat","field_lg","src","alt","renderField","checkbox","autoComplete","field_class","multiline","rows","DynamicForm","DForm","enableReinitialize","LayoutForm","onLoad","ReduxFormGenerator","getForm","mapStateToProps","mapDispatchToProps","keepDirtyOnReinitialize","LayoutModal","listActions","ListActions","loadItems","actions","DepartmentModal","formGenerator","generatedForm","GeneratedForm","DynamicModal","userStyle","caption","textAlign","UserImage","newLoaded","preview","files","formPayLoad","FormData","account","saveAvatar","createObjectURL","changeable","user_avatar","onDrop","acceptedFiles","readFile","getRootProps","actionsDepartments","payLoad","ProfileModal","ProfilePreviewModal","useStyles","makeStyles","avatar","backgroundColor","blue","userName","UserAvatar","avatarClass","avatar_url","Avatar","Icon","user_name","eventCardStyles","cardHeader","bottom","cardPrivate","liked","media","dateCaption","expand","transform","transitions","create","duration","shortest","expandOpen","avatarPrivate","bigAvatar","operationContainer","operationText","whiteSpace","wordBreak","smallAvatar","amountText","fontSize","plusText","minusText","accountButton","textTransform","flexLine","EventCard","expanded","handleExpandClick","onProfileClick","commentable","likeable","amountClass","public","operation","direction","cardClass","likeClass","thumb","click","Card","CardHeader","Tooltip","IconButton","aria-label","subheader","CardContent","userClick","Typography","extra_content","CardActions","disableSpacing","onLikeEvent","likes","onShowEventModal","comments_count","classnames","aria-expanded","variant","date_string","Collapse","in","timeout","unmountOnExit","EventCardContainer","notModal","modals","likeEvent","onComment","CommentContainer","progress","palette","primary","center","flexDirection","alignItems","CircularProgress","waitingText","SystemProgress","system","isWaiting","ProgressContainer","loadEvent","form_id","notifierActions","EventModal","xd","comments","EDIT_STORE_ITEM","PROFILE_PREVIEW","EVENT","modalList","SHARE_DIALOG","ShareModal","NEW_STORE_ITEM","StoreItemModal","CONFIRM_DIALOG","REGARDS_PRINT","EDIT_DEPARTMENT","PROFILE_EDIT","api","nameUpper","nameLower","loadFunction","loadProfile","profileApi","getProfile","user_not_found","loadSelfBalance","self_account","loadDistribBalance","distrib_account","confirmEmail","profileActionTypes","confirmEmailSuccess","auth_token","profile_id","errores","5000","sendConfirmEmail","actionText","startLoading","endLoading","callApi","input_options","startActionName","endActionName","failActionName","getToken","authActions","apiFail","message2","apiResult","failFunc","apiSuccess","setItem","authenticateSuccess","logout","checkAuth","authenticateFailed","username","register","list","activeError","authenticated","confirmed","registered","loaded","self_balance","balance","types","tenant_loaded","isLoading","show","defaultState","notifications","notifier","loader","max_id","new_state","newItems","arr","loadedItem","loadItem","rootReducer","history","combineReducers","router","connectRouter","createReducer","store","account_operations","formReducer","reducerFunction","createHistory","persistConfig","storage","whitelist","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","routerMiddleware","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","initSubscriber","persistStore","Boolean","location","hostname","match","headerStyle","appBar","borderBottom","flex","logo","appResponsive","top","info","warning","danger","LoginForm","recoverToggle","RecoverForm","LoginPage","onLogin","recoverModeToggle","recoverMode","sendRecoverEmail","onRecoverPassword","requestNewPassword","recoverPassword","asyncValidate","validateEmail","valid","registerFormStyle","checkBox","RegisterForm","onReset","align","gutterBottom","Register","onFindTenant","form_name","onRegister","newRegister","to","registerValues","tenantApi","loadTenantByDomain","dashboardStyle","bullet","secondary","pos","dashboardToolbar","dashboardPath","dashboardMenu","dashboardMenuItem","inlineBlock","minWidth","fabsContainer","withTheme","fabs","transitionDuration","enter","enteringScreen","exit","leavingScreen","fab","Zoom","transitionDelay","icon","AccountBalance","lastUpdate","shareable","shopable","onHistory","rightIcon","iconSmall","onRedirectToStore","leftIcon","SelfAccountContainer","getBalance","onShop","DistribAccountContainer","eventsFilterStyle","EventsFilter","onFilter","FormGroup","row","Switch","eventsListStyle","EventList","loadMore","reloadEvents","PropTypes","func","isRequired","Dashboard","doNut","EventListContainer","DashboardPage","onRequestUser","getDistribBalance","getSelfBalance","homeStyle","heroUnit","heroContent","heroButtons","layout","cardGrid","cardMedia","cardContent","footer","Home","handleLogIn","onLoginRedirect","handleRegister","onRegisterRedirect","handleGuestLogin","onDemo","paragraph","justify","demo_authenticate","Previews","User","revokeObjectURL","saveProfile","checkboxAndRadioStyle","checkedIcon","uncheckedIcon","radio","radioChecked","radioUnchecked","customTableStyle","tooltip","fontStyle","textShadow","letterSpacing","wordSpacing","wordWrap","lineBreak","font","cardTitleWhite","cardCategoryWhite","table","tableRow","tableActions","verticalAlign","tableAvatar","tableCell","tableActionButton","toolbar","highlight","main","lighten","light","dark","numSelected","useTranslation","Toolbar","RowAction","i18n","placement","CustomTable","handleToggle","currentIndex","indexOf","newChecked","splice","rowClick","checkable","tableCellClasses","tableRowAvatar","Table","TableBody","TableRow","TableCell","tabIndex","handleRowClick","cardStyle","cardPlain","cardProfile","cardChart","plain","chart","cardClasses","cardHeaderStyle","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","stats","cardHeaderClasses","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","cardBodyClasses","listStyle","tableActionButtonIcon","edit","buy","close","getActivatedItems","notActivatedItems","Regards","loadRegards","onPrint","redirectToStore","onRequest","numeric","disablePadding","StoreTableHead","createSortHandler","property","onRequestSort","onSelectAllClick","order","orderBy","rowCount","TableHead","indeterminate","sortDirection","enterDelay","TableSortLabel","spacer","toolButton","onAddItem","onEditItem","onDeleteItem","onBuyItem","desc","a","b","Store","rowsPerPage","componentDidMount","loadStore","handleRequestSort","handleSelectAllClick","n","handleClick","selectedIndex","newSelected","slice","handleChangePage","handleChangeRowsPerPage","handleEdit","handleBuyItem","handleDelete","emptyRows","tableWrapper","aria-labelledby","array","cmp","stabilizedThis","sort","stableSort","getSorting","hover","role","aria-checked","scope","colSpan","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","overflowX","buyAsset","loadDounts","showItem","ids","storeActions","assetActions","settingStyle","share_all","activate_code","Settings","points","activate","onActivate","code","saveLogo","column","StorePage","settingsStyles","migrateAvatars","acivate_form_id","confrimEmailStyle","vertical_center","ConfirmEmailPage","loadByToken","getByToken","NewPasswordForm","NewPasswordPage","recover","new_password","loadByRecover","getByRecoverToken","submitNewPassword","updatePassword","Departments","onDelete","onAdd","onEdit","delete","People","loadProfiles","withoutDep","getProfiles","open","getDepartmenrsSorted","Profiles","Donuts","onBuy","AccountOperations","sum","created_at","listAction","Leaderboard","sortedItems","score_total","labels","datasets","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","maintainAspectRatio","responsive","Statistic","showScore","showBalance","showSent","EventLayout","NewCommentContainer","event_id","showEventModal","dashboardRoutes","path","anonymous","sidebarName","navbarName","LocationOn","hideInMenu","HomePage","Person","RegisterPage","AccountOperationsPage","EventPage","UserPage","List","DepartmentsPage","PeoplePage","DonutsPage","Stars","RegardsPage","BarChart","StatisticPage","SettingsPage","redirect","accountMenuStyle","accountTitle","sideboardStyle","drawerPaper","easing","sharp","drawerPaperClose","toolbarIcon","mixins","hidden","logoLink","logoImage","img","itemLink","itemIcon","itemText","purple","gray","green","orange","red","sidebarWrapper","overflowScrolling","MenuLinks","routeName","pathname","routes","listItemClasses","activeRoute","whiteFontClasses","whiteFont","activeClassName","ListItem","ListItemIcon","ListItemText","disableTypography","WrappedLinks","forwardRef","forwardedRef","AccountMenu","auth","anchorEl","handleMenu","currentTarget","handleClose","handleLogOut","onLogOut","handleAccount","onAccount","aria-owns","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","transformOrigin","appRoutes","menuStyle","onCheckAuth","Header","appBarClasses","depName","AppBar","edge","menuButton","AccountMenuContainer","HeaderContainer","appStyle","wrapper","mainPanel","mainPanelWide","Sideboard","handleDrawerOpen","handleDrawerClose","toggle","brand","href","Hidden","smDown","implementation","Drawer","Divider","SideboardContainer","DialogWindow","fullScreen","Dialog","scroll","Modal","ModalName","handleAccept","handleCancel","ActionButton","notifyText","Notifier","displayed","storeDisplayed","newSnacks","currentSnacks","notExists","notifyElement","bindActionCreators","withSnackbar","createMuiTheme","A400","switchRoutes","from","switchAnonymousRoutes","App","handleDrawerToggle","mobileOpen","drawerOpen","resizeFunction","createRef","innerWidth","navigator","platform","current","PerfectScrollbar","addEventListener","prevProps","scrollTop","mainPanelClass","withRouter","indexRoutes","use","LanguageDetector","resources","en","translations","ru","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","rootElement","document","querySelector","ReactDOM","render","loading","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7353f4c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donut.cd6cef76.svg\";","export const AUTHENTICATE ='AUTHENTICATE'\n\nexport const AUTHENTICATE_SUCCESS ='AUTHENTICATE_SUCCESS'\nexport const AUTHENTICATE_FAILED ='AUTHENTICATE_FAILED'\nexport const LOG_OUT ='LOG_OUT'\nexport const REGISTER ='REGISTER'\nexport const NEW_REGISTER ='NEW_REGISTER'\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS'\nexport const REGISTER_FAILED ='REGISTER_FAILED'\n\n\nexport const START_LOADING = 'START_LOADING'\nexport const END_LOADING = 'END_LOADING'\n\n\nexport const ADD_ERROR = 'ADD_ERROR'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n\n\nexport const LOAD_USERS_FAILED='LOAD_USERS_FAILED'\nexport const LOAD_USERS_SUCCESS='LOAD_USERS_SUCCESS'\n\n\nexport const SEND_POINT_SUCCESS = 'SEND_POINT_SUCCESS'\nexport const SEND_POINT_FAILED = 'SEND_POINT_FAILED'\n\n\n\nexport const LOAD_EVENTS_FAILED='LOAD_EVENTS_FAILED'\nexport const LOAD_EVENTS_SUCCESS='LOAD_EVENTS_SUCCESS'\nexport const ADD_EVENTS_SUCCESS ='ADD_EVENTS_SUCCESS'\n\nexport const LOAD_STORE_SUCCESS = 'LOAD_STORE_SUCCESS'\n\nexport function loading(name) {\n  return \"LOADING_\"+name.toUpperCase()\n}\nexport function loadSuccess(name) {\n  return \"LOAD_\" + name.toUpperCase()+\"_SUCCESS\"\n}\n\nexport function addSuccess(name) {\n  return \"ADD_\" + name.toUpperCase()+\"_SUCCESS\"\n}\n\nexport function loadItemSuccess(name) {\n  return \"LOAD_\"+  name.toUpperCase()+\"ITEM_SUCCESS\"\n}\n\nexport function loadItemFailed(name) {\n  return \"LOAD_\"+  name.toUpperCase()+\"ITEM_FAILED\"\n}\n\nexport function loadFailed(name) {\n  return \"LOAD_\" + name.toUpperCase()+\"_FAILED\"\n}\n\nexport function saveSuccess(name) {\n  return \"SAVE_\"+ name.toUpperCase()+\"_SUCCESS\"\n}\n\nexport function saveFailed(name) {\n  return \"SAVE_\"+ name.toUpperCase()+\"_FAILED\"\n}\n\nexport function saveItemSuccess(name) {\n  return \"SAVE_\"+ name.toUpperCase()+\"ITEM_SUCCESS\"\n}\n\nexport function saveItemFailed(name) {\n  return \"SAVE_\"+ name.toUpperCase()+\"ITEM_FAILED\"\n}\nexport function updateItemSuccess(name) {\n  return \"UPDATE_\"+ name.toUpperCase()+\"ITEM_SUCCESS\"\n}\n\nexport function updateSuccess(name) {\n  return \"UPDATE_\"+ name.toUpperCase()+\"_SUCCESS\"\n}\nexport function updateItemFailed(name) {\n  return \"UPDATE_\"+ name.toUpperCase()+\"ITEM_FAILED\"\n}\nexport function removeItemSuccess(name) {\n  return \"REMOVE_\"+ name.toUpperCase()+\"ITEM_SUCCESS\"\n}\n\nexport function deleteSuccess(name) {\n  return \"DELETE\"+ name.toUpperCase()+\"_SUCCESS\"\n}\n\nexport function removeItemFailed(name) {\n  return \"REMOVE_\"+ name.toUpperCase()+\"ITEM_FAILED\"\n}\n\nexport function getActionName(action,name,result){\n  let actionName = ''\n\n  if (action !== undefined){\n      actionName = action.toUpperCase()      \n  }\n\n  \n  if (name !== undefined){\n    actionName = actionName +'_'+ name.toUpperCase()\n  }\n\n  if (actionName!=='' ) {\n      actionName=actionName +'_'+result.toUpperCase() \n  }\n  else{\n      actionName= 'ACTION_'+result.toUpperCase()       \n  }\n\n  return actionName\n \n}","import pluralize from 'pluralize'\n\nexport function parse(json){\n    let data = json.data\n  //  console.log({data:json.data})\n\n    let included = json.included\n    if (data === undefined) {\n        return {}\n    }\n    let parsedData = parseData(data)\n    if (included!==undefined){\n        let includedData = parseData(included)\n        parsedData = {...parsedData, included: {...includedData}}\n    }\n    let parsed =  {\n        unauthorized: json.unauthorized,\n        errorText: json.errorText,\n        error: json.error,\n        errorCode:json.errorCode,\n        headers: json.headers,\n        ...parsedData}\n\n    //console.log({jsonParsed:{...parsed}})\n\n    return parsed\n}\nfunction parseData(data){\n    let result ={}\n    if (Array.isArray(data)){\n        data.forEach(function(element){  \n            let arrayName = pluralize.plural(element.type)\n            if (result[arrayName]===undefined) result[arrayName] =[]\n            result[arrayName].push(parseElement(element))        \n        });\n    }\n    else if (data === null || data ===undefined){\n      return {}\n    }\n    else{\n        result[data.type] ={}\n        result[data.type]=parseElement(data)\n    }\n\n    return result\n\n}\nfunction  parseElement(element){\n    if (element === undefined) return {}\n\n    let res = {\n        id:element.id,\n        ...element.attributes\n    }\n\n    if (element.relationships !== undefined){\n        let keys = Object.keys(element.relationships);\n        keys.forEach(function (key) {\n            res={\n                ...res,\n                ...parseData(element.relationships[key].data)\n            }\n        })\n    }\n\n    return res\n}\n","export default class Storage {\n    static getToken() {\n        return localStorage.getItem('auth_token')\n    }\n\n    static getTenant() {    \n        return localStorage.getItem('tenant')\n    }\n\n}\n","import {parse} from \"./jsonParser\";\nimport Storage from \"common/storage\";\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        if (response.status === 401) {\n            return{                        \n              unauthorized: true,\n            }\n        }\n        else {\n            return response.json()\n        }\n    }\n    return response;\n}\nexport function post(url, body, token) {\n    return request(url,'POST',body,token)\n}\nexport function put(url,body,token) {\n    return request(url,'PUT', body,token)\n}\nexport function del(url,token) {\n    return request(url, 'DELETE',undefined,token)\n}\n\nexport function get(url,token) {\n    return request(url, 'GET',undefined,token)\n}\n\nexport function request(url,method, body, token, shouldParse=true, formData = false) {\n    let tenant = Storage.getTenant()\n    \n    let init = {\n        method: method,\n        headers: {'Content-Type': 'application/json', 'Authorization': JSON.stringify({token:token, tenant:tenant})},\n        body: body\n    }\n    if (formData) {\n        let headers = new Headers();\n        headers.append('Authorization',JSON.stringify({token:token, tenant:tenant}))\n        init = {\n            method: method,\n            headers: headers,\n            body: body\n        }\n    } \n   // let fullUrl = 'http://localhost:3000/' + url\n\n    return new Promise((resolve, reject) => {\n        window.fetch(url, init)\n            .then(handleErrors)\n            .then(response => {\n                console.log(response)\n                if (response.unauthorized) {\n                    return {\n                        data: {},\n                        unauthorized: true,\n                        error: true,\n                        errorText: 'Not Authorized.'\n                    };\n                }\n                if (response.error){\n                    return {\n                        data: {},\n                        error: true,\n                        unauthorized: false,\n                        errorText: response.message,\n                        errorMessage: response.message,\n                        errorCode: response.errorCode,\n                        errorParams: response.errorParams\n                    };\n                }\n                if (response.ok  && response.status !== 204) {\n                    return response.json().then(data => {\n                        console.log(data)\n                        return {\n                            ...data,\n                            unauthorized: false,\n                            error: false,\n                            errorText:null,\n                            headers: response.headers\n\n                        }\n                    })\n                }\n                else {\n                    return {\n                        data: {},\n                        unauthorized: false,\n                        error: false,\n                        errorText:null\n                    }\n                }\n\n            })\n            .then(json =>{\n               console.log(json) \n                if (shouldParse) {\n                    resolve(parse(json))\n                }\n                else{\n                    resolve(json)\n                }\n\n            })\n            .catch(error => {\n                reject(error)\n            })\n    })\n}\n","import {post, get,request} from './api'\n\nconst AUTH_URL  =  '/api/authenticate'\nconst DEMO_AUTH_URL  =  '/api/demo_authenticate'\nconst REGISTER_URL  =  '/api/register'\nconst VALIDATE_NEW_EMAIL_URL  =  '/api/validate_new_email'\nconst SECRET_URL= '/api/secret'\n\nexport default class AuthenticateApi {\n    static authenticate(email, password) {\n        let body = JSON.stringify({email: email, password: password})\n        return request(AUTH_URL,'POST',body,null,false)\n    }\n\n    static demo_authenticate() {\n        let body = JSON.stringify({})\n        return request(DEMO_AUTH_URL,'POST',body,null,false)\n    }\n\n    static register(credentials) {\n        let body = JSON.stringify({\n            first_name: credentials.first_name,\n            last_name: credentials.last_name,\n            email: credentials.email,\n            password: credentials.password,             \n        })\n        return request(REGISTER_URL, \"POST\", body,null,false)\n    }\n\n\n    static validateEmail(email) {\n        let body = JSON.stringify({email})\n        return request(VALIDATE_NEW_EMAIL_URL, \"POST\", body,null,false)\n    }\n\n\n    static logout() {\n\n    }\n\n\n}\n","export const enqueueSnackbar = notification => ({\n    type: 'ENQUEUE_SNACKBAR',\n    notification: {\n        key: new Date().getTime() + Math.random(),\n        ...notification,\n    },\n});\n\nexport const removeSnackbar = key => ({\n    type: 'REMOVE_SNACKBAR',\n    key,\n});\n","export const LOADING_PROFILE = \"LOADING_PROFILE\"\nexport const LOAD_PROFILE_SUCCESS = \"LOAD_PROFILE_SUCCESS\"\nexport const LOAD_PROFILE_FAILED = \"LOAD_PROFILE_FAILED\"\n\nexport const SAVE_PROFILE_SUCCESS = 'SAVE_PROFILE_SUCCESS'\nexport const SAVE_PROFILE_FAILED = 'SAVE_PROFILE_FAILED'\n\nexport const LOADING_BALANCE ='LOADING_BALANCE'\n\nexport const LOAD_SELF_BALANCE_SUCCESS = 'LOAD_SELF_BALANCE_SUCCESS'\nexport const LOAD_SELF_BALANCE_FAILED = 'LOAD_SELF_BALANCE_FAILED'\n\nexport const LOAD_DISTRIB_BALANCE_SUCCESS = 'LOAD_DISTRIB_BALANCE_SUCCESS'\nexport const LOAD_DISTRIB_BALANCE_FAILED = 'LOAD_DISTRIB_BALANCE_FAILED'\n\n\nexport const CONFIRM_EMAIL_SUCCESS = 'CONFIRM_EMAIL_SUCCESS'\nexport const CONFIRM_EMAIL_FAILED  = 'CONFIRM_EMAIL_FAILED'\n\n\nexport const PASSWORD_RECOVER_SUCCESS = \"PASSWORD_RECOVER_SUCCESS\"\nexport const PASSWORD_RECOVER_FAILED = \"PASSWORD_RECOVER_FAILED\"\n\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED'\n\n\nexport const LOAD_ACCOUNT_SUCCESS = \"LOAD_ACCOUNT_SUCCESS\"\nexport const LOAD_ACCOUNT_FAILED = \"LOAD_ACCOUNT_FAILED\"\n\nexport const SAVE_ACCOUNT_SUCCESS = 'SAVE_ACCOUNT_SUCCESS'\nexport const SAVE_ACCOUNT_FAILED = 'SAVE_ACCOUNT_FAILED'\n","\nimport {post,get,del,put,request} from './api'\n\nconst PROFILE_URL  =  '/api/profile'\nconst PROFILES_URL  =  '/api/profiles'\nconst SELF_ACCOUNT_URL =  '/api/self_accounts'\nconst DISTRIB_ACCOUNT_URL =  '/api/distrib_accounts'\nconst CONFIRM_EMAIL_URL = '/api/confirm_email'\nconst SEND_CONFIRM_EMAIL_URL = '/api/send_confirm_email'\nconst RECOVER_URL = '/api/users/password'\nconst RECOVER_BY_TOKEN ='/api/users/recover'\n\n\nexport default class ProfileApi {\n    static getProfile(token) {\n      return  get(PROFILE_URL, token)\n    }\n\n    static getProfileById(token,id) {\n      return  get(PROFILES_URL+'/'+id, token)\n    }\n\n    static getByToken(token, confirm_token){\n      return get(CONFIRM_EMAIL_URL +'?token=' + confirm_token)\n    }\n\n    static getByRecoverToken(token, recover_token){\n      return get(RECOVER_BY_TOKEN +'?recover_token=' + recover_token)\n    }\n\n    static confirmEmail(token, confirm_token) {\n      let body = JSON.stringify({\n        token: confirm_token\n      })\n      return post(CONFIRM_EMAIL_URL, body, token)\n    }\n\n    static sendConfirmEmail(email) {\n      let body = JSON.stringify({\n        email: email\n      })\n      return post(SEND_CONFIRM_EMAIL_URL, body)\n    }\n\n    static saveProfile(token,profile){\n      let body =JSON.stringify({\n        email: profile.email,\n        first_name: profile.first_name,\n        last_name: profile.last_name,\n        department_id: profile.department ? profile.department.id: null,\n        position: profile.position,\n        admin: profile.admin,\n        active: profile.active\n      })\n      return put(PROFILE_URL + 's/' + profile.id, body,token)\n    }\n\n    static loadSelfBalance(token, account_id){\n        return  get(SELF_ACCOUNT_URL +'/' + account_id  , token)\n    }\n\n    static loadDistribBalance(token, account_id){\n        return  get(DISTRIB_ACCOUNT_URL +'/' + account_id , token)\n    }\n\n    static requestNewPassword(token, email) {\n      let body =JSON.stringify({\n        email: email\n      })\n      return put(RECOVER_URL, body, token )\n    }\n\n    static submitNewPassword(recover_token, password) {\n      let body =JSON.stringify({\n        recover_token: recover_token,\n        password: password\n      })\n      return request(RECOVER_URL, \"POST\", body,null,false)\n    }\n\n    static saveAvatar(token,payload) {\n      let body =payload\n      return request('/api/avatars', \"POST\", body,token,false,true)\n    }\n\n\n}\n","\nimport {post,get,del,put,request} from './api'\n\nconst TENANT_BY_DOMAIN  =  '/api/tenant/show_by_domain'\n\n\nexport default class ProfileApi {\n\n    static itemName ='tenant'\n\n    static loadTenantByDomain(domain){\n        return get(TENANT_BY_DOMAIN +'?domain=' + domain)\n    }   \n\n\n    static migrateAvatars(token) {\n        return post('/api/tenant/migrate_avatars/',null,token)\n    }\n\n    static saveLogo(token,payload){\n        let body =payload\n        return request('/api/tenant/upload_logo/', \"POST\", body,token,false,true)\n      }\n}\n","import {post,get,del,put,request} from './api'\n\nconst DEPARTMENTS_URL = 'api/departments'\nconst SEND_POINT_URL = 'api/account_operations'\nconst EVENTS_URL = 'api/events'\nconst REGARDS_URL ='api/profile_assets'\n\nexport default class DepartmentApi {\n    \n    static itemName ='department'\n    \n    static loadItems(token) {\n      return  get(DEPARTMENTS_URL, token)\n    }\n\n    static addItem(token, item) {\n      let body = JSON.stringify({\n        name: item.name, \n        head_profile_id: item.head_profile ? item.head_profile.id: null\n      })\n      return post(DEPARTMENTS_URL, body,token)\n    }\n\n    static updateItem(token, item) {\n      let body = JSON.stringify({\n        name: item.name, \n        head_profile_id: item.head_profile ? item.head_profile.id: null\n      })\n      return put(DEPARTMENTS_URL+'/'+item.id, body,token)\n    }\n\n\n  \n\n}\n","import {post,get,del,put,request} from './api'\n\nconst DONUTS_URL = 'api/donuts'\nconst SEND_POINT_URL = 'api/account_operations'\nconst EVENTS_URL = 'api/events'\nconst PROFILE_ASSETS = 'api/profile_assets'\n\nexport default class DashboardApi {\n   \n  static itemName ='donut'\n\n    static loadItems(token) {\n      return  get(DONUTS_URL, token)\n    }\n\n    static  loadDounts(token) {\n      return  get(DONUTS_URL, token)\n    }\n\n    static postItem(token, item) {\n       let body = JSON.stringify({...item})\n       return post(DONUTS_URL, body,token)\n    }\n\n    static getItem(token, id){\n      return  get(DONUTS_URL+'/' + id, token)\n    }\n\n    static updateItem(token, item){\n      let body = JSON.stringify({...item})\n      return put(DONUTS_URL+'/' + item.id, body,token)\n    }\n\n    static removeItem(token, id) {\n      return  del(DONUTS_URL+'/' + id, token)\n    }\n\n    static buyAsset(token, donut_id) {\n      let body = JSON.stringify({donut_id: donut_id})\n      return post(PROFILE_ASSETS, body, token)  \n    }\n\n}\n","\r\nimport {post,get,del,put,request} from './api'\r\n\r\nconst REGARD_URL  =  '/api/profile_asset'\r\nconst ACTIVATE_URL ='/api/regards/activate'\r\nconst SELF_ACCOUNT_URL =  '/api/self_accounts'\r\nconst DISTRIB_ACCOUNT_URL =  '/api/distrib_accounts'\r\nconst CONFIRM_EMAIL_URL = '/api/confirm_email'\r\nconst RECOVER_URL = '/api/users/password'\r\nconst RECOVER_BY_TOKEN ='/api/users/recover'\r\n\r\n\r\nexport default class RegardApi {\r\n\r\n     \r\n    static itemName ='regard'\r\n\r\n\r\n    static updateItem(token, regard) {\r\n        let body = JSON.stringify({\r\n            ...regard\r\n          })\r\n        return  post(ACTIVATE_URL, body,token)\r\n    }\r\n\r\n\r\n\r\n}","import {post,get,del,put,request} from './api'\r\n\r\nconst PROFILES_URL = 'api/profiles'\r\n\r\nexport default class ProfilesApi {\r\n    \r\n    static itemName ='profile'\r\n\r\n    static loadItems(token,args) {\r\n        if (args.show_score){\r\n          return  get(PROFILES_URL+'?show_score='+ args.show_score, token)\r\n        }\r\n        else if (args.show_balance){\r\n          return  get(PROFILES_URL+'?show_balance='+ args.show_balance, token)\r\n        }\r\n        else if (args.show_sent){\r\n          return  get(PROFILES_URL+'?show_sent='+ args.show_sent, token)\r\n        }\r\n        else {\r\n          return  get(PROFILES_URL, token)\r\n        }\r\n    }\r\n\r\n    static addItem(token, item) {\r\n      let body = JSON.stringify({\r\n        department_id: item.department ? item.department.id: null,\r\n        position: item.position\r\n      })\r\n      return post(PROFILES_URL, body,token)\r\n    }\r\n\r\n    static updateItem(token, item) {\r\n        let body = JSON.stringify({\r\n          ...item,  \r\n          department_id: item.department ? item.department.id: null,            \r\n        })\r\n        return put(PROFILES_URL+'/'+item.id, body,token)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","\nimport {post,get,del,put,request} from './api'\n\nconst URL  =  '/api/account_operations'\n\n\nexport default class AccountLogApi {\n\n     \n    static itemName ='account_operation'\n\n\n    static loadItems(token, args) {\n        return  get(URL+'?account_id='+args.id, token)\n    }\n\n\n\n}","import departmentApi from \"api/departmentApi\"\r\nimport storeApi from \"api/storeApi\"\r\nimport regardApi from \"api/regardApi\"\r\nimport profilesApi from \"./profilesApi\"\r\nimport AccountLogApi from \"./accountLogApi\";\r\n\r\nconst apis ={\r\n    departments: departmentApi,\r\n    donuts: storeApi,\r\n    regards: regardApi,\r\n    profiles: profilesApi,\r\n    account_log: AccountLogApi\r\n}\r\nexport default apis","export const SHOW_MODAL = 'SHOW_MODAL'\nexport const HIDE_MODAL = 'HIDE_MODAL'\nexport const RESULT_MODAL = 'RESULT_MODAL'\n","export const OK = 'OK'\nexport const CANCEL = 'CANCEL'\nexport const EMPTY = 'EMPTY'\n","import * as actionTypes from 'actions/modal/actionTypes'\nimport {subscribe} from 'redux-subscriber';\nimport * as modalResults from 'actions/modal/modalResults'\n\nexport function showModal(modalName,body){\n    return {\n        type: actionTypes.SHOW_MODAL,\n        modalName: modalName,\n        body: body\n    }\n}\n\nexport function hideModal(){\n    console.log(\"HIDE_MODAL\")\n    return {\n        type: actionTypes.HIDE_MODAL,\n    }\n}\n\n\nexport function confirm(dispatch,body){\n  return new Promise((resolve, reject) => {\n\n    const unsubscribe = subscribe('modal.result', state => {\n      if (state.modal.result !== undefined){\n        unsubscribe();\n        if (state.modal.result == modalResults.CANCEL || state.modal.result == modalResults.EMPTY) {\n          reject(state.modal.result)\n        }\n        else {\n          resolve(state.modal.result);\n        }\n      }\n    });\n\n    dispatch(showModal('CONFIRM_DIALOG', body))\n  })\n}\n\n\nexport function resultModal(result){\n  return {\n    type: actionTypes.RESULT_MODAL,\n    result: result\n  }\n}\n","import {post,get,del,put,request} from './api'\n\nconst USERS_URL = '/api/profiles'\nconst SEND_POINT_URL = '/api/account_operations'\nconst EVENTS_URL = '/api/events'\nconst REGARDS_URL ='/api/profile_assets'\nexport default class DashboardApi {\n    static loadUsers(token) {\n      return  get(USERS_URL, token)\n    }\n\n    static sendPoints(token, amount, from_profile_id, to_profile_ids,comment, is_for_distrib,share_for_all,burn_old) {\n      let body = JSON.stringify({ amount,to_profile_ids: to_profile_ids, from_profile_id,comment, is_for_distrib,share_for_all,burn_old})\n       return post(SEND_POINT_URL, body,token)\n    }\n\n\n    static loadEvents(token,page,filter={}) {\n        let filterString = \"\"\n        if (filter.showMine){\n          filterString = filterString + \"&showMine=true\"\n        }\n        return get(EVENTS_URL+'?page=' + page+filterString, token)\n    }\n\n    static loadEventWithComment(token,id){\n      return get(EVENTS_URL+'/'+id,token)\n    }\n\n    static loadRegards(token){\n        return get(REGARDS_URL, token)\n    }\n\n    static likeEvent(token,event) {\n      let body = JSON.stringify({\n        like: true, \n      })\n      return put(EVENTS_URL+'/'+event.id, body,token)\n    }\n\n    static commentItem(token, event, comment){\n      let body =JSON.stringify({\n        text: comment\n      })\n      if (comment===\"\" || comment===undefined) return Promise.reject('Can not be empty');\n      return post(EVENTS_URL + \"/\" + event.id + \"/comments\", body,token )\n    }\n\n}\n","import * as actionTypes from \"./actionTypes\"\nimport  * as commonActions from \"actions/commonActions\"\nimport dashboardApi from \"api/dashboardApi\"\nimport * as  profileActions from  \"actions/profile/profileActions\"\n\n\n\n\nexport function loadEvents(page,filter) {\n    return function (dispatch) {\n        const options = {\n          useToken: true,\n          action: 'load',\n          name: 'events', \n          apiFunction:   dashboardApi.loadEvents, \n          args:[page,filter]\n        }\n        return commonActions.callApi(\n            dispatch,options).then(json =>{\n                let  events   = json.events\n                if (events === undefined) {\n                  events = []\n                }\n                console.log(events)\n                if (page ==0 || page == 1) {\n                  dispatch(loadEventsSuccess(events,page,\n                      json.headers.get('per-page'),\n                      json.headers.get('total'),\n                      json.headers.get('request_date')\n                  ))\n                }\n                else {\n                  dispatch(addEventsSuccess(events,page,\n                      json.headers.get('per-page'),\n                      json.headers.get('total'),\n                      json.headers.get('request_date')\n                  ))\n                }\n        })\n    }\n}\n\nexport function loadEventWithComments(id,callback){\n  var loadFunction =  function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'load',\n      name:  \"EVENT\", \n      apiFunction:  dashboardApi.loadEventWithComment, \n      args:[id]\n    }\n    \n    return commonActions.callApi(\n      dispatch,options).then(json => {\n        commonActions.apiResult(\n          dispatch,\n          actionTypes.updateSuccess(\"EVENT\"),\n          {item: json[\"event\"]}\n        )\n        if (callback !==undefined && callback.success !==undefined) {\n          callback.success(dispatch)\n        }\n      })\n  }\n  return loadFunction.bind(this)\n}\n\nexport function commentItem(params,callback){\n    var commentFunction =  function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'comment',\n        name:  \"EVENT\", \n        apiFunction:  dashboardApi.commentItem, \n        args:[params.item,params.comment],\n        show_progress: false\n      }\n      \n      return commonActions.callApi(\n        dispatch,options).then(json => {\n          commonActions.apiResult(\n            dispatch,\n            actionTypes.updateSuccess(\"EVENT\"),\n            {item: json[\"event\"]}\n          )\n          if (callback !==undefined && callback.success !==undefined) {\n            callback.success(dispatch)\n          }\n        })\n    }\n    return commentFunction.bind(this)\n}\n\nexport function likeEvent(event){\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'update',\n      name: 'event', \n      apiFunction:   dashboardApi.likeEvent, \n      args:[event],\n      show_progress: false\n    }\n    return commonActions.callApi(\n        dispatch,options).then(json =>{\n          commonActions.apiResult(dispatch,actionTypes.updateSuccess(\"EVENT\"),{item: json.event})\n    })\n}\n}\n\n\nfunction loadEventsSuccess(events,page,per_page,total, request_date){\n    return{\n        type: actionTypes.LOAD_EVENTS_SUCCESS,\n        items: events,\n        page: page,\n        per_page,\n        total,\n        request_date\n    }\n}\n\nfunction addEventsSuccess(events,page,per_page,total, request_date){\n    return{\n        type: actionTypes.ADD_EVENTS_SUCCESS,\n        items: events,\n        page: page,\n        per_page,\n        total,\n        request_date\n    }\n}\n","import * as actionTypes from \"./actionTypes\"\nimport  * as commonActions from \"actions/commonActions\"\nimport dashboardApi from \"api/dashboardApi\"\nimport * as  profileActions from  \"actions/profile/profileActions\"\nimport {loadEvents} from 'actions/eventActions'\n\nexport function loadUsers() {\n    return function (dispatch) {\n        const options = {\n          useToken: true,\n          action: 'load',\n          name: 'users', \n          apiFunction: dashboardApi.loadUsers, \n          args:[],\n        }\n\n        return commonActions.callApi(\n            dispatch,options).then(json =>{\n              var i = -1\n\n              var profiles  = json.profiles.map(profile=>{\n                i++\n                //console.log(profile)\n                //console.log({user_id: json.included.users[i].id,...json.included.users[i],id: profile.id, ...profile})\n                return {user_id: json.included.users[i].id,...json.included.users[i],id: profile.id, ...profile}\n\n              })\n              dispatch(loadUsersSuccess(profiles))\n            })\n    }\n}\n\n\n\n\nexport function sendPoints(amount, from_profile_id, profile_ids,comment, is_for_distrib, share_for_all, burn_old) {\n  return function(dispatch) {\n    const options = {\n      useToken: true,\n      action: 'send',\n      name: 'point', \n      apiFunction:   dashboardApi.sendPoints, \n      args:[amount, from_profile_id, profile_ids,comment,is_for_distrib,share_for_all, burn_old],\n    }\n    return commonActions.callApi(\n      dispatch,options).then(json => {\n        dispatch(sendPointsSuccess())\n        if (from_profile_id !==null){\n          dispatch(profileActions.loadProfile())\n        }\n        dispatch(loadEvents(1))\n      })\n  }\n}\n\n\n\nfunction loadUsersSuccess(profiles){\n  return{\n    type: actionTypes.LOAD_USERS_SUCCESS,\n    profiles: profiles\n  }\n}\n\n\nfunction sendPointsSuccess () {\n  return {\n    type: actionTypes.SEND_POINT_SUCCESS\n  }\n}\n","const modalStyle = theme => ({\n  root: {\n      height: 250\n  },\n\n  container: {\n      display: 'block',\n  },\n  button: {\n      width: 200,\n      display: 'flex',\n      margin: 'auto'\n  },\n  textField: {\n      width: 'auto',\n      display: 'flex',\n      margin: 5\n  },\n});\n\nexport default modalStyle;\n","import React,{Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Input from '@material-ui/core/Input';\n\n\nconst styles = theme => ({\n    margin: {\n       // margin: theme.spacing.unit,\n    },\n    withoutLabel: {\n        //marginTop: theme.spacing.unit * 3,\n    },\n    textField: {\n       // flexBasis: 200,\n    },\n});\n\nclass InputWithRange extends Component {\n    state = {\n        value: 0,\n    };\n    handleChange = prop => event => {\n        let newValue = event.target.value\n        if (newValue > this.props.maxValue){\n            newValue = this.props.maxValue\n        //    this.props.onError()\n        }\n        if (newValue < this.props.minValue){\n           newValue = this.props.minValue\n           //this.props.onError()\n         }\n        this.setState({ [prop]: newValue });\n      //  this.props.onChange(newValue);\n    };\n\n\n    render() {\n\n        const {classes, measure,label,minValue,maxValue} = this.props\n        return(\n                <FormControl\n                    className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n                    aria-describedby=\"input-helper-text\"\n                >\n                    <Input\n                        id={label + Math.random()}\n                        value={this.state.value}\n                        onChange={this.handleChange('value')}\n                        endAdornment={<InputAdornment position=\"end\">{measure}</InputAdornment>}\n                        inputProps={{\n                            'aria-label': {label},\n                        }}\n                    />\n                    <FormHelperText id=\"{label}-helper-text\">{label} from {minValue} to {maxValue}</FormHelperText>\n                </FormControl>\n        )\n    }\n}\n\nInputWithRange.propTypes  ={\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    measure: PropTypes.string.isRequired,\n    maxValue: PropTypes.number.isRequired,\n    minValue: PropTypes.number.isRequired,\n  //  onError: PropTypes.func.isRequired,\n  //  onChnange: PropTypes.func.isRequired\n};\n\n\n\nexport default withStyles(styles)(InputWithRange);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Input(inputProps) {\n    const { InputProps, classes, ref,options, ...other } = inputProps;\n    console.log(inputProps)\n    return (\n        <TextField\n            disabled = {options.disabled}\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps\n            }}\n            {...other}\n        />\n    );\n}\n\nexport default  Input\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction Suggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected  = (selectedItem === suggestion)\n    //const isSelected = (selectedItem || '').indexOf(suggestion.name) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.id}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.name}\n        </MenuItem>\n    );\n}\n\nSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.object,\n    suggestion: PropTypes.object.isRequired,\n};\n\n\nexport default Suggestion\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport Input from './Input'\nimport Suggestion from './Suggestion'\n\n\nconst styles = theme => ({\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n        margin: 0\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(2),\n        left: 0,\n        right: 0,\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n});\n\nlet popperNode;\n\nfunction getSuggestions(value, source) {\n    if (value === undefined || !value || source==undefined) {return []}\n\n    const inputValue = deburr(value.trim()).toLowerCase();\n\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : source.filter(suggestion => {\n            const keep =\n                count < 5 &&  suggestion.name.toLowerCase().includes(inputValue);\n\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst itemToString = item => (item ? item.name : \"\");\n\nfunction callAllEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      if (fn) {\n        fn(event, ...args)\n      }\n      return (\n        event.preventDownshiftDefault ||\n        (event.hasOwnProperty('nativeEvent') &&\n          event.nativeEvent.preventDownshiftDefault)\n      )\n    })\n}\n\n\n\n\nfunction AutoDownshift(props) {\n    const {classes, placeholder,source,  input,touched, invalid, error,className,options } = props;\n//getInputProps({placeholder: placeholder, touched, invalid, error, onFocus: input.onFocus, onBlur: input.onBlur})\n   console.log(props)\n    return (\n        <React.Fragment>\n                <Downshift\n                           itemToString={itemToString}\n                           onChange={selectedItem => {input.onChange(selectedItem)}}\n                           selectedItem = {options!==undefined ? options.initialValue :undefined}\n                           initialSelectedItem =  {options!==undefined ? options.initialValue :undefined}\n                >\n                    {({\n                          getInputProps,\n                          getItemProps,\n                          getMenuProps,\n                          highlightedIndex,\n                          inputValue,\n                          isOpen,\n                          selectedItem\n                      }) => (\n                        <div>\n                            <Input\n                                fullWidth={true}\n                                className={className}\n                                classes = {classes}\n                                options = {options}\n                                //{...getInputProps({placeholder: placeholder})}\n                                InputProps ={getInputProps({placeholder: placeholder, touched, invalid, error, onFocus: input.onFocus,\n                                  name: input.name,\n\n                                   })}\n                            />\n                            <div {...getMenuProps()}>\n                                {isOpen ? (\n                                    <Paper className={classes.paper} square elevation={2} >\n                                        {getSuggestions(inputValue, source).map((suggestion, index) =>\n                                            <Suggestion\n                                                key = {suggestion.id}\n                                                suggestion = {suggestion}\n                                                index = {index}\n                                                itemProps = {getItemProps({ item: suggestion })}\n                                                highlightedIndex={highlightedIndex}\n                                                selectedItem = {selectedItem}\n                                            />\n                                        )}\n                                    </Paper>\n                                ) : null}\n                            </div>\n                        </div>\n                    )}\n                </Downshift>\n        </React.Fragment>\n    )\n}\n\nAutoDownshift.propTypes = {\n    placeholder: PropTypes.string,\n    source: PropTypes.array\n}\n\nexport default withStyles(styles)(AutoDownshift)\n","import React  from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputWithRange from \"components/input/InputWithRange\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Input from '@material-ui/core/Input';\nimport AutoDownshift from 'components/downshift/AutoDownshift'\nimport { optionalCallExpression, placeholder } from '@babel/types';\nimport FormTextField from 'components/FormTextField';\nimport {Trans, withTranslation,useTranslation } from 'react-i18next';\nimport classNames from \"classnames\";\n\nexport const renderTextField = ({\n  label,\n  input,\n  options,\n  meta: { touched, invalid, error },\n  classes={},\n  ...custom\n}) => (\n  <FormControl className={classNames({[custom.className]:true,[classes.formControl]:true})}>\n    <TextField\n      id={label + Math.random().toString()}\n      label={label}\n      placeholder={label}\n      error={touched && invalid}\n      {...input}\n      {...custom}    \n      disabled = {options!==undefined ? options.disabled: false}\n    />\n    <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>\n  </FormControl> \n)\n\n\nexport const renderNumberField = ({\n  label,\n  input,\n  options,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <FormControl className={custom.className}>\n  <TextField\n    id={label + Math.random().toString()}\n    label={label}\n    placeholder={label}\n    type=\"number\"\n    InputLabelProps={{\n      shrink: true,\n    }}\n    error={touched && invalid}\n    disabled = {options!==undefined ? options.disabled: false}\n    {...input}\n    {...custom}\n  />\n  <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>    \n  </FormControl>\n)\n\n\nexport const renderDateField = ({\n  label,\n  input,\n  options,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    id={label + Math.random().toString()}\n    label={label}\n    placeholder={label}\n    type=\"date\"\n    error={touched && invalid}\n    helperText={touched && error}\n    InputLabelProps={{\n      shrink: true,\n    }}\n    disabled = {options!==undefined ? options.disabled: false}\n    {...input}\n    {...custom}\n  />\n)\n\n\n\nexport const renderCheckbox =  ({\n  label,\n  input,\n  options,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <div>\n    <FormControlLabel className={custom.className}\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}     \n          disabled = {options!==undefined ? options.disabled: false}     \n        />\n      }\n      label={label}\n     /// classes={{\n    //    label: custom.labelClass, // class name, e.g. `classes-nesting-label-x`\n      //}}\n    />\n  </div>\n)\n\n\nexport const renderInputWithRange =  ({\n  label,\n  input,\n  options,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n\n  <FormControl className={custom.className}>\n      <Input\n          id={label + Math.random().toString()}\n          label={label}\n          error={touched && invalid}\n          placeholder ={placeholder}//{label+ ' from ' + custom.min + ' to '+ custom.max}\n          value = {input.value}\n          onChange ={input.onChange}\n          endAdornment={<InputAdornment position=\"end\">{custom.measure}</InputAdornment>}\n          disabled = {options!==undefined ? options.disabled: false}\n          {...input}\n          {...custom}\n          inputProps={{\n              'aria-label': {label},\n          }\n\n        }\n      />\n      <FormHelperText id={label+'helper-text'} className={custom.className}> <Trans>{error}</Trans></FormHelperText>\n  </FormControl>\n)\n\n\nexport const renderDownshift = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  options,\n  classes={},\n  ...custom\n}) =>  (\n  <FormControl className={classNames({\n      [custom.className]:custom.className,\n      [classes.formControl]:classes!==undefined ,\n      [classes.downshiftControl]:classes!==undefined\n    })}>\n  \n    <AutoDownshift\n      id={label + Math.random()}\n      label={label}\n      placeholder = {custom.placeholder}\n      error={touched && invalid}\n      source = {custom.source}\n      input = {input}\n      options = {options ? options: {}}\n      className={custom.className}\n    />\n    <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>\n    \n  </FormControl>\n  )\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Field, reduxForm } from 'redux-form'\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation,useTranslation } from 'react-i18next';\n\nimport {renderDownshift,renderInputWithRange, renderTextField} from 'components/forms/common/render'\n\nlet maxValue;\nlet minValue;\nlet currentId;\n\nconst validate = values => {\n  const errors = {}\n  const requiredFields = [\n      'point_amount',\n      'user',\n      'comment'\n  ]\n  if (values.point_amount && isNaN(Number(values.point_amount)))  {\n      errors.point_amount = 'Must be number'\n  }\n  else if (values.point_amount && Number(values.point_amount)%1 >0) {\n      errors.point_amount = 'Can not be decimal'\n  }\n  else if (values.point_amount && (Number(values.point_amount) > maxValue ||  Number(values.point_amount)< minValue)) {\n      errors.point_amount = 'Should be more than '  + minValue + ' and less than '+ maxValue\n  }\n\n  if(values.user && currentId === values.user.id) {\n      errors.user = 'Can not be the same as current user'\n  }\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n\n  return errors\n}\n\n\n\nclass ShareForm extends  Component {\n      render() {\n        const {t, handleSubmit, pristine, reset, submitting, classes, min, max, label,measure,profiles,currentUserId } = this.props\n        maxValue = max\n        minValue= min\n        currentId=currentUserId\n        return (\n              <form onSubmit={handleSubmit} className={classes.container}>\n              <DialogContent className={classes.root}>\n               <div>\n                 <Field\n                   name=\"point_amount\"\n                   component={renderInputWithRange}\n                   placeholder = {t(\"Max donuts\") +\"  \" + max}\n                   label={t(label)}\n                   measure = {t(measure)}\n                   min={min}\n                   max={max}\n                   className={classes.textField}\n                 />\n              </div>\n              <div>\n                <Field\n                  name=\"user\"\n                  component={renderDownshift}\n                  label={t(\"Users\")}\n                  source= {profiles}\n                  placeholder ={t(\"start typing\")}\n                  className={classes.textField}\n                />\n             </div>\n              <div>\n                  <Field\n                      name=\"comment\"\n                      component={renderTextField}\n                      label={t(\"Comment\")}\n                      placeholder ={t(\"Comment\")}\n                      className={classes.textField}\n                  />\n              </div>\n            </DialogContent>\n             <DialogActions>\n                 <Button type=\"submit\" disabled={pristine || submitting}  color=\"primary\" autoFocus>\n                     Submit\n                 </Button>\n                 <Button onClick={this.props.onClose} color=\"secondary\" >\n                     Close\n                 </Button>\n             </DialogActions>\n\n              </form>\n            )\n          }\n}\n\nShareForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    measure: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    profiles: PropTypes.array,\n\n    classes: PropTypes.object.isRequired\n}\n\n\nShareForm =  reduxForm({\n  form: 'ShareForm', // a unique identifier for this form\n  validate,\n  //asyncValidate\n})(ShareForm)\n\nexport default withTranslation()(withStyles(modalStyle)(ShareForm));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport  modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation, Trans } from \"react-i18next\";\n\nimport ShareForm from './ShareForm'\n\n\n\n\nclass ShareModalView extends React.Component {\n\n  componentDidMount() {\n      this.props.loadUsers();\n  }\n\n\n\n  submit = values => {\n      console.log(values)\n      this.props.onShare(values.point_amount, this.props.profile, values.user,values.comment)\n      this.props.onClose()\n  }\n\n  render() {\n    const { profile, dashboard} = this.props;\n    return (\n        <React.Fragment>\n\n          <DialogTitle id=\"modal_dialog\"><Trans>Share dialog</Trans></DialogTitle>\n             <ShareForm\n              onSubmit= {this.submit}\n              label='Points'\n              measure =''\n              min ={0}\n              max ={profile.distrib_balance}\n              profiles = {dashboard.profiles}\n              userChanged = {this.userChanged}\n              onClose = {this.props.onClose}\n              currentUserId = {profile.id}\n            />\n\n\n        </React.Fragment>\n    )\n}\n}\nShareModalView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onShare: PropTypes.func.isRequired,\n    loadUsers: PropTypes.func.isRequired\n};\n\nexport default  withStyles(modalStyle)(withMobileDialog()(ShareModalView));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\nimport ShareModalView from \"./ShareModalView\";\nimport { enqueueSnackbar } from 'actions/notifierActions';\n\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        onShare: (amount, from_profile,to_profile,comment) => {\n            dispatch(sendPoints(amount, from_profile.id, [to_profile.id],comment))\n        },\n        loadUsers: () => {\n\n          dispatch(loadUsers())\n        },\n        enqueueSnackbar: (notification) => {\n          dispatch(enqueueSnackbar(notification))\n        }\n    }\n}\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        modal: state.modal,\n        authenticate: state.authenticate,\n        onClose: ownProps.onCloseModal,\n        dashboard: state.dashboard,\n        profile: state.profile\n    }\n}\n\n\nexport default connect( mapStateToProps,  mapDispatchToProps)(ShareModalView)\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Field, reduxForm } from 'redux-form'\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport modalStyle from 'assets/jss/modals/modalStyle'\n\nimport {renderNumberField,renderDateField, renderTextField} from 'components/forms/common/render'\n\n\n\nconst validate = values => {\n  const errors = {}\n  const requiredFields = [\n      'donut_name',\n      'donut_price'\n  ]\n\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n\n  return errors\n}\n\n\n\nclass StoreItemForm extends  Component {\n      render() {\n        const { handleSubmit, pristine,  submitting, classes,name} = this.props\n        console.log(this.props)\n        return (\n              <form onSubmit={handleSubmit} className={classes.container}>\n              <DialogContent className={classes.root}>\n                <div>\n                  <Field\n                    name=\"donut_name\"\n                    component={renderTextField}\n                    label=\"name\"\n                    className={classes.textField}\n                  //  input = {{value:'123'}}\n                  />\n               </div>\n               <div>\n                 <Field\n                   name=\"donut_price\"\n                   component={renderNumberField}\n                   label=\"price\"\n                   className={classes.textField}\n                   placeholder=\"price\"\n                 />\n              </div>\n              <div>\n                <Field\n                  name=\"donut_expiration\"\n                  component={renderDateField}\n                  label=\"expiration\"\n                  className={classes.textField}\n                  placeholder=\"expiration\"\n                />\n             </div>\n\n\n\n            </DialogContent>\n             <DialogActions>\n                 <Button type=\"submit\" disabled={pristine || submitting}  color=\"primary\" autoFocus>\n                     Submit\n                 </Button>\n                 <Button onClick={this.props.onClose} color=\"secondary\" >\n                     Close\n                 </Button>\n             </DialogActions>\n\n              </form>\n            )\n          }\n}\n\nStoreItemForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nStoreItemForm =  reduxForm({\n  form: 'StoreItemForm', // a unique identifier for this form\n  validate,\n  //asyncValidate\n})(StoreItemForm)\n\nexport default withStyles(modalStyle)(StoreItemForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport  modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation, Trans } from \"react-i18next\";\nimport StoreItemForm from \"./StoreItemForm\"\n\n\n\n\nclass StoreItemModalView extends React.Component {\n\n  constructor(props) {\n     super(props);\n      this.submit = this.submit.bind(this)\n      // this.state = {donut_name: 'New donut',donut_expiration: '2030-01-01', donut_price: 1}\n  }\n\n  componentDidMount() {\n    const {modal} = this.props\n    console.log(this.props)\n    if (modal.body !==undefined && modal.modalName!==\"NEW_STORE_ITEM\"){\n      var item = modal.body\n      this.setState({donut_name: item.name, donut_price: item.price,donut_expiration: item.expiration_date, id: item.id});\n    }\n    else {\n      this.setState({donut_name: 'New donut',donut_expiration: '2030-01-01', donut_price: 1})\n    }\n  }\n\n\n\n  submit = values => {\n      if (this.state.id ===undefined) {\n        this.props.addItem({name: values.donut_name, price: values.donut_price})\n      }\n      else{\n        this.props.updateItem({\n          name: values.donut_name,\n          price: values.donut_price,\n          expiration_date: values.donut_expiration,\n          id: this.state.id\n        })\n      }\n      this.props.onClose()\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n\n          <DialogTitle id=\"modal_dialog\"><Trans>Store item</Trans></DialogTitle>\n          <StoreItemForm\n            onSubmit= {this.submit}\n            onClose = {this.props.onClose}\n            initialValues = {this.state}\n          />\n\n        </React.Fragment>\n    )\n}\n}\nStoreItemModalView.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default  withStyles(modalStyle)(withMobileDialog()(StoreItemModalView));\n","import React from 'react';\nimport * as actionTypes from \"./actionTypes\"\nimport  * as commonActions from \"actions/commonActions\"\nimport storeApi from \"api/storeApi\"\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nimport pluralize from 'pluralize'\n\n\nconst name = 'STORE'\n\n\nexport function loadStore() {\n    return function (dispatch) {\n        const options = {\n          useToken: true,\n          action: 'load',\n          name:  name, \n          apiFunction:   storeApi.loadDounts, \n          args:[]\n        }\n        return commonActions.callApi(\n            dispatch,options).then(json =>{\n              let  donuts   = json.donuts\n              if (donuts === undefined) {\n                donuts = []\n              }\n              commonActions.apiResult(dispatch,actionTypes.loadSuccess(pluralize.plural(name)), {items:donuts},()=>{return{items: []}})\n            })\n    }\n}\n\nexport function addItem(item) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'add',\n      name:  name, \n      apiFunction:   storeApi.postItem, \n      args:[item]\n    }\n    return commonActions.callApi(\n      dispatch,options).then(json => {\n        commonActions.apiResult(dispatch,actionTypes.addSuccess(name),{item: json.donut})\n      })\n  }\n}\n\nexport function removeItem(items){\n    return function (dispatch) {\n      return modalActions.confirm(dispatch,<div>Remove item?</div>)\n      .then(result =>{\n        callRemoveItem(dispatch, items)\n      })\n      .catch(error => {\n        console.log('CANCELED DELETE ' + error)\n      })\n    }\n}\n\nfunction callRemoveItem(dispatch, items) {\n  items.forEach((item) =>{\n      const options = {\n        useToken: true,\n        action: 'remove',\n        name: name, \n        apiFunction: storeApi.removeItem, \n        args:[item.id]\n      }\n\n      return commonActions.callApi(\n        dispatch,options).then(json => {\n          commonActions.apiResult(dispatch,actionTypes.deleteSuccess(name), {item})\n        })\n    })\n}\n\nexport function showItem(id) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'load',\n      name: name, \n      apiFunction: storeApi.getItem, \n      args:[id]\n    }\n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actionTypes.loadItemSuccess(name), {item: json.donut})\n             if (json.donut !==undefined){\n               dispatch(modalActions.showModal(modals.EDIT_STORE_ITEM, json.donut))\n             }\n          })\n  }\n\n}\n\nexport function updateItem(item) {\n  return function (dispatch) {\n\n    const options = {\n      useToken: true,\n      action: 'update',\n      name: name, \n      apiFunction: storeApi.updateItem, \n      args:[item]\n    }\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actionTypes.updateSuccess(name), {item: json.donut} )\n          })\n  }\n\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport StoreItemModalView from \"./StoreItemModalView\";\nimport { enqueueSnackbar } from 'actions/notifierActions';\nimport {addItem,updateItem} from 'actions/storeActions'\n\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        enqueueSnackbar: (notification) => {\n          dispatch(enqueueSnackbar(notification))\n        },\n\n        addItem: (item) => {\n          dispatch(addItem(item))\n        },\n\n        updateItem: (item) => {\n          dispatch(updateItem(item))\n        }        \n\n    }\n}\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        modal: state.modal,\n        authenticate: state.authenticate,\n        onClose: ownProps.onCloseModal,\n        dashboard: state.dashboard,\n        profile: state.profile\n    }\n}\n\n\nexport default connect( mapStateToProps,  mapDispatchToProps)(StoreItemModalView)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport  modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation, Trans } from \"react-i18next\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass ConfirmModalView extends React.Component {\n\n  componentDidMount() {\n\n  }\n\n\n\n   accept=(e)=> {\n     e.preventDefault();\n     this.props.onAccept();\n\n   }\n\n   cancel = (e) => {\n     e.preventDefault();\n     this.props.onCancel();\n   }\n\n  render() {\n    const {classes, body } = this.props;\n    return (\n        <React.Fragment>\n\n          <DialogTitle id=\"modal_dialog\"><Trans>Confirmation dialog</Trans></DialogTitle>\n          <DialogContent className={classes.root}>\n            {body}\n          </DialogContent>\n          <DialogActions>\n              <Button  onClick={this.accept}  color=\"primary\" autoFocus>\n                  Submit\n              </Button>\n              <Button onClick={this.cancel} color=\"secondary\" >\n                  Close\n              </Button>\n          </DialogActions>\n\n\n        </React.Fragment>\n    )\n}\n}\nConfirmModalView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    body: PropTypes.object.isRequired,\n    onAccept: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default  withStyles(modalStyle)(withMobileDialog()(ConfirmModalView));\n","import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport classNames from \"classnames\";\n\nconst style = {\n  grid: {\n    padding: \"0 15px 15px !important\",\n\n  }\n};\n\nfunction GridItem({ ...props }) {\n  const { classes, children, className,...rest } = props;\n  const classItem = classNames({[classes.grid]:true, [className]:className})\n  return (\n    <Grid item {...rest} className={classItem}>\n      {children}\n    </Grid>\n  );\n}\n\nexport default withStyles(style)(GridItem);\n","import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst style = {\n  grid: {\n    margin: \"0 -15px !important\",\n    width: \"unset\"\n  }\n};\n\nfunction GridContainer(props) {\n  const { classes, children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nexport default withStyles(style)(GridContainer);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport  modalStyle from 'assets/jss/modals/modalStyle'\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { QRCode } from \"react-qr-svg\";\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nclass RegardModalView extends React.Component {\r\n  render() {\r\n    const {body,classes} = this.props;\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div ref={el => (this.componentRef = el)}>\r\n            <DialogTitle id=\"modal_dialog\">\r\n              <Trans>Your regard: </Trans> <Trans>{body.title}</Trans>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.root}>\r\n            <GridContainer>\r\n              <GridItem xs={6} sm={6} md={6}>\r\n                 <h3><Trans>Employee</Trans>:{body.name}</h3>\r\n                 <h3><Trans>Regard code</Trans>:  {body.public_uid || body.id}</h3>\r\n              </GridItem>\r\n              <GridItem xs={6} sm={6} md={6}>\r\n                 <QRCode\r\n                     bgColor=\"#FFFFFF\"\r\n                     fgColor=\"#000000\"\r\n                     level=\"Q\"\r\n                     style={{ width: 140 }}\r\n                     value={body.public_uid || body.id}\r\n                 />\r\n               </GridItem>\r\n             </GridContainer>\r\n            </DialogContent>\r\n            </div>\r\n            <DialogActions>\r\n                <ReactToPrint\r\n                trigger={() => <Button  onClick={this.accept}  color=\"primary\" autoFocus>Print </Button>}\r\n                content={() => this.componentRef}\r\n                />\r\n                <Button onClick={this.props.onCloseModal} color=\"secondary\" >\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\nRegardModalView.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    uid: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default  withStyles(modalStyle)(withMobileDialog()(RegardModalView));\r\n","/*!\n\n =========================================================\n * Material Dashboard React - v1.4.1 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2018 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 240;\nconst drawerCloseWidth = 24;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(0, 0, 0, 0.87)\",\n  background: \"#fff\"\n};\n\nconst flexContainer = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n}\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primaryColor = \"#2E7D32\";\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\",\"#E5F0FF\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\"\n};\n\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)\"\n};\nconst secondaryBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)\"\n};\n\nconst grayBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(188, 190, 192, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(188, 190, 192, 0.28)\"\n};\n\nconst warningCardHeader = {\n  background: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background: \"linear-gradient(60deg, #26c6da, #00acc1)\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background: \"linear-gradient(60deg, #388E3C, #A5D6A7)\",\n  ...secondaryBoxShadow\n};\nconst secondaryCardHeader = {\n  background: \"linear-gradient(60deg, #FFB74D, #FFF3E0)\",\n  ...primaryBoxShadow\n};\n\nconst roseCardHeader = {\n  background: \"linear-gradient(60deg, #ec407a, #d81b60)\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid #eeeeee\",\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: \"#3C4858\",\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: \"#777\",\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n\nexport {\n  //variables\n  drawerWidth,\n  drawerCloseWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  flexContainer,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  whiteColor,\n  blackColor,\n  primaryBoxShadow,\n  secondaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  grayBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  secondaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink,\n  hexToRgb\n};\n","import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    secondaryCardHeader,\n    whiteColor,\n    infoColor,\n    warningColor,\n    primaryColor,\n    roseColor,\n    grayColor\n  } from \"assets/jss/baseStyles.jsx\";\n\nconst formStyle = theme => ({\n    container: {\n        display: 'block',\n        margin: \"auto\",\n        height: \"auto\"\n    },\n    gridItem: {\n        margin:0,\n        padding:\"0 15px 5px !important\"\n    },\n    button: {\n        color: primaryColor,\n        display: \"flex\",\n        margin: \"auto\"\n    },\n\n    infoButton: {\n        color: infoColor[0],\n    },\n\n    primaryButton: {\n        color: primaryColor,\n    },\n    warningButton: {\n        color: warningColor[1],\n    },\n    input: {\n        display: 'none',\n    },\n\n    textField: {\n        width: 200,\n        display: 'flex',\n        margin: 'auto'\n    },\n    formControl: {\n        height: 40,\n\n    },\n    downshiftControl: {\n        marginTop: 10,\n        paddingBottom: \"0px !important\",\n    },\n    menu: {\n        width: 200,\n    },\n    smField:{\n        width: 300,  \n    },\n    mdField: {\n        [theme.breakpoints.up('md')]: {\n            width: 400,\n          },\n    },\n    lgField: {\n        [theme.breakpoints.up('xs')]: {\n         width: `calc(100% - ${theme.spacing(2)}px)`,\n         height: \"auto\",\n        },\n    },\n    okButton:{\n        marginLeft: \"auto\",\n        width: \"auto\",\n        display: \"flex\",\n        float:\"right\"\n    } ,\n    \n    cancelButton: {\n        display: \"block\",\n        width: \"auto\",\n        float: \"right\",\n        color: grayColor[1],\n    },\n    image :{\n        display: 'block',\n        maxWidth: \"95%\",\n        maxHeight: 600,\n        margin:'auto',\n        padding:0,\n      [theme.breakpoints.down('xs')]: {\n        width: 200,\n      },\n    \n    },\n    modalImage :{\n      display: 'block',\n      maxWidth: \"95%\",\n      //maxHeight: 400,\n      margin:'auto',\n      padding:0,\n    [theme.breakpoints.up('xs')]: {\n      maxHeight: 250,\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxHeight: 400,\n    },\n    [theme.breakpoints.up('md')]: {\n     // width: 200,\n    },\n    },\n    label: {\n        width:\"auto\",\n        margin: 0\n    }\n});\n\nexport default formStyle;\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport classNames from \"classnames\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Field, reduxForm } from 'redux-form'\nimport formStyle from 'assets/jss/components/formStyle'\nimport {renderDownshift,renderInputWithRange, renderTextField, renderCheckbox} from 'components/forms/common/render'\nimport { withTranslation, Trans} from \"react-i18next\";\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass SimpleFieldForm extends  Component {\n\n    field_xs(field){\n        return field.xs ? field.xs : 12\n    }\n\n    field_sm(field){\n        return field.sm ?field.sm:this.field_xs(field)\n    }\n\n    field_md(field){\n        return field.md ?field.md:this.field_sm(field)\n    }\n\n    field_lg(field){\n        return field.lg ?field.lg:this.field_md(field)\n    }\n\n    field_class(field,classes){\n        return  classNames({\n            [classes.textField]:true,\n            [classes[field.size + \"Field\"]]: field.size,\n        })    \n\n    }\n\n    getComponent() {\n        //todo: render checkbox\n    }\n\n    render() {\n         const { classes,t,\n            submitCaption,fields,columns,\n            formId,\n            color,\n            cancelCaption,\n            cancelable,\n            detachedSubmit,\n            initialValues,\n            hasInitial\n        } = this.props;\n\n         const okButtonClass = classNames({\n            [classes.button]: true,\n            [classes.okButton]: cancelable,\n            [classes[color + \"Button\"]]: color,\n            \n          });\n    \n          const cancelButtonClass = classNames({\n            [classes.button]: true,\n            [classes.cancelButton]: true,    \n          });\n        \n        if (columns!==undefined) {\n            \n        }\n        return (\n                <form onSubmit={this.props.handleSubmit} className={classes.container}>\n                  <GridContainer>\n                        <GridItem xs={12} className={classes.gridItem}>\n                        <GridContainer>\n                        {fields.map(field=>(         \n                        <GridItem   key={field.name.concat(\"_key\")} \n                                xs={this.field_xs(field)} \n                                sm={this.field_sm(field)}\n                                md={this.field_md(field)} \n                                lg={this.field_lg(field)}\n                                className = {classNames({\n                                    [classes.gridItem]:true,\n                                    [classes.downshiftControl]:field.source\n                                })}\n                            >\n                            {field.image && initialValues[field.name]!==undefined && \n                                <img className={classes.image} src={initialValues[field.name].url} alt=\"not found\"/>\n                            }\n                            {!field.image && \n                                this.renderField(field, formId, t, classes, hasInitial, initialValues)\n                            }\n                            </GridItem>     \n                            \n                        ))}\n                        </GridContainer>             \n                        </GridItem>\n                        <GridItem xs={12}>\n                                {!detachedSubmit && <div>\n                            {cancelable && <Button className={cancelButtonClass}  onClick = {this.props.onCancel}>\n                                <Trans>{cancelCaption? cancelCaption :\"Close\"}</Trans>\n                                </Button>\n                            }\n\n                                        \n                            <Button\n                                    type=\"submit\"\n                                    className={okButtonClass}                           \n                                    \n                                >\n                                    <Trans>{submitCaption}</Trans>\n                            </Button>\n                            </div>\n                                }\n                        </GridItem>\n                  </GridContainer>                   \n      \n                    \n\n                 </form>\n        )\n    }\n\n\n    renderField(field, formId, t, classes, hasInitial, initialValues) {\n        let component\n        if (field.checkbox){\n            component = renderCheckbox\n        }else{\n            component = field.source ? renderDownshift : renderTextField\n        }        \n\n        return <Field \n            name={field.name} \n            id={formId.concat(field.name)} \n            label={t(field.label ? field.label : field.name)} \n            placeholder={t(field.label ? field.label : field.name)} \n            component={component}             \n            autoComplete=\"off\" \n            className={this.field_class(field, classes)} \n            classes = {classes}\n            source={field.source} \n           // labelClass = {classes.label}\n            options={{\n                initialValue: !hasInitial ? undefined : (initialValues[field.name] !== undefined ? initialValues[field.name] : \"\"),\n                disabled: field.disabled\n                }} \n            multiline \n            rows={field.rows}/>;\n    }\n}\n\nSimpleFieldForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    fields: PropTypes.array.isRequired,\n    columns: PropTypes.array,\n    submitCaption: PropTypes.string.isRequired,\n    formId: PropTypes.string.isRequired\n}\n\nexport default withStyles(formStyle)(withTranslation()(SimpleFieldForm))\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { reduxForm } from 'redux-form'\nimport formStyle from 'assets/jss/components/formStyle'\nimport { withTranslation, Trans} from \"react-i18next\";\nimport SimpleFieldForm from \"components/forms/SimpleFieldForm\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from \"classnames\";\n\n\nclass DynamicForm extends  Component {\n    render() {\n         const { classes,t,submitCaption,fields,formId,cancelable,cancelCaption,color, detachedSubmit} = this.props;\n         const min = 1;\n         const max = 10000;\n         const rand = min + Math.random() * (max - min);\n\n         const form = reduxForm({\n             form: formId,\n             enableReinitialize: true, \n         })(SimpleFieldForm)\n         const DForm = form\n\n         const okButtonClass = classNames({\n            [classes.button]: true,\n            [classes.okButton]: cancelable,\n            [classes[color + \"Button\"]]: color,\n            \n          });\n    \n          const cancelButtonClass = classNames({\n            [classes.button]: true,\n            [classes.cancelButton]: true,    \n          });\n         \n         return (\n                <div>\n                    <DForm {...this.props} />\n                    {detachedSubmit && <div>\n                            {cancelable && <Button className={cancelButtonClass}  onClick = {this.props.onCancel}>\n                            <Trans>{cancelCaption? cancelCaption :\"Close\"}</Trans>\n                            </Button>\n                            }\n\n                                    \n                        <Button\n                                type=\"submit\"\n                                className={okButtonClass}                           \n                                \n                            >\n                                <Trans>{submitCaption}</Trans>\n                            </Button>   \n                        </div>\n                    }\n                </div>\n                )\n            \n    }\n\n}\n\nDynamicForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    fields: PropTypes.array.isRequired,\n    submitCaption: PropTypes.string.isRequired,\n    formId: PropTypes.string.isRequired\n}\n\n\nexport default withStyles(formStyle)(withTranslation()(DynamicForm))\n","import React from 'react'\nimport { reduxForm } from 'redux-form'\nimport SimpleFieldForm from 'components/forms/SimpleFieldForm';\nimport { connect } from 'react-redux'\nimport DynamicForm from 'components/forms/DynamicForm';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Trans } from \"react-i18next\";\n\nclass LayoutForm extends React.Component {\n    componentWillMount() {\n        if (this.props.onLoad !==undefined) this.props.onLoad()\n    }\n\n    componentDidMount() {\n//        this.props.onLoad()\n      }\n\n\n    render (){\n        return (\n          <SimpleFieldForm  {...this.props}/>\n        )    \n      }\n    }\n\n\nclass ReduxFormGenerator {\n\n    constructor(params){\n        const default_options = {   \n            reduxForm: { \n                form:\"formid1\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true,\n            },\n            mapStateToProps: (state =>{   \n            }),\n            mapDispatchToProps: ((dispatch, props) =>{\n\n            }),\n            props: {},\n            title:\"\"\n        }\n\n        this.options = {\n            ...default_options,\n            ...params\n        }\n\n    }\n\n    getForm = () =>{\n\n        let form = reduxForm(\n           this.options.reduxForm          \n        )(LayoutForm)\n\n        let rForm = connect(\n            this.options.mapStateToProps,\n            this.options.mapDispatchToProps\n        )(form)\n\n        return rForm\n    }\n\n\n}\n\nexport default ReduxFormGenerator","import React from 'react'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Trans } from \"react-i18next\";\r\n\r\nexport default class LayoutModal extends React.Component {\r\n    render (){\r\n        const {title,children} = this.props\r\n        return (\r\n             <React.Fragment>\r\n\r\n                <div ref={el => (this.componentRef = el)}>\r\n                <DialogTitle id=\"modal_dialog\">\r\n                <Trans>{title}</Trans>\r\n                </DialogTitle>\r\n                 <DialogContent>\r\n                    {children}                \r\n                </DialogContent>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n      }\r\n     \r\n }   ","import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport {loadUsers} from \"actions/dashboardActions\"\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onLoad: () => {\n            let listActions = new ListActions(apis.profiles)\n            dispatch(listActions.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n            let actions = new ListActions(apis.departments)\n            \n            if (item.id !==undefined && item.id !==\"\"){\n                dispatch(actions.updateItem(item))    \n            }\n            else{\n                dispatch(actions.addItem(item))\n            }\n            props.onCloseModal();\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      dashboard: state.dashboard,\n      profiles: state.profiles\n    }\n}\n\nexport class DepartmentModal extends Component {\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"profile_settings\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: true,\n                initialValues: state.modal.body ,\n                formId: \"department_form\",\n                fields: [\n                    { name: \"name\", size:\"lg\" },\n                    { \n                        name: \"head_profile\",\n                        label: \"department chief\", \n                        size: \"lg\",\n                        source:props.profiles.items}\n                ],\n                submitCaption: \"Save changes\",\n                cancelable: true          \n            }),\n            mapDispatchToProps,\n            title: \"New department\",               \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n\n    }\n\n    render() {\n        const GeneratedForm =  this.generatedForm\n        return (\n            <LayoutModal title=\"Department\">\n                <GeneratedForm  {...this.props}/>\n            </LayoutModal>            \n            )\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DepartmentModal)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport DynamicForm from 'components/forms/DynamicForm';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport  modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation, Trans } from \"react-i18next\";\n\n\nclass DynamicModal extends Component {\n    \n    render() {\n        const {body,classes,title} = this.props;\n   \n        return (\n            <React.Fragment>\n\n                <div ref={el => (this.componentRef = el)}>\n                <DialogTitle id=\"modal_dialog\">\n                <Trans>{title}</Trans>\n                </DialogTitle>\n                 <DialogContent>\n                    <DynamicForm\n                         {...this.props}\n                    />                \n                </DialogContent>\n                </div>\n            </React.Fragment>\n\n        )\n    }\n}\n\nDynamicModal.propTypes = {\n    classes: PropTypes.object.isRequired,\n    title: PropTypes.string,\n};\n\n\nexport default  withStyles(modalStyle)(withMobileDialog()(DynamicModal));","import {\n    drawerWidth,\n    drawerCloseWidth,\n    transition,\n    container\n  } from \"assets/jss/baseStyles.jsx\";\n  \n  const userStyle = theme => ({\n    image :{\n        display: 'block',\n        maxWidth: \"95%\",\n        maxHeight: 600,\n        margin:'auto',\n        padding:0,\n      [theme.breakpoints.down('xs')]: {\n        width: 200,\n      },\n  \n    },\n    modalImage :{\n      display: 'block',\n      maxWidth: \"95%\",\n      //maxHeight: 400,\n      margin:'auto',\n      padding:0,\n    [theme.breakpoints.up('xs')]: {\n      maxHeight: 250,\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxHeight: 400,\n    },\n    [theme.breakpoints.up('md')]: {\n     // width: 200,\n    },\n\n  },\n    caption: {\n      textAlign: 'center',\n    }\n  });\n  \n  export default userStyle;\n  ","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport classNames from \"classnames\";\r\nimport Dropzone from 'react-dropzone';\r\nimport userStyle from 'assets/jss/layouts/userStyle';\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass  UserImage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            newLoaded: false,\r\n            preview: null\r\n        }\r\n    }\r\n\r\n    readFile(files) {\r\n        if (files && files[0]) {\r\n            let formPayLoad = new FormData();\r\n            formPayLoad.append('uploaded_image', files[0]);\r\n            formPayLoad.append('id', this.props.account.id);\r\n            this.props.saveAvatar(formPayLoad)   \r\n            let preview = URL.createObjectURL(files[0])\r\n            this.setState({newLoaded:true, preview: preview})                   \r\n        }\r\n    }\r\n\r\n    render() {\r\n    const {classes,changeable} = this.props\r\n\r\n\r\n    return (\r\n            <React.Fragment>\r\n                 {!this.state.newLoaded && this.props.account.user_avatar!==undefined && <img className={classes.image} src={this.props.account.user_avatar.url} alt=\"not found\"/>}\r\n                 {this.state.newLoaded && <img className={classes.image} src={this.state.preview} alt=\"not found\"/>}\r\n                         \r\n                <Dropzone   accept={'image/*'} onDrop={acceptedFiles => this.readFile(acceptedFiles)}>\r\n                            {({getRootProps, getInputProps}) => (\r\n                                <section>\r\n                                {changeable && <div {...getRootProps()}>\r\n                                    <input {...getInputProps()} />\r\n                                    <p className={classes.caption}><Trans>Click to select files</Trans></p>\r\n                                </div>}\r\n                                </section>\r\n                            )}\r\n                </Dropzone>\r\n                      \r\n            </React.Fragment>\r\n         )\r\n    }\r\n}\r\n\r\nUserImage.propTypes = {\r\n    saveAvatar: PropTypes.func.isRequired,\r\n    account: PropTypes.object.isRequired,\r\n    changeable: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(userStyle)(withTranslation()(UserImage))","import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport {saveAvatar} from 'actions/profile/profileActions'\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport UserImage from 'components/UserImage';\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onLoad: () => {\n           let actionsDepartments = new ListActions(apis.departments)\n           dispatch(actionsDepartments.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n            if (!props.modal.body.disabled){\n                let actions = new ListActions(apis.profiles)\n                \n                if (item.id !==undefined && item.id !==\"\"){\n                    dispatch(actions.updateItem(item))    \n                }\n                else{\n                    dispatch(actions.addItem(item))\n                }\n            }\n            props.onCloseModal();\n        },\n        saveAvatar: (payLoad) => {\n            dispatch(saveAvatar(payLoad))\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      profile: state.profile,\n      departments: state.departments\n    }\n}\n\nexport class ProfileModal extends Component {\n\n    constructor(props) {\n        super(props);\n\n            const formGenerator = new ReduxFormGenerator({\n                reduxForm:{\n                    form:\"profile_edit\",\n                    enableReinitialize: true,\n                    keepDirtyOnReinitialize: true \n                },\n                mapStateToProps:state => ({\n                    hasInitial: true,\n                    initialValues: state.modal.body ,\n                    formId: \"profile_edit\",\n                    fields: [\n                    { name: \"email\", label: \"Email\", size: \"lg\",md:12, disabled: state.modal.body.disabled},\n                    { name: \"first_name\", label: \"Name\", size: \"lg\",md:12 , disabled: state.modal.body.disabled},\n                    { name: \"last_name\", label: \"Surname\", size: \"lg\",md:12, disabled: state.modal.body.disabled},\n                    { name: \"department\", \n                        source: this.props.departments.items, \n                        size: \"lg\",\n                        disabled: state.modal.body.disabled\n                    },\n                    { name: \"position\", label: \"Position\", size: \"lg\", disabled: state.modal.body.disabled},\n                    { name: \"active\", label: \"Active\", size: \"lg\",checkbox: true, disabled: state.modal.body.disabled}\n                    ],\n                    submitCaption: !state.modal.body.disabled? \"Save changes\":\"OK\",\n                    cancelable: !state.modal.body.disabled  \n                }),\n                mapDispatchToProps,\n                title: \"Profile\",        \n               \n            })\n    \n            this.generatedForm =  formGenerator.getForm();\n    \n\n    }\n\n    render() {\n        const GeneratedForm =  this.generatedForm\n        const {classes, modal,profile}  =this.props\n        return (\n            <LayoutModal title=\"Profile\">\n                    <GridContainer>\n                        <GridItem xs={12}  sm={6}>                          \n                          <UserImage account = {modal.body} saveAvatar={this.props.saveAvatar} changeable= {profile.admin}/>\n                        </GridItem>\n                        <GridItem xs={12}  sm={6}>\n                            <GeneratedForm {...this.props}/>\n                        </GridItem>\n                    </GridContainer>\n            </LayoutModal>            \n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(ProfileModal))\n","import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport UserImage from 'components/UserImage';\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onLoad: () => {\n          // let actionsDepartments = new ListActions(apis.departments)\n           //dispatch(actionsDepartments.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n         //   let actions = new ListActions(apis.profiles)\n            \n          //  if (item.id !==undefined && item.id !==\"\"){\n          //      dispatch(actions.updateItem(item))    \n          //  }\n          //  else{\n          //      dispatch(actions.addItem(item))\n          //  }\n            props.onCloseModal();\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      profile: state.profile,\n      departments: state.departments\n    }\n}\n\nexport class ProfilePreviewModal extends Component {\n\n    constructor(props) {\n        super(props);\n\n            const formGenerator = new ReduxFormGenerator({\n                reduxForm:{\n                    form:\"profile_preview\",\n                    enableReinitialize: true,\n                    keepDirtyOnReinitialize: true \n                },\n                mapStateToProps:state => ({\n                    hasInitial: true,\n                    initialValues: state.modal.body ,\n                    formId: \"profile_edit\",\n                    fields: [\n                    { name: \"user_name\", label: \"Name\", md:12, size: \"lg\", disabled: true},\n                    { name: \"position\", label: \"Position\", md:12, size: \"lg\", disabled: true},\n                    ],\n                    submitCaption: \"OK\"     ,\n                    cancelable: false\n                }),\n                mapDispatchToProps,\n                title: \"Profile\",        \n               \n            })\n    \n            this.generatedForm =  formGenerator.getForm();\n    \n\n    }\n\n    render() {\n        const GeneratedForm =  this.generatedForm\n        const {classes, modal}  =this.props\n        return (\n            <LayoutModal title=\"Profile\">\n                    <GridContainer>\n                        <GridItem xs={12}  sm={6} >\n                          {modal.body.user_avatar!==undefined && <img className={classes.modalImage} src={modal.body.user_avatar.url} alt=\"not found\"/>}                  \n                        </GridItem>\n                        <GridItem xs={12}  sm={6} >\n                            <GeneratedForm {...this.props}/>\n                        </GridItem>\n                    </GridContainer>\n            </LayoutModal>            \n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(ProfilePreviewModal))\n","import React from 'react'\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport { blue } from '@material-ui/core/colors';\nimport classNames from \"classnames\";\nconst useStyles = makeStyles(theme => ({\n    root: {\n    \n    },\n    avatar: {\n        backgroundColor: 'white',\n        color: blue[300],\n    },\n    userName: {\n        fontWeight: 400,\n        paddingLeft: 15,\n    }\n  }));\n\nconst UserAvatar = (props) => {\n    const classes = useStyles();\n\n    const avatarClass = classNames({\n        [classes.avatar]: true,\n        [props.className]: props.className,    \n      });\n\n\n    return (\n        <React.Fragment>\n            {props.avatar_url!==null && <Avatar onClick={props.onClick} component='span' className ={avatarClass} alt={props.alt} src={props.avatar_url}/>} \n            {props.avatar_url===null && <Avatar className ={avatarClass}><Icon>person_icon</Icon></Avatar> }\n            {props.user_name && <span className={classes.userName}>{props.user_name}</span>}\n        </React.Fragment>\n    )\n}\n\nexport default UserAvatar\n","import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    secondaryCardHeader,\n    whiteColor,\n    infoColor,\n    successColor,\n    dangerColor,\n    infoBoxShadow,\n    successBoxShadow,\n    grayBoxShadow,\n    grayColor,\n    hexToRgb\n  } from \"assets/jss/baseStyles.jsx\";\n  \n\nconst eventCardStyles = theme => ({\n    card: {\n        margin: \"auto\",\n        maxWidth: 700,\n\n    },\n    cardHeader: {\n        //...grayBoxShadow,\n        paddingBottom: 5,\n        marginBottom: 5,\n        position: \"relative\",\n       // backgroundColor: infoColor[4],\n       \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        bottom: \"0\",\n  \n        height: \"1px\",\n        right: \"15px\",\n        width: \"calc(100% - 30px)\",\n        backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n      }\n    },\n    cardPrivate: {\n        backgroundColor: infoColor[4],\n    },\n    liked :{\n        color: infoColor[2],\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    dateCaption: {\n        marginLeft: 'auto', \n    },\n    expand: {\n        transform: 'rotate(0deg)',\n       // marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: 'white',\n        color: infoColor[2],\n    },\n    avatarPrivate: {\n        backgroundColor: infoColor[2],\n    },\n    bigAvatar: {\n        margin: 10,\n        width: 60,\n        height: 60,\n      },\n      content: {\n        padding: \"0 10px 0 10px\",\n       // textAlign: \"right\"\n      },\n\n     operationContainer: {\n        padding: 0,\n        margin: 0,\n\n      },      \n\n\n     operationText: {\n         display: 'inline-flex',\n         margin: \"auto 2px\",\n         padding: 2,\n         whiteSpace: \"pre-wrap\",       /* css-3 */\n         //whiteSpace: \"-moz-pre-wrap\",  /* Mozilla, since 1999 */\n         //whiteSpace: \"-pre-wrap\",      /* Opera 4-6 */\n         //whiteSpace: \"-o-pre-wrap\",    /* Opera 7 */\n         wordBreak: \"break-word\",\n     },\n\n     smallAvatar: {\n        width:28,\n        height:28\n     },\n     amountText:{\n        fontSize: 20,\n        fontWeight: \"bold\",\n     },\n     plusText:{\n        color:successColor[1]\n     },\n     minusText:{\n        color:dangerColor[1]\n     },\n     accountButton: {\n        textTransform: 'none' ,\n        fontWeight: 400,\n        paddingLeft: 0 \n     },\n     flexLine: {\n        flexGrow: 1,\n        height: 1,\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    }, \n      \n});\n export default eventCardStyles","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport orange from '@material-ui/core/colors/orange';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport blue from '@material-ui/core/colors/blue';\nimport yellow from '@material-ui/core/colors/yellow';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Icon from '@material-ui/core/Icon';\n\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport LockIcon from '@material-ui/icons/Lock';\nimport AndroidIcon from '@material-ui/icons/Android';\nimport classNames from \"classnames\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withTranslation, Trans } from \"react-i18next\";\nimport { Paper, Button } from '@material-ui/core';\nimport UserAvatar from './UserAvatar';\nimport Grid from '@material-ui/core/Grid';\nimport GridItem from './grid/GridItem';\nimport eventCardStyles from 'assets/jss/components/eventCardStyle';\n\n\n\nclass  EventCard extends React.Component {\n\n    state = { expanded: false };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    click() {\n        this.props.onProfileClick(this.props.post)\n    }\n    userClick(profile){\n        this.props.onProfileClick(profile)\n    }\n\n\n\n    render() {\n        const { classes, post,t,commentable,likeable} = this.props;\n        const avatarClass = classNames({\n            [classes.avatar]: true,\n            [classes.avatarPrivate]: !post.public,            \n          });\n         \n        const amountClass = classNames({\n            [classes.operationText]: true,\n            [classes.amountText]: true,\n            [classes.plusText]: post.operation && post.operation.direction >0,\n            [classes.minusText]: post.operation && post.operation.direction <0\n        })\n        const cardClass = classNames({\n        [classes.card]: true,\n        [classes.cardPrivate]: !post.public,            \n        });\n\n        const likeClass = classNames({\n            [classes.liked]: post.liked\n        })\n\n        let avatar_url = null\n        if (post.user_avatar !== undefined && post.user_avatar !==null){\n            avatar_url = post.user_avatar.thumb.url\n        }\n \n        let title = (<Button className={classes.accountButton} onClick={this.click.bind(this)}>\n                        {post.user_name}\n                      </Button>)\n        return (\n            <Card className={cardClass}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    avatar={\n                        <React.Fragment>\n                            {post.public && <UserAvatar  onClick={this.click.bind(this)} className ={classes.avatar} avatar_url={avatar_url} alt={post.user_name} />}\n                            {!post.public && <Avatar className ={classes.avatar}><AndroidIcon/></Avatar>}                             \n                        </React.Fragment>\n                    }\n                    action={ \n                        <Tooltip title={!post.public ? t(\"Only you can see it\"): t(\"Profile\")}>\n                        <IconButton  aria-label= {!post.public ? t(\"Only you can see it\"): t(\"Profile\")}>\n                            {!post.public &&<LockIcon/>}   \n                        </IconButton>\n                        </Tooltip>\n                    }\n                    title={post.public? title: \"Сервис бот\"}\n                    subheader={post.public && post.position}\n                 />   \n\n                <CardContent className={classes.content}>\n                      {post.operation && <Grid container className={classes.operationContainer}>\n                          <span className={amountClass}> {post.operation.direction===-1?\"-\":\"+\"}{post.operation.amount}  </span> \n                           <span className={classes.operationText}> для </span>     \n                          <Button className={classes.accountButton} onClick={this.userClick.bind(this,post.operation.profile)}> \n                             <UserAvatar className ={classes.smallAvatar} avatar_url={post.operation.profile.user_avatar.thumb.url} user_name={post.operation.profile.user_name}/>\n                          </Button>\n                      </Grid>}\n                      <Typography component=\"p\" className={classes.operationText}>\n                                    {post.operation && post.public &&\n                                            post.extra_content}\n                                    {(!post.operation || !post.extra_content) && post.content}\n                      </Typography>   \n                </CardContent>\n\n                <CardActions className={classes.actions} disableSpacing>          \n                    {(commentable || likeable) && <IconButton aria-label=\"Add to favorites\" onClick={this.props.onLikeEvent.bind(this,post)} className={likeClass}>\n                        <FavoriteIcon />\n                        {post.likes.length>0 && post.likes.length}\n                    </IconButton>\n                    }\n                    {commentable && <IconButton aria-label=\"Comment\" onClick={this.props.onShowEventModal.bind(this,post)}>\n                        <CommentIcon/>\n                        {post.comments_count!==undefined && post.comments_count!==0 && post.comments_count}\n                    </IconButton>\n                    }\n                    {post.extra_content && <IconButton\n                        className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expanded,\n                        })}\n                        onClick={this.handleExpandClick}\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"Show more\"\n                    >              \n                        <ExpandMoreIcon />\n                    </IconButton>}\n\n                    <Typography variant=\"caption\" component='div' className= {classes.dateCaption}>\n                        {post.date_string}\n                    </Typography>      \n\n                </CardActions>\n                 <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        {post.extra_content}\n                    </CardContent>\n                </Collapse>\n            </Card>\n        );\n    }\n}\n\n\nEventCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nexport default withStyles(eventCardStyles)(withTranslation()(EventCard));\n","import {connect} from 'react-redux'\nimport EventCard from 'components/EventCard'\nimport {likeEvent,commentItem,loadEventWithComments} from \"actions/eventActions\";\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        onProfileClick: (profile) => {\n            dispatch(modalActions.showModal(modals.PROFILE_PREVIEW, {\n                user_name: profile.user_name,\n                position: profile.position,\n                user_avatar: profile.user_avatar,\n                disabled:true}))\n         },\n        onLikeEvent: (event) => {\n           dispatch(likeEvent(event))\n           if (ownProps.notModal == true){\n               dispatch(loadEventWithComments(event.id,))   \n           }\n        },\n        onShowEventModal: (event) =>{\n            dispatch(modalActions.showModal(modals.EVENT, {event: event}))\n        },\n        onComment: (event, comment) => {\n            dispatch(commentItem(event,comment))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        post: ownProps.post,\n        commentable: ownProps.notModal === undefined || ownProps.notModal==false,      \n        likeable:true\n    }\n}\n\nconst EventCardContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventCard)\n\n\nexport default  EventCardContainer\n","import {connect} from 'react-redux'\nimport EventCard from 'components/EventCard'\nimport {likeEvent,commentItem} from \"actions/eventActions\";\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onProfileClick: (profile) => {\n            dispatch(modalActions.showModal(modals.PROFILE_PREVIEW, {\n                user_name: profile.user_name,\n                position: profile.position,\n                user_avatar: profile.user_avatar,\n                disabled:true}))\n         },\n        onLikeEvent: (event) => {\n            //dispatch(likeEvent(event))\n        },\n        onShowEventModal: (event) =>{\n            //dispatch(modalActions.showModal(modals.EVENT, {event: event}))\n        },\n        onComment: (event, comment) => {\n           // dispatch(commentItem(event,comment))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        post: ownProps.post,\n        commentable: false,\n    }\n}\n\nconst CommentContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventCard)\n\n\nexport default  CommentContainer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress  from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    progress: {\n        // margin: theme.spacing.unit * 2,\n        color: theme.palette.primary['A400'],\n        margin: 'auto',\n        height: '200px',\n    },\n    center: {\n        margin: 'auto',\n        display: 'flex',\n        height: '200px',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    caption: {\n        color: theme.palette.primary['A400'],\n    }\n});\n\nfunction Progress(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.center}>\n            <CircularProgress className={classes.progress}/>\n            <Typography type=\"Subheading\" className={classes.caption}>{props.waitingText}</Typography>\n        </div>\n    );\n}\n\nProgress.propTypes = {\n    classes: PropTypes.object.isRequired,\n    waitingText: PropTypes.string\n};\n\nexport default withStyles(styles)(Progress);\n","import {connect} from 'react-redux'\nimport  React from 'react'\nimport Progress from \"components/Progress\";\n\nconst  mapStateToProps = (state) => {\n    return {\n        system: state.system,\n    }\n}\n\n\nclass  SystemProgress extends React.Component{\n\n    render() {\n        return(\n            <div>\n            {this.props.system.isWaiting && (<Progress waitingText={this.props.system.waitingText}/>)}\n            </div>\n        )\n    }\n\n}\n\nconst ProgressContainer = connect(\n    mapStateToProps\n\n)(SystemProgress)\n\nexport default ProgressContainer\n","import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport * as notifierActions from \"actions/notifierActions\"\nimport { reset, reduxForm } from \"redux-form\";\nimport ProgressContainer from 'containers/ProgressContainer';\n\nconst commentCallback = (form_id) => {\n    return {\n        success: (dispatch,response) => {\n          dispatch(notifierActions.enqueueSnackbar({\n            message: 'Comment saved',\n            options: {\n                variant: 'success',\n            }\n          })      \n          )\n          dispatch(reset(form_id))\n        }\n      }\n    }\n\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        loadEvent: (id) =>{\n          dispatch(loadEventWithComments(id))  \n        },\n        onSubmit: (values) => {\n  \n            dispatch(commentItem({item: props.event,comment: values.text},commentCallback('new_comment_form')))\n            \n            //props.onCloseModal()\n        },\n        onCancel: () => {\n            props.onCloseModal()\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      events: state.events\n    }\n}\n\n\n\nexport class EventModal extends Component {\n    componentWillMount(){\n        this.props.loadEvent(this.props.modal.body.event.id)\n    }\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: true  \n            }),\n            mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n    }\n\n    render() {\n        const {classes, modal,events}  =this.props\n        const GeneratedForm =  this.generatedForm\n        const event = events.selected//.items.find(event => event.id === modal.body.event.id);\n        return (\n            <React.Fragment>                \n            {(event ===undefined || event.id !== modal.body.event.id) &&\n                 <React.Fragment>\n                     <ProgressContainer/>           \n                 </React.Fragment>\n\n            }\n            {event !==undefined && event.id === modal.body.event.id &&\n                <LayoutModal>\n                <GridContainer>\n                        <GridItem xs={12}>\n                            <EventCardContainer post = {event}/>\n                        </GridItem>\n                        <GridItem xs={12}>\n                            <GeneratedForm formId= {\"new_comment_form\"} onCloseModal={this.props.onCloseModal} event ={event}/>\n                        </GridItem>\n                        {event.comments!==null && event.comments.map((post,index) =>(\n                        <GridItem xs={12}  key = {index}>\n                            <CommentContainer  post = {post}/>\n                        </GridItem>\n                        )\n                        )}              \n             \n                \n                </GridContainer>        \n            </LayoutModal>  \n            }\n           </React.Fragment>\n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(EventModal))\n","import ShareModal from 'modals/share/ShareModal'\nimport StoreItemModal from 'modals/store/StoreItemModal'\nimport ConfirmModalView from 'modals/confirm/ConfirmModalView'\nimport RegardModalView from './regard/RegardModalView';\nimport DepartmentModal  from './department/DepartmentModal';\nimport  DynamicModal  from './DynamicModal';\nimport  ProfileModal  from './profile/ProfileModal';\nimport  ProfilePreviewModal  from './profile/ProfilePreviewModal';\nimport  EventModal  from './event/EventModal';\n\nexport const SHARE_DIALOG = \"SHARE_DIALOG\"\nexport const NEW_STORE_ITEM=\"NEW_STORE_ITEM\"\nexport const EDIT_STORE_ITEM=\"EDIT_STORE_ITEM\"\nexport const CONFIRM_DIALOG=\"CONFIRM_DIALOG\"\nexport const REGARDS_PRINT=\"REGARDS_PRINT\"\nexport const EDIT_DEPARTMENT =\"EDIT_DEPARTMENT\"\nexport const  PROFILE_EDIT=\"PROFILE_EDIT\"\nexport const  PROFILE_PREVIEW=\"PROFILE_PREVIEW\"\nexport const  EVENT=\"EVENT\"\n\n\nconst modalList =  {\n  SHARE_DIALOG: ShareModal,\n  NEW_STORE_ITEM: StoreItemModal,\n  EDIT_STORE_ITEM: StoreItemModal,\n  CONFIRM_DIALOG: ConfirmModalView,\n  REGARDS_PRINT: RegardModalView,\n  EDIT_DEPARTMENT: DepartmentModal,\n  PROFILE_EDIT: ProfileModal,\n  PROFILE_PREVIEW: ProfilePreviewModal,\n  EVENT: EventModal\n}\n\n\n\nexport default modalList;\n","import React from 'react';\r\nimport * as actionTypes from \"./actionTypes\"\r\nimport  * as commonActions from \"actions/commonActions\"\r\nimport apis from \"api/apiRoot\"\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport pluralize from 'pluralize'\r\n\r\nexport default class ListActions {\r\n  constructor(api) {\r\n    this.nameUpper = api.itemName.toUpperCase()\r\n    this.nameLower = api.itemName.toLowerCase()\r\n    this.api = api\r\n  }\r\n\r\n  loadItems(args={}) {\r\n       var loadFunction = function (dispatch) {\r\n          const options = {\r\n            useToken: true,\r\n            action: 'load',\r\n            name:  pluralize.plural(this.api.itemName), \r\n            apiFunction:   this.api.loadItems, \r\n            args:[args]\r\n          }\r\n          return commonActions.callApi(\r\n              dispatch,options).then(json =>{\r\n                \r\n                let  items   = json[pluralize.plural(this.nameLower)]\r\n                \r\n                if (items === undefined) {\r\n                  items = []\r\n                }\r\n                commonActions.apiResult(dispatch,actionTypes.loadSuccess(pluralize.plural(this.nameUpper)), {items:items},()=>{return{items: []}})\r\n              })\r\n      }\r\n      return loadFunction.bind(this)\r\n  }\r\n\r\n\r\n  addItem(item) {\r\n    var addFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'add',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.addItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(dispatch,actionTypes.addSuccess(this.nameUpper),{item: json[this.nameLower]})\r\n        })\r\n    }\r\n    return addFunction.bind(this)\r\n  }\r\n\r\n  updateItem(item,callback) {\r\n    var editFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'update',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.updateItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(\r\n            dispatch,\r\n            actionTypes.updateSuccess(this.nameUpper),\r\n            {item: json[this.nameLower]}\r\n          )\r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            callback.success(dispatch)\r\n          }\r\n        })\r\n    }\r\n    return editFunction.bind(this)\r\n  }\r\n\r\n  commentItem(params,callback){\r\n    var commentFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'comment',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.commentItem, \r\n        args:[params.item,params.comment]\r\n      }\r\n      \r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(\r\n            dispatch,\r\n            actionTypes.updateSuccess(this.nameUpper),\r\n            {item: json[this.nameLower]}\r\n          )\r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            callback.success(dispatch)\r\n          }\r\n        })\r\n    }\r\n    return commentFunction.bind(this)\r\n  }\r\n\r\n  deleteItem(item) {\r\n    var deleteFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'delete',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.updateItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(\r\n            dispatch,\r\n            actionTypes.deleteSuccess(this.nameUpper),\r\n            {item: json[this.nameLower]}\r\n          )\r\n        })\r\n    }\r\n    return deleteFunction.bind(this)\r\n  }\r\n}\r\n\r\n","import * as actionTypes from \"actions/actionTypes\"\nimport * as actions from \"actions/actionTypes\"\nimport * as profileActionTypes from \"actions/profile/actionTypes\"\nimport profileApi from \"api/profileApi\"\nimport  * as commonActions from \"actions/commonActions\"\nimport *  as notifierActions from \"actions/notifierActions\"\nimport tenantApi from 'api/tenantApi'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nexport function loadProfile() {\n    return function (dispatch) {\n        return commonActions.callApi(\n            dispatch,\n            {\n              apiFunction: profileApi.getProfile,\n              args:[],\n              name:\"profile\",\n              action: \"load\",              \n            }).then(json =>{\n              var profile = {user_id: json.included.users[0].id, ...json.included.users[0],...json.profile}\n              //console.log(profile)\n            commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:profile},()=>{return{user_not_found: true}})\n              dispatch(loadSelfBalance(json.profile.self_account.id))\n              dispatch(loadDistribBalance(json.profile.distrib_account.id))\n            })\n    }\n}\n\nexport function loadAccount() {\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'ACCOUNT', \n        apiFunction:profileApi.getProfile,\n        args:[]\n      }\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            var profile = {...json.included.users[0],...json.profile}\n            commonActions.apiResult(dispatch,actions.loadSuccess('ACCOUNT'), {item:profile},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\nexport function loadTenantByDomain(domain){\n  return function(dispatch){\n    const options = {\n      useToken: false,\n      action: 'load',\n      name: 'CURRENT_TENANT', \n      apiFunction:tenantApi.loadTenantByDomain,\n      args:[domain]\n    }\n\n    return commonActions.callApi(dispatch,options).then(json=>{\n      commonActions.apiResult(dispatch,actionTypes.loadSuccess('CURRENT_TENANT'),{tenant: json.tenant})\n    })\n\n  }\n}\n\n\nexport function loadByToken(token){\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'PROFILE', \n        apiFunction:profileApi.getByToken,\n        args:[token]\n      }\n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:json.user},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\nexport function loadByRecoverToken(token){\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'PROFILE', \n        apiFunction:profileApi.getByRecoverToken,\n        args:[token]\n      }    \n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:json.user},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\n\nexport function confirmEmail(token){\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'confirm',\n      name: 'email', \n      apiFunction:profileApi.confirmEmail,\n      args:[token]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            dispatch(confirmEmailSuccess(json.user,json.auth_token))\n            dispatch(notifierActions.enqueueSnackbar({\n                    message: \"Email confirmed\",\n                    options: {\n                        variant: 'success',\n                    }\n                  })\n                )\n          })\n  }\n}\n\n\n\nexport function saveProfile(profile) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'save',\n      name: 'ACCOUNT', \n      apiFunction: profileApi.saveProfile,\n      args:[profile]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            commonActions.apiResult(dispatch,profileActionTypes.SAVE_ACCOUNT_SUCCESS, {profile: json.profile} )\n            dispatch(loadProfile())\n            //dispatch(saveProfileSuccess(json.user))\n          })\n  }\n\n}\n\n\nexport function saveAvatar(payLoad) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'save',\n      name: 'AVATAR', \n      apiFunction: profileApi.saveAvatar,\n      args:[payLoad]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            commonActions.apiResult(dispatch,\"SAVE_AVATAR_SUCCESS\", {} )\n          })\n  }\n\n}\n\nexport function loadSelfBalance(profile_id) {\n    return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'self_balance', \n        apiFunction: profileApi.loadSelfBalance,\n        args:[profile_id]\n      }  \n\n      return commonActions.callApi(\n            dispatch,options).then(json =>dispatch(loadSelfBalanceSuccess(json.account)))\n    }\n}\n\nexport function loadDistribBalance(profile_id) {\n    return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'distrib_balance', \n        apiFunction: profileApi.loadSelfBalance,\n        args:[profile_id]\n      }  \n        return commonActions.callApi(\n            dispatch,options).then(json =>dispatch(loadDistribBalanceSuccess(json.account)))\n    }\n}\n\n\nexport function recoverPassword(email) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'RECOVER',\n      name: 'PASSWORD', \n      apiFunction: profileApi.requestNewPassword,\n      args:[email]\n    }  \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,'PASSWORD_RECOVER',{},()=>{return{user_not_found: true}})\n             dispatch(notifierActions.enqueueSnackbar({\n                     message: \"Recovery email was sent\",\n                     options: {\n                         variant: 'success',\n                     }\n                   })\n                 )  \n          })\n  }\n}\n\nexport function sendConfirmEmail(params){\n  if (params !==undefined) {\n    let email = params.email\n    if (email !==undefined){\n      return function (dispatch) {\n        const options = {\n          useToken: false,\n          action: 'SEND',\n          name: 'CONFIRM_EMAIL', \n          apiFunction: profileApi.sendConfirmEmail,\n          args:[email]\n        }  \n\n          return commonActions.callApi(\n              dispatch,options).then(json =>{\n                commonActions.apiResult(dispatch,'CONFIRM_EMAIL_SENT',{},()=>{return{user_not_found: true}})\n                dispatch(notifierActions.enqueueSnackbar({\n                        message: \"Confirm email was sent\",\n                        options: {\n                            variant: 'success',\n                        }\n                      })\n                    )  \n              })\n      }\n    }\n  }\n}\nexport function updatePassword(recover_token, password) {\n  return function (dispatch) {\n    const options = {\n      useToken: false,\n      action: 'update',\n      name: 'PASSWORD', \n      apiFunction: profileApi.submitNewPassword,\n      args: [recover_token, password],\n    }  \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,'UPDATE_PASSWORD',{},()=>{return{user_not_found: true}})\n             console.log(json)\n             dispatch(notifierActions.enqueueSnackbar({\n                     message: \"Password updated\",\n                     options: {\n                         variant: 'success',\n                     }\n                   })\n                 )\n              localStorage.setItem('auth_token', json.auth_token)\n              localStorage.setItem('tenant', json.tenant)\n              dispatch({\n                type: actionTypes.AUTHENTICATE_SUCCESS,\n                token: json.auth_token,\n                username:json.email\n              })\n              dispatch(loadProfile())    \n          })\n  }\n}\nfunction saveProfileSuccess(user){\n    return {\n        type: profileActionTypes.SAVE_PROFILE_SUCCESS,\n        profile: user\n    }\n}\n\n\nfunction profileSuccess(user){\n    return {\n        type: profileActionTypes.LOAD_PROFILE_SUCCESS,\n        ...user\n    }\n}\n\nfunction  loadSelfBalanceSuccess(account) {\n    return{\n        type: profileActionTypes.LOAD_SELF_BALANCE_SUCCESS,\n        account: account\n    }\n}\n\nfunction  loadDistribBalanceSuccess(account) {\n    return{\n        type: profileActionTypes.LOAD_DISTRIB_BALANCE_SUCCESS,\n        account: account\n    }\n}\n\n\nfunction confirmEmailSuccess(user,token) {\n  return{\n    type: profileActionTypes.CONFIRM_EMAIL_SUCCESS,\n    user,\n    token\n  }\n}\n","import { demo_authenticate } from \"./authActions\";\r\nimport { sendConfirmEmail } from \"./profile/profileActions\";\r\n\r\nconst errores =  {\r\n    5000: {caption: \"Email not confirmed\", actions:[\r\n         {action: sendConfirmEmail, actionText: \"Send again\"}\r\n     ]\r\n    }\r\n}\r\n  \r\n  \r\n  export default errores;\r\n  ","\nimport * as actionTypes from \"./actionTypes\";\nimport Storage from \"common/storage\";\nimport * as authActions from \"./authActions\";\nimport * as notifierActions from \"./notifierActions\"\nimport pluralize from 'pluralize'\nimport errores from \"./errores\";\nexport function startLoading(text) {\n    return {\n        type: actionTypes.START_LOADING,\n        text\n    }\n}\nexport function endLoading() {\n    return {\n        type: actionTypes.END_LOADING\n    }\n}\n\n\nexport function addError(errorText) {\n    return {type: actionTypes.ADD_ERROR, errorText}\n}\n\n\n\n\nexport function callApi(dispatch, input_options){\n//apiFunction,args,name, failActionType, useToken = true){\n    const default_options = {\n        useToken: true,\n        action: 'load',\n        name: '', \n        apiFunction: undefined, \n        args:[],\n        show_progress: true\n    }\n\n    const options = {...default_options, ...input_options}\n\n    let startActionName =  actionTypes.getActionName(options.action,options.name,'start') \n    let endActionName = actionTypes.getActionName(options.action,options.name,'end')\n    let failActionName =  actionTypes.getActionName(options.action,options.name,'failed')\n\n    if (options.apiFunction===undefined) {\n        throw new Error('apiFunction is not defined')\n    }\n    if (options.show_progress) dispatch(startLoading('Loading ' + options.name))\n    if (options.show_progress)  dispatch({type: startActionName})\n  \n\n    return new Promise((resolve, reject) =>{\n      \n        let token = Storage.getToken()\n        let apiCall\n        if (options.useToken){\n          apiCall =   options.apiFunction(token,...options.args)\n        }\n        else {\n          apiCall =   options.apiFunction(...options.args)\n        }\n\n        apiCall.then(json => {\n            if (json.unauthorized) {\n                dispatch(authActions.logout())\n            }\n            if (json.error) {\n                console.log(json)\n                dispatch(addError(json.errorText))\n                let error\n                let action\n                let errorCode =json.errorCode\n                //errorCode =5000\n                if (errorCode!==undefined){\n                    error = errores[errorCode]    \n                }\n                if (error !==undefined){\n                    action = {\n                        caption: error.actions[0].actionText, \n                        onClick: () =>{                            \n                            dispatch(error.actions[0].action(json.errorParams))\n                        }\n                    }\n                }\n                dispatch(notifierActions.enqueueSnackbar({\n                          message:  json.errorText,\n                          options: {\n                              variant: 'error',\n                          },\n                          action: action\n                        })\n                      )\n                dispatch(apiFail(failActionName,json.errorText))\n                if (options.show_progress) dispatch(endLoading())\n                dispatch({type: endActionName})\n            }\n            else {\n                resolve(json)\n                if (options.show_progress) dispatch(endLoading())\n                dispatch({type: endActionName})                \n            }\n        }).catch(error => {\n          console.log(error)\n            dispatch(notifierActions.enqueueSnackbar({\n                    message: 'Something went wrong.',\n                    message2: error,\n                    options: {\n                        variant: 'error',\n                    }\n                  })\n                )\n            dispatch(apiFail(failActionName, error))\n            reject()\n        })\n    })\n}\n\nexport function apiFail(type,errorText='', failFunc = (()=>{return{}})){\n    return {\n        type: type,\n        error: true,\n        errorText: errorText,\n        ...failFunc()\n    }\n}\n\nexport function apiResult(dispatch,type, params, failFunc = (()=>{return{}})) {\n    if (type!==undefined && params !== undefined){\n      dispatch(apiSuccess(type,params))\n    }\n    else {\n      let errorText = 'Result is empty'\n      dispatch(apiFail(type, errorText,failFunc))\n      dispatch(notifierActions.enqueueSnackbar({\n              message: errorText,\n              options: {\n                  variant: 'info',\n              }\n            })\n          )\n    }\n}\n\nfunction apiSuccess(type,params) {\n  return {\n      type,\n      ...params\n    }\n}\n","import * as actionTypes from \"./actionTypes\"\nimport AuthenticateApi from \"../api/authenticateApi\"\nimport  * as commonActions from \"./commonActions\"\nimport { loadProfile } from \"./profile/profileActions\";\n\nimport *  as notifierActions from \"actions/notifierActions\"\nexport function  authenticate_old(email, password) {\n    return function (dispatch) {\n        return AuthenticateApi.authenticate(email, password).then(json => {\n            console.log(json)\n            if (json.error || (json.ok!==undefined && !json.ok) || (json.unauthorized!==undefined && json.unauthorized)){\n              dispatch(authenticateFailed())\n            }\n            else{\n              localStorage.setItem('auth_token', json.auth_token)\n              dispatch(authenticateSuccess(json.auth_token,email))\n            }\n        }).catch(error => {\n            dispatch(authenticateFailed())\n        })\n    }\n}\n\nexport function authenticate(email, password) {\n    return function (dispatch) {\n      const options = {\n            useToken: false,\n            action: 'AUTHENTICATE', \n            name: undefined, \n            apiFunction:   AuthenticateApi.authenticate, \n            args:[email, password]\n      }\n      return commonActions.callApi(\n        dispatch,\n        options\n        ).then(json => {\n            localStorage.setItem('auth_token', json.auth_token)\n            localStorage.setItem('tenant', json.tenant)\n            dispatch(authenticateSuccess(json.auth_token,email))\n            dispatch(loadProfile())\n        })\n    }\n  }\n\n\nexport function demo_authenticate() {\n    return function (dispatch) {\n      const options = {\n            useToken: false,\n            action: 'AUTHENTICATE', \n            name: undefined, \n            apiFunction:   AuthenticateApi.demo_authenticate, \n            args:[]\n      }\n      return commonActions.callApi(\n        dispatch,\n        options\n        ).then(json => {\n            localStorage.setItem('auth_token', json.auth_token)\n            localStorage.setItem('tenant', json.tenant)\n            dispatch(authenticateSuccess(json.auth_token,json.email))\n            dispatch(loadProfile())\n        })\n    }\n  }\n\nexport function authenticate_by_url(secret){\n  return function (dispatch) {\n      dispatch(commonActions.startLoading(\"authenticating\"))\n      return AuthenticateApi.authenticate_by_url(secret).then(json => {\n          localStorage.setItem('auth_token', json.auth_token)\n          if (json.auth_token == null) {\n            dispatch(authenticateFailed())\n          }\n          else {\n            dispatch(authenticateSuccess(json.auth_token,null))\n          }\n      }).catch(error => {\n          console.log(error)\n          dispatch(authenticateFailed())\n      }).finally(()=>{\n        dispatch(commonActions.endLoading())\n    })\n  }\n}\n\nexport function  logout() {\n    return function (dispatch) {\n        localStorage.removeItem('auth_token')\n        dispatch(logOutSuccess())\n    }\n}\n\nexport function validateEmail(email) {\n    return function(dispatch) {\n        return AuthenticateApi.validateEmail(email).then(res => {\n            console.log(res)\n        })\n    }\n}\n\nexport function checkAuth() {\n    return function (dispatch) {\n        let token  = localStorage.getItem('auth_token')\n        if (token) {\n            dispatch(authenticateSuccess(token))\n        }\n        else{\n            dispatch(authenticateFailed())\n        }\n    }\n}\n\n\n\nfunction authenticateSuccess(token, username){\n    return {\n        type: actionTypes.AUTHENTICATE_SUCCESS,\n        token: token,\n        username:username\n    }\n}\nfunction authenticateFailed(){\n    return {type: actionTypes.AUTHENTICATE_FAILED}\n}\n\nfunction logOutSuccess() {\n    return{type: actionTypes.LOG_OUT}\n}\n\nfunction registerSuccess(user) {\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        success: true,\n        user: user\n    }\n}\n\nfunction registerFailed() {\n    return {\n        type: actionTypes.REGISTER_FAILED,\n        success: false\n    }\n}\nexport function register(credentials){\n    return function (dispatch) {\n        localStorage.setItem('tenant', credentials.tenant.name)\n         return AuthenticateApi.register(credentials).then(json => {\n            dispatch(registerSuccess(json.user))\n                     \n            dispatch(notifierActions.enqueueSnackbar({\n                message: json.user.name+ \" \",\n                message2: \"created\",\n                options: {\n                    variant: 'success',\n                }\n              })\n            )  \n            dispatch(notifierActions.enqueueSnackbar({\n                message: \"Please confirm your email\",\n                options: {\n                    variant: 'info',\n                }\n              })\n            )\n         }).catch(error => {\n            dispatch(registerFailed())\n        })\n    }\n}\n","import * as actionTypes from \"actions/actionTypes\";\nexport default function errors(state={list:[]}, action) {\n    switch (action.type) {\n\n        case actionTypes.ADD_ERROR:\n        return {\n            ...state,\n            list: [...state.list, action.errorText],\n            activeError: true\n        }\n\n\n        case actionTypes.REMOVE_ERROR:\n            return {\n              ...state.filter((error, i) => i !== action.index)\n            }\n\n       case  actionTypes.CLEAR_ERRORS:\n            return {\n              list:[]\n            }\n\n         break;\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nexport default function authenticate(state = {authenticated: false}, action) {\n    switch (action.type) {\n\n        case actionTypes.AUTHENTICATE_SUCCESS:\n            return  {\n                authenticated: true,\n                username: action.username,\n                token: action.token\n            }\n\n        case actionTypes.AUTHENTICATE_FAILED:\n            return  {\n                authenticated: false,\n            }\n        case actionTypes.LOG_OUT:\n            return  {\n                authenticated: false,\n                username:null,\n                token:null\n            }\n        case actionTypes.REGISTER_SUCCESS:\n            return {\n                authenticated:false,\n                confirmed: false,\n                registered: true,\n                email:  action.user.email,\n            }\n\n        case actionTypes.REGISTER_FAILED:\n            return {\n                authenticated:false,\n                registered: false,\n                email:  null,\n            }\n        case actionTypes.NEW_REGISTER:\n            return {\n                authenticated: false,\n                registered: false,\n                confirmed: false,\n                email:null\n            }        \n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nexport default function dashboard(state = {profiles: []}, action) {\n    switch (action.type) {\n      case actionTypes.LOAD_USERS_SUCCESS:\n      return {\n          ...state,\n          profiles: action.profiles\n      }\n      case actionTypes.LOAD_USERS_FAILED:\n      return {\n          ...state,\n          profiles: []\n      }\n      case actionTypes.LOG_OUT:\n          return  {\n              profiles: []\n          }\n\n        default:\n            return state\n    }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nexport default function system(state = {\n    waitingText: null,\n    isWaiting: false\n}, action) {\n    switch (action.type) {\n\n        case actionTypes.START_LOADING:\n            return {\n                ...state,\n                waitingText: action.text,\n                isWaiting: true\n            }\n        case actionTypes.END_LOADING:\n            return {\n                ...state,\n                waitingText: null,\n                isWaiting: false\n            }\n\n        default:\n            return state\n    }\n}\n","import * as actionTypes from \"actions/profile/actionTypes\";\nimport * as types from \"actions/actionTypes\"\nexport default function profile(state = {loaded: false, self_balance: 0, distrib_balance: 0}, action) {\n    switch (action.type) {\n      case actionTypes.LOAD_PROFILE_SUCCESS:\n          return {\n              ...state,\n              ...action.item,\n              user_not_found: action.user_not_found,\n              loaded: true\n          }\n      case actionTypes.LOAD_PROFILE_FAILED:\n        return{\n              ...state,\n              user_not_found: action.user_not_found,\n        }\n      case actionTypes.SAVE_PROFILE_SUCCESS:\n          console.log(action)\n          return {\n              ...state,\n              ...action.profile,\n              loaded: true\n          }\n        case  actionTypes.LOAD_SELF_BALANCE_SUCCESS:\n            return{\n                ...state,\n                self_balance: action.account.balance\n            }\n        case actionTypes.CONFIRM_EMAIL_SUCCESS:\n            return    {\n              ...state,\n              confirmed: true\n            }\n        case actionTypes.CONFIRM_EMAIL_FAILED:\n            return    {\n              ...state,\n              confirmed: false\n            }\n        case  actionTypes.LOAD_SELF_BALANCE_FAILED:\n            return{\n                ...state,\n                self_balance:0\n            }\n        case  actionTypes.LOAD_DISTRIB_BALANCE_SUCCESS:\n            return{\n                ...state,\n                distrib_balance: action.account.balance\n            }\n        case  actionTypes.LOAD_DISTRIB_BALANCE_FAILED:\n            return{\n                ...state,\n                distrib_balance:0\n            }\n        case types.loadSuccess(\"CURRENT_TENANT\"):\n            return{\n                ...state,\n                tenant_loaded: true,\n                tenant: action.tenant,\n            }    \n        case types.loadFailed(\"CURRENT_TENANT\"):\n                return{\n                    ...state,\n                    tenant:{},\n                    tenant_loaded: false,\n                }  \n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"actions/profile/actionTypes\";\nimport * as actions from \"actions/actionTypes\";\nexport default function profile(state = {loaded: false,isLoading: false, data:{loaded:true}}, action) {\n    switch (action.type) {\n      case actionTypes.LOAD_ACCOUNT_SUCCESS:\n          return {\n              ...state,\n              data:  {\n                ...state.data,\n               ...action.item,\n                user_not_found: action.user_not_found,\n                loaded: true,\n              }\n          }\n      case actionTypes.LOAD_ACCOUNT_FAILED:\n        return{\n              ...state,\n              user_not_found: action.user_not_found,\n              loaded: false\n        }\n      case actionTypes.SAVE_ACCOUNT_SUCCESS:\n          console.log(action)\n          return {\n              ...state,\n                data:  {\n                ...state.data,\n               ...action.profile,\n                user_not_found: action.user_not_found,\n                loaded: true,\n              }\n          }\n        case actions.getActionName('load','account','start'):\n            return{\n                ...state,\n                isLoading: true\n            }\n        case actions.getActionName('load','account','end'):\n            return{\n                ...state,\n                isLoading: false\n            }    \n        case actions.getActionName('save','account','start'):\n            return{\n                ...state,\n                isLoading: true\n            }\n        case actions.getActionName('save','account','end'):\n            return{\n                ...state,\n                isLoading: false\n            }    \n        default:\n            return state;\n    }\n}\n","import * as actionTypes from 'actions/modal/actionTypes';\n\nexport default function modal(state = {show: false, modalName: null, body: null}, action) {\n    switch (action.type) {\n\n        case actionTypes.SHOW_MODAL:\n          return  {\n              show: true,\n              modalName: action.modalName,\n              body: action.body\n          }\n\n        case actionTypes.HIDE_MODAL:\n          return  {\n              show: false,\n              modalName: null,\n              body: null\n          }\n\n        case actionTypes.RESULT_MODAL:\n          return {\n            ...state,\n            result: action.result\n          }\n        default:\n            return state\n    }\n}\n","const defaultState = {\n    notifications: [],\n};\n\nexport default function notifier(state = defaultState, action) {\n    switch (action.type) {\n        case 'ENQUEUE_SNACKBAR':\n            return {\n                ...state,\n                notifications: [\n                    ...state.notifications,\n                    {\n                        ...action.notification,\n                    },\n                ],\n            };\n        case 'REMOVE_SNACKBAR':\n            return {\n                ...state,\n                notifications: state.notifications.filter(\n                    notification => notification.key !== action.key,\n                ),\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport pluralize from 'pluralize'\nconst defaultState ={items: [], page:0}\n\n\nexport default function loader(state = defaultState, action, name) {\n  switch (action.type) {\n    case actionTypes.loadSuccess(pluralize.plural(name)):\n     return {\n       ...state,\n       ...action,\n       items: action.items,\n       max_id: (action.items!==undefined && action.items.length > 0 )? action.items[0].id: null\n     }\n\n    case actionTypes.addSuccess(name):\n        var new_state = {...state,...action, items: state.items}\n        if (action.items !== undefined)  {\n          new_state = {...new_state, items: new_state.items.concat(action.items)}\n        }\n        if (action.item !== undefined) {\n          new_state = {...new_state, items: [...new_state.items, action.item]}\n        }\n        return new_state\n\n    case actionTypes.addSuccess(pluralize.plural(name)):\n      var new_state = {...state,...action, items: state.items}\n      if (action.items !== undefined)  {\n        new_state = {...new_state, items: new_state.items.concat(action.items)}\n      }\n      if (action.item !== undefined) {\n        new_state = {...new_state, items: [...new_state.items, action.item]}\n      }\n      return new_state\n\n    case actionTypes.loadFailed(name):\n      return {\n          ...state\n      }\n    case actionTypes.updateSuccess(name):\n      var newItems   = state.items.map(item => {\n        if (item.id === action.item.id){\n          return action.item\n        }\n        return item\n      }) \n      console.log(newItems)\n      if (newItems.length ===0) {\n        newItems.push(action.item)\n        console.log(newItems)\n      }\n\n      return {\n          ...state,\n          items: newItems,\n          selected: action.item\n      }\n    case actionTypes.deleteSuccess(name):\n      return {\n        ...state,\n        items: state.items.filter(function(item,index,arr){\n          //return action.items.indexOf(item.id) == -1\n          return action.item.id !== item.id\n        })\n      }\n    case actionTypes.loadItemSuccess(name):\n      return {\n        ...state,\n        loadedItem: action.item\n      }\n\n    case  actionTypes.loadItemFailed(name):\n      return {\n        ...state,\n        loadItem: undefined\n      }\n\n    case actionTypes.AUTHENTICATE_FAILED:\n      return  {\n          ...defaultState\n      }\n    case actionTypes.LOG_OUT:\n      return  {\n        ...defaultState\n      }\n\n    default:\n        return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport * as actionTypes from '../actions/actionTypes'\nimport { reducer as formReducer } from 'redux-form'\n\nimport errors  from './errors'\nimport authenticate from './authenticate'\nimport dashboard from './dashboard'\nimport system from './system'\nimport profile from './profile'\nimport account from './account'\nimport modal from './modal'\nimport notifier from './notifier'\nimport loader from './loader'\nimport { connectRouter } from 'connected-react-router'\n\n\nconst rootReducer  = (history) => combineReducers({\n    router: connectRouter(history),\n    errors,\n    authenticate,\n    dashboard,\n    system,\n    profile,\n    account,\n    modal,\n    notifier,\n    events: createReducer(loader,'EVENT'),\n    store:createReducer(loader,'STORE'),\n    regards: createReducer(loader,'REGARD'),\n    departments: createReducer(loader,'DEPARTMENT'),\n    profiles: createReducer(loader,'PROFILE'),\n    donuts: createReducer(loader,\"DONUT\"),\n    account_operations: createReducer(loader,\"ACCOUNT_OPERATION\"),\n    form: formReducer,\n    })\n\nexport default rootReducer\n\nfunction createReducer(reducerFunction, name){\n  return (state, action) => {\n        return reducerFunction(state, action,name)\n    }\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1';\nimport  {initialState} from \"store/initialState\"\nimport createHistory from 'history/createBrowserHistory'\nimport initSubscriber from 'redux-subscriber';\n\n// Create a history of your choosing (we're using a browser history in this case)\nexport const history = createHistory()\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: ['dashboard'],\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst router = routerMiddleware(history)\n\n\nexport  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(\n        applyMiddleware(router),\n        applyMiddleware(thunk),\n    )\n)\n\nconst subscribe = initSubscriber(store);\n\nexport const persistor = persistStore(store)\n","export const initialState = {\n    dashboard: {\n\n    },\n    events: {\n      items:[],\n      page: 0\n    },\n    store: {\n      items:[],\n      page: 0\n    },\n    regards: {\n      items:[],\n      page:0\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor\n} from \"assets/jss/baseStyles\";\n\nconst headerStyle = theme => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: \"#555555\",\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\"\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\"\n  },\n  flex: {\n    flex: 1\n  },\n  title: {\n    ...defaultFont,\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\"\n    }\n  },\n  logo: {\n    height: 50,\n  },\n  appResponsive: {\n    top: \"8px\"\n  },\n  primary: {\n    backgroundColor: primaryColor,\n    color: \"#FFFFFF\",\n    ...defaultBoxShadow\n  },\n  info: {\n    backgroundColor: infoColor,\n    color: \"#FFFFFF\",\n    ...defaultBoxShadow\n  },\n  success: {\n    backgroundColor: successColor,\n    color: \"#FFFFFF\",\n    ...defaultBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor,\n    color: \"#FFFFFF\",\n    ...defaultBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor,\n    color: \"#FFFFFF\",\n    ...defaultBoxShadow\n  }\n});\n\nexport default headerStyle;\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport formStyle from 'assets/jss/components/formStyle'\nimport {renderTextField,renderCheckbox} from 'components/forms/common/render'\nimport { withTranslation, Trans } from \"react-i18next\";\n\nclass LoginForm extends  Component {\n    render() {\n         const { classes} = this.props;\n\n        return (\n                <form onSubmit={this.props.handleSubmit} className={classes.container}>\n                    <Field name=\"username\"\n                           component={renderTextField}\n                           label = \"Username\"\n                           placeholder=\"your email\"\n                           className={classes.textField}\n                           id=\"username\"/>\n                    <br/>\n                    <Field\n                        name=\"password\"\n                        id =\"password\"\n                        label=\"Password\"\n                        component={renderTextField}\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        className={classes.textField}\n                    />\n                    <br/>\n                     <Button\n                        type=\"submit\"\n                        className={classes.button}\n                        color=\"primary\"\n                    >\n                        <Trans>Log in</Trans>\n                    </Button>\n                    <Button\n                       className={classes.button}\n                       onClick = {this.props.recoverToggle}\n                       color=\"secondary\"\n                   >\n                       <Trans>Recover password</Trans>\n                   </Button>\n                </form>\n        )\n    }\n\n}\n\nLoginForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nLoginForm = reduxForm({\n    // a unique name for the form\n    form: 'login'\n})(LoginForm)\n\nexport default withStyles(formStyle)(withTranslation()(LoginForm));\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport formStyle from 'assets/jss/components/formStyle'\nimport {renderTextField,renderCheckbox} from 'components/forms/common/render'\nimport { withTranslation, Trans} from \"react-i18next\";\n\nclass RecoverForm extends  Component {\n    render() {\n         const { classes,t} = this.props;\n        return (\n                <form onSubmit={this.props.handleSubmit} className={classes.container}>\n                <Field\n                    name=\"email\"\n                    id =\"recover_email\"\n                    label={t(\"email\")}\n                    component={renderTextField}\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    className={classes.textField}\n                />\n                <br/>\n                 <Button\n                    type=\"submit\"\n                    className={classes.button}\n                    color=\"primary\"\n                >\n                    <Trans>Change password</Trans>\n                </Button>\n                </form>\n        )\n    }\n\n}\n\nRecoverForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nRecoverForm = reduxForm({\n    // a unique name for the form\n    form: 'recover'\n})(RecoverForm)\n\nexport default withStyles(formStyle)(withTranslation()(RecoverForm));\n","import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport LoginForm from 'components/forms/LoginForm'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport {recoverPassword} from '../../actions/profile/profileActions'\nimport {hideModal} from 'actions/modal/modalActions'\nimport  { Redirect } from 'react-router-dom'\nimport RecoverForm from 'components/forms/RecoverForm'\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: {\n            onLogin: (username,password) => {\n                dispatch(authenticate(username,password))\n            },\n            hideModal: () =>{\n                dispatch(hideModal)\n            },\n            onRecoverPassword: (email) => {\n              dispatch(recoverPassword(email))\n              dispatch(push('/'))\n            }\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        modal: state.modal\n    }\n}\n\n\n\nclass LoginPage  extends  Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          recoverMode: false\n        }\n    }\n    submit = values => {\n        this.props.actions.onLogin(values.username, values.password)\n    }\n\n    recoverModeToggle = () => {\n      this.setState({recoverMode: !this.state.recoverMode})\n    }\n\n    sendRecoverEmail = values => {\n        this.props.actions.onRecoverPassword(values.email)\n    }\n\n    render() {\n\n       if (this.state.recoverMode) {\n         return (\n            <div>\n              <RecoverForm onSubmit ={this.sendRecoverEmail}/>\n            </div>\n          )\n       }\n        return (\n            <div>\n                <LoginForm onSubmit ={this.submit} recoverToggle = {this.recoverModeToggle.bind(this)} authenticate ={this.props.authenticate}/>\n            </div>\n        )\n    }\n    /*render() {\n        if(!this.props.authenticate || !this.props.authenticate.authenticated) {\n            return (\n                <div>\n                    <LoginForm onSubmit ={this.submit} authenticate ={this.props.authenticate}/>\n                </div>\n            )\n        }\n        else {\n            if (this.props.modal !== undefined && this.props.modal.show){\n                this.props.hideModal()\n            }\n            return (\n                <div>\n                    <Redirect to='/'/>\n                </div>\n            )\n        }\n    }*/\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","import AuthenticateApi from 'api/authenticateApi'\n\n\nconst asyncValidate = (values /*, dispatch */) => {\n    return AuthenticateApi.validateEmail(values.email).then((response) => {\n        if (!response.valid) {\n            throw { email: 'That email is taken' };\n        }\n    });\n};\nexport default asyncValidate;\n","import {\n    drawerWidth,\n    drawerCloseWidth,\n    transition,\n    boxShadow,\n    defaultFont,\n    primaryColor,\n    primaryBoxShadow,\n    defaultBoxShadow,\n    grayColor,\n    infoColor,\n    successColor,\n    warningColor,\n    dangerColor\n  } from \"assets/jss/baseStyles.jsx\";\n\nconst registerFormStyle = theme => ({\n    container: {\n        display: 'block',\n    },\n    content: {\n        maxWidth: 600,\n        margin: '0 auto',\n        display: 'flex',        \n      },\n    checkBox: {\n      width: 200\n    },\n    button: {\n        width: 200,\n        display: 'flex',\n        margin: 'auto',\n        padding: 0\n    },\n    cancelButton: {\n        maxWidth: 200,\n        display: 'flex',\n        margin: 'auto',\n        textAlign: 'left',\n        padding: 0,\n        color: grayColor[0]\n    },\n    textField: {\n        width: 250,\n        display: 'flex',\n        margin: 'auto'\n    },\n    caption: {\n        marginTop: 5,\n      }\n});\n\nexport default registerFormStyle;\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport asyncValidate from './asyncValidate'\nimport registerFormStyle from 'assets/jss/components/registerFormStyle'\nimport {renderTextField,renderCheckbox} from 'components/forms/common/render'\n\nimport { withTranslation, Trans } from \"react-i18next\";\n\nconst FORM_NAME ='RegisterForm'\n\nconst validate = values => {\n  const errors = {}\n  const requiredFields = [\n    'first_name',\n    'last_name',\n    'email',\n    'password'\n  ]\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n  return errors\n}\n\n\n\n\nconst radioButton = ({ input, ...rest }) => (\n  <FormControl>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>\n  }\n}\n\n\n\nclass RegisterForm extends  Component {\n\n\n      onReset() {\n         this.props.onReset()\n         this.props.reset()\n      }\n      render() {\n          const { handleSubmit, pristine,  submitting, classes, authenticate } = this.props\n          if(authenticate.registered && !authenticate.confirmed) {\n              return (\n                  <div>\n                      <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                          <Trans>Confirmation email was sent to</Trans> {authenticate.email}\n                      </Typography>\n                  </div>\n              )\n          }else {\n          return (\n          <form onSubmit={handleSubmit}  className={classes.container}>\n            <div>\n              <Field\n                name=\"first_name\"\n                component={renderTextField}\n                label=\"First Name\"\n                className={classes.textField}\n              />\n            </div>\n            <div>\n              <Field name=\"last_name\" component={renderTextField} label=\"Last Name\" className={classes.textField}/>\n            </div>\n            <div>\n              <Field name=\"email\" component={renderTextField} label=\"Email\" className={classes.textField}/>\n            </div>\n \n            <div>\n              <Field\n                name=\"password\"\n                component={renderTextField}\n                label=\"Password\"\n                type=\"password\"\n                className={classes.textField}\n              />\n            </div>\n            <br/>\n              <Button type=\"submit\" disabled={pristine || submitting} className={classes.button} color=\"primary\">\n                Submit\n              </Button>\n              <Button type=\"button\" disabled={pristine || submitting} onClick={this.onReset.bind(this)} className={classes.button}>\n                Clear Values\n              </Button>\n\n          </form>\n          )}\n    }\n}\n\nRegisterForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nRegisterForm =  reduxForm({\n  form: FORM_NAME, // a unique identifier for this form\n  validate,\n  asyncValidate\n})(RegisterForm)\n\nexport default withStyles(registerFormStyle)(withTranslation()(RegisterForm))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport  RegisterForm from 'components/forms/register/RegisterForm'\nimport registerFormStyle from 'assets/jss/components/registerFormStyle'\nimport { Typography, Button } from '@material-ui/core';\nimport  { Redirect } from 'react-router-dom'\nimport { withTranslation, Trans } from \"react-i18next\";\nimport { withStyles } from '@material-ui/core/styles';\n\nclass Register  extends  Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            values:{}\n        }\n    }\n\n    componentWillMount() {\n        this.props.newRegister()\n    }\n\n    submit = values => {\n        this.setState({values: values})\n        let domain  = values.email.replace(/.*@/, \"\")\n        this.props.onFindTenant(domain)\n        //this.props.onRegister(values)\n    }\n\n    reset =(form_name) => {\n       this.setState({values:{}})\n       this.props.onReset()   \n\n    }\n\n    register = () => {\n        this.props.onRegister({...this.state.values, tenant: this.props.profile.tenant})\n    }\n\n\n    render() {\n        const {authenticate,profile,classes} = this.props\n\n        if(authenticate && !authenticate.authenticated && !authenticate.registered) {\n\n              return (\n                  <div  className={classes.container}>\n                      {profile.tenant_loaded && <div className={classes.content}>\n                      <Typography variant=\"button\" className={classes.caption}> {profile.tenant.caption}</Typography>\n                            <Button className={classes.button} variant=\"outlined\" color=\"primary\"  onClick={this.register}>\n                                <Typography variant=\"button\"><Trans>Connect to space</Trans></Typography>\n                            </Button>\n                            <Button className={classes.cancelButton} variant=\"outlined\" onClick={this.reset}>\n                                <Typography variant=\"button\"><Trans>Cancel</Trans></Typography>\n                            </Button>\n                          </div>}\n                      {!profile.tenant_loaded && \n                        <RegisterForm onSubmit ={this.submit} onReset = {this.reset} authenticate ={this.props.authenticate} profile ={this.props.profile}/>\n                        }\n                  </div>\n              )\n        }\n        else\n            return (\n                <div>\n                    <Redirect to='/'/>\n                </div>\n            )\n    }\n}\n\nRegister.propTypes = {\n    onFindTenant: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    onRegister: PropTypes.func.isRequired,\n  };\n\nexport default withStyles(registerFormStyle)(withTranslation()(Register))","import React from 'react'\nimport {connect} from 'react-redux'\nimport {register} from 'actions/authActions'\nimport {loadTenantByDomain} from 'actions/profile/profileActions'\nimport * as actionTypes from \"actions/actionTypes\"\nimport {reset} from 'redux-form';\nimport Register from 'layouts/Register';\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n            onRegister: (registerValues) => {\n                dispatch(register(registerValues))\n            },\n            onFindTenant: (domain) => {\n                dispatch(loadTenantByDomain(domain))\n            },\n            onReset: (form_name) => {\n                dispatch({type: actionTypes.loadFailed('CURRENT_TENANT')})\n            },\n            newRegister: () => {\n                dispatch({type: actionTypes.NEW_REGISTER})\n            }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import {card,flexContainer} from 'assets/jss/baseStyles'\n\n\nconst dashboardStyle = theme => ({\n    placeholder: {\n        height: '30px'\n    },\n    card: {\n        ...card\n    },\n\n    flexContainer: {\n      ...flexContainer\n    },\n\n    flexLine: {\n        flexGrow: 1,\n        height: 1,\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginBottom: 16,\n        fontSize: 14,\n        color: theme.palette.text.secondary,\n    },\n\n    pos: {\n        marginBottom: 12,\n        color: theme.palette.text.secondary,\n    },\n\n    button: {\n        margin: 'auto',\n    },\n    logo: {\n        textAlign: \"center\",\n        display: 'block',\n        maxWidth: \"95%\",\n        maxHeight: 300,\n        margin:'auto',\n        padding:0,\n      [theme.breakpoints.down('xs')]: {\n        width: 200,\n      },\n    },\n    dashboardToolbar: {\n        padding: 0,\n    },\n    dashboardPath: {\n        flex: 1,\n        height: 50,\n        margin: 0,\n        padding: 0,\n    },\n    dashboardMenu: {\n        height: 50,\n        margin: 0,\n        padding: 0\n    },\n    dashboardMenuItem: {\n        height:50,\n        padding: 0,\n        margin:0\n    },\n\n    inlineBlock: {\n        display: 'inline-block',\n        margin: 0,\n        padding: 0,\n        minWidth: 0,\n        textTransform: 'none'\n    }\n});\n\n export default  dashboardStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = theme => ({\n    fabsContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    }\n})\n\n\nfunction Fabs(props) {\n    const { classes,fabs, theme } = props;\n\n    const transitionDuration = {\n        enter: theme.transitions.duration.enteringScreen,\n        exit: theme.transitions.duration.leavingScreen,\n    };\n\n    return (\n      <div className={classes.fabsContainer}>\n          {fabs.map((fab, index) => (\n              <Zoom\n                  key={index}\n                  in={true}\n                  timeout={transitionDuration}\n                  style={{\n                      transitionDelay:  `${0}ms`,\n                  }}\n                  unmountOnExit\n              >\n                  <Button variant=\"extendedFab\"  className={fab.className} color={fab.color}\n                          onClick = {fab.onClick}>\n                      {fab.icon}\n                      {fab.caption}\n                  </Button>\n\n              </Zoom>\n          ))}\n      </div>\n    );\n}\n\nFabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fabs: PropTypes.array,\n};\n\nexport default withStyles(styles, { withTheme: true })(Fabs);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {card} from 'assets/jss/baseStyles'\nimport CakeIcon from '@material-ui/icons/Cake';\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\nimport classNames from 'classnames';\nimport { withTranslation} from \"react-i18next\";\n\nconst styles = theme => ({\n    card: {\n        ...card,\n       minWidth: \"275px\"\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    leftIcon: {\n        marginRight: theme.spacing(2),\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(2),\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass  AccountBalance extends Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        const { classes, title,lastUpdate,balance,shareable,shopable,t,profile } = this.props;\n        return (\n\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        {t(title)}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {balance} {shareable && t('donut', {count: balance})}{shopable && t('point', {count: balance})}\n                        </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {lastUpdate}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" onClick={this.props.onHistory.bind(this,profile)}>{t(\"Details\")}</Button>\n                    {balance>0 && shareable &&<Button size=\"small\" color=\"primary\" onClick={this.props.onShare}>\n                        {t(\"Share\")}\n                        <CakeIcon className={classNames(classes.rightIcon, classes.iconSmall)} />\n                    </Button>}\n                    {balance>0 && shopable &&<Button size=\"small\" color=\"primary\" onClick={this.props.onRedirectToStore}>\n                        {t(\"Go to shop\")}\n                        <LocalMallIcon className={classNames(classes.rightIcon, classes.iconSmall)} />\n                    </Button>}\n                </CardActions>\n            </Card>\n\n        );\n    }\n}\n\nAccountBalance.propTypes = {\n    classes: PropTypes.object.isRequired,\n    getBalance: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    profile: PropTypes.object.isRequired,\n    balance: PropTypes.number.isRequired,\n    shareable: PropTypes.bool.isRequired,\n    shopable: PropTypes.bool.isRequired,\n    lastUpdate: PropTypes.string\n};\n\nexport default withStyles(styles)(withTranslation()(AccountBalance));\n","import {connect} from 'react-redux'\nimport {loadSelfBalance}  from 'actions/profile/profileActions'\nimport AccountBalance from \"components/AccountBalance\";\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getBalance: (profile) => {\n            dispatch(loadSelfBalance(profile.id))\n        },\n        onShop: () => {\n            //dispatch(modalActions.showModal(modals.SHARE_DIALOG, {}))\n        },\n        onRedirectToStore: () => {\n            dispatch(push('donuts'));\n          },\n          onHistory: (profile) => {\n            dispatch(push('/account/'+profile.self_account.id))\n        }\n\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile,\n        balance: state.profile.self_balance,\n        title: \"Self account\",\n        shareable: false,\n        shopable: true,\n    }\n}\n\nconst SelfAccountContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountBalance)\n\n\nexport default  SelfAccountContainer\n","import {connect} from 'react-redux'\nimport {loadDistribBalance}  from 'actions/profile/profileActions'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport AccountBalance from \"components/AccountBalance\";\nimport * as modals from 'modals/modalList'\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        getBalance: (profile) => {\n            dispatch(loadDistribBalance(profile.id))\n        },\n        onShare: () => {\n            dispatch(modalActions.showModal(modals.SHARE_DIALOG, {}))\n        },\n        onHistory: (profile) => {\n            dispatch(push('/account/'+profile.distrib_account.id))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile,\n        balance: state.profile.distrib_balance,\n        title: \"Distrib account\",\n        shareable: true,\n        shopable: false,\n    }\n}\n\nconst DistribAccountContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountBalance)\n\n\nexport default  DistribAccountContainer\n","import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    secondaryCardHeader,\n    whiteColor,\n    infoColor,\n    successColor,\n    dangerColor,\n    infoBoxShadow,\n    successBoxShadow,\n    grayBoxShadow,\n    grayColor,\n    hexToRgb\n  } from \"assets/jss/baseStyles.jsx\";\n  \n\nconst eventsFilterStyle = theme => ({\n   \n      \n});\n export default eventsFilterStyle","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport eventsFilterStyle from 'assets/jss/components/eventsFilterStyle';\nimport { withTranslation, Trans, useTranslation } from \"react-i18next\";\nimport { withStyles } from '@material-ui/core/styles';\nimport GridContainer from './grid/GridContainer';\nimport GridItem from './grid/GridItem';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nclass EventsFilter extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            showMine: false\n        }\n    }\n\n\n\n     handleChange = name =>event => {\n        this.setState({ ...this.state, [name]: event.target.checked }, () =>{\n            this.props.onFilter(this.state)\n        })\n    };\n\n\n    render(){\n        const {t} = this.props\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm ={6} md={4} lg ={3}>\n                    <FormGroup row>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                checked={this.state.showMine}\n                                onChange={this.handleChange('showMine')}\n                                value=\"showMine\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            }\n                            label={t(\"Show only mine\")}\n                        />\n                    </FormGroup>\n\n                </GridItem>\n            </GridContainer>\n        )\n    }\n    \n}\n\n\nexport default withStyles(eventsFilterStyle)(withTranslation()(EventsFilter))","import {flexContainer} from 'assets/jss/baseStyles'\n\n\nconst eventsListStyle = theme => ({  \n    flexContainer: {\n        ...flexContainer\n      },\n    button: {\n        margin: 'auto',\n    }\n});\n\n export default  eventsListStyle;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\nimport EventCard from 'components/EventCard'\nimport ProgressContainer from \"containers/ProgressContainer\";\nimport EventCardContainer from 'containers/EventCardContainer';\nimport EventsFilter from './EventsFilter';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from \"@material-ui/core/Button\";\nimport eventsFilterStyle from 'assets/jss/components/eventsFilterStyle';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport eventsListStyle from 'assets/jss/components/eventsListStyle';\n\nclass  EventList extends Component {\n\n    constructor(props){\n        super(props)\n        this.state ={\n            filter: {\n                showMine: false\n            }\n        }\n\n    }\n\n    componentDidMount() {\n      //this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n      if (this.props.events.page == 0)this.props.loadEvents(this.props.events.page+1)\n    }\n    componentWillUnmount() {\n     // clearInterval(this.interval);\n    }\n\n    filter(filter) {\n        this.setState({filter: {...filter}})\n        this.props.reloadEvents(filter)        \n    }\n    loadMore = () => {\n        console.log(this.state)\n        this.props.loadEvents(this.props.events.page+1,this.state.filter)\n    }\n\n    render() {\n        const {events,classes} = this.props\n        let items = events.items\n        return (\n            <React.Fragment>\n                <EventsFilter onFilter={this.filter.bind(this)}/>\n                <GridContainer>\n                    <ProgressContainer/>                    \n                    {items!==undefined && items.map((post,index) =>(\n                        <GridItem xs={12} sm={12} md={6} lg ={4} key = {index}>\n                            <EventCardContainer  post = {post}/>\n                        </GridItem>\n                        )\n                    )}\n\n                </GridContainer>\n                \n                <DialogActions>\n                    {(events.page+1)*events.per_page<events.total&& <Button  className = {classes.button} onClick={this.loadMore} color=\"primary\" >\n                        <Trans>More</Trans>\n                     </Button>}\n                     </DialogActions>\n            </React.Fragment>\n        )\n    }\n}\n\nEventList.props = {\n    reloadEvents: PropTypes.func.isRequired,\n    loadEvents: PropTypes.func.isRequired\n}\n\n\nexport default withStyles(eventsListStyle)(withTranslation(\"translations\")(EventList));","import {connect} from 'react-redux'\nimport {loadEvents} from \"actions/eventActions\";\nimport EventList from 'components/EventList';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n        loadEvents: (page,filter) => {\n            console.log(filter)\n            dispatch(loadEvents(page,filter))\n        },\n        reloadEvents: (filter) => {\n            dispatch(loadEvents(0,filter))\n        }\n\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n  return {\n      authenticate: state.authenticate,\n      profile: state.profile,\n      events: state.events\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventList)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport dashboardStyle from 'assets/jss/components/dashboardStyle'\nimport Button from \"@material-ui/core/Button\";\nimport ProgressContainer from \"containers/ProgressContainer\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fabs from \"components/Fabs\"\nimport SelfAccountContainer from \"containers/SelfAccountContainer\";\nimport DistribAccountContainer from \"containers/DistribAccountContainer\";\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\nimport EventList from 'components/EventList'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport EventListContainer from 'containers/EventListContainer';\n\nclass Dashboard extends   Component {\n    state = {\n\n    };\n\n    componentDidMount() {\n        //this.props.onRequestUser();\n        if (this.props.page == 0)this.props.loadEvents(this.props.page+1)\n        //TODO: TImer https://medium.com/@machadogj/timers-in-react-with-redux-apps-9a5a722162e8\n    }\n\n    loadMore = () => {\n        this.props.loadEvents(this.props.page+1)\n    }\n\n    doNut() {\n\n    }\n\n    reloadEvents(filter){\n        this.props.reloadEvents(filter)\n    }\n\n    render() {\n        const {classes, profile,t} = this.props\n\n        const fabs = [\n            {\n                color: 'primary',\n                className: classes.fab,\n                icon: <AddIcon />,\n                caption: 'SHARE',\n                onClick: this.doNut.bind(this)\n            },\n            {\n                color: 'primary',\n                className: classes.fab,\n                icon: <AddIcon />,\n                caption: 'TWEET',\n                onClick: this.doNut.bind(this)\n            }\n        ];\n\n\n\n        return (\n            <React.Fragment>\n                <div>\n                    <div className = {classes.flexContainer}>\n                        <hr className = {classes.flexLine}/>\n                        <section><Trans>Balance</Trans></section>\n                        <hr className = {classes.flexLine}/>\n                    </div>\n                    <GridContainer>\n                       {profile.logo!==undefined && profile.logo.url!=undefined&& profile.logo.url!=null &&<GridItem xs={12} sm={12} md={12} className={classes.logo}>\n                           <img className={classes.logo} src={profile.logo.url}/>\n                        </GridItem>}\n                        <GridItem xs={12} sm={6} md={6}>\n                          {profile !== undefined && profile.self_account !== undefined  && <SelfAccountContainer/>}\n                        </GridItem>\n                        <GridItem xs={12} sm={6} md={6}>\n                          {profile !== undefined && profile.distrib_account !== undefined  && <DistribAccountContainer/>}\n                        </GridItem>\n                     </GridContainer>\n                    <div className = {classes.flexContainer}>\n                        <hr className = {classes.flexLine}/>\n                            <section>\n                                <Trans>Events</Trans>\n                            </section>\n                        <hr className = {classes.flexLine}/>\n                    </div>\n                    <EventListContainer/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nDashboard.props = {\n    \n}\nexport default withStyles(dashboardStyle)(withTranslation(\"translations\")(Dashboard));\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport  { Redirect } from 'react-router-dom'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport {loadEvents,likeEvent} from \"actions/eventActions\";\nimport Dashboard from 'layouts/Dashboard'\nimport {push} from 'connected-react-router'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n        onRequestUser: () => {\n            dispatch(loadProfile())\n        },\n        getDistribBalance: (profile) => {\n            dispatch(loadDistribBalance(profile.distrib_account.id))\n        },\n        getSelfBalance: (profile) => {\n            dispatch(loadSelfBalance(profile.self_account.id))\n        },\n        loadEvents: (page,filter) => {\n            dispatch(loadEvents(page,filter))\n        },\n        reloadEvents: (filter) => {\n            dispatch(loadEvents(0,filter))\n        },\n        onRedirectToStore: () => {\n            dispatch(push('donuts'));\n          }\n        }\n}\n\n\nconst  mapStateToProps = (state) => {\n  return {\n      authenticate: state.authenticate,\n      profile: state.profile,\n      events: state.events\n  }\n}\n\n\n\nclass DashboardPage  extends  Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n      if(this.props.authenticate.authenticated) {\n        return (\n                <div>\n                    <Dashboard\n                    onRequestUser = {this.props.onRequestUser}\n                    profile={this.props.profile}\n                    getDistribBalance={this.props.getDistribBalance}\n                    getSelfBalance ={this.props.getSelfBalance}\n                    />\n                </div>\n            )\n\n       }\n       else\n           return (\n               <div>\n                   <Redirect to='/'/>\n               </div>\n           )\n     }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage)\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor\n} from \"assets/jss/baseStyles\";\n\n\nconst homeStyle = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroUnit: {\n    backgroundColor: 'transparent',\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing(8)}px 0 ${theme.spacing(6)}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing(8)}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: 'transparent',\n    padding: theme.spacing(6),\n  },\n});\nexport default  homeStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {push } from 'connected-react-router'\nimport { withTranslation, Trans } from \"react-i18next\";\n\nimport homeStyle from 'assets/jss/components/homeStyle'\n\nclass Home extends React.Component {\n\n\n  handleLogIn = () => {\n      this.props.onLoginRedirect()\n  }\n  handleRegister = () => {\n      this.props.onRegisterRedirect()\n  }\n  handleGuestLogin =() => {\n    this.props.onDemo()\n  }\n\n  render() {\n      const { classes } = this.props;\n      return (\n        <React.Fragment>\n          <main>\n            {/* Hero unit */}\n            <div className={classes.heroUnit}>\n              <div className={classes.heroContent}>\n                <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  Do Nuts\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                  <Trans>CONST_GREETINGS</Trans>\n                </Typography>\n                <div className={classes.heroButtons}>\n                  <Grid container spacing={16} justify=\"center\">\n                    <Grid item>\n                      <Button variant=\"contained\" color=\"primary\" onClick={this.handleGuestLogin}>\n                         Demo\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLogIn}>\n                        Sign In\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleRegister}>\n                        Sign Up\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n\n          </main>\n          {/* Footer */}\n          <footer className={classes.footer}>\n            <Typography variant=\"caption\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            ЦКИ 2019\n            </Typography>\n          </footer>\n          {/* End footer */}\n        </React.Fragment>\n      );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onLoginRedirect: PropTypes.func.isRequired,\n  onRegisterRedirect: PropTypes.func.isRequired,\n};\n\nexport default withStyles(homeStyle)(Home);\n","import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {demo_authenticate} from '../../actions/authActions'\nimport  { Redirect } from 'react-router-dom'\nimport Home from 'layouts/Home'\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n          onLoginRedirect: () => {\n              dispatch(push('/login'))\n          },\n          onRegisterRedirect: () => {\n              dispatch(push('/register'))\n          }, \n          onDemo: () => {\n            dispatch(demo_authenticate())         \n          }       \n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n          authenticate: state.authenticate\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumb = {\n  display: 'flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  //marginBottom: 8,\n  //marginRight: 8,\n  margin: 'auto',\n  width: 200,\n  height: 200,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\n\nfunction Previews(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n\nexport default Previews\n","import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadAccount,loadProfile, saveProfile,saveAvatar} from 'actions/profile/profileActions'\nimport  ProgressContainer from \"containers/ProgressContainer\"\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport Progress from \"components/Progress\";\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport { stat } from 'fs';\nimport Dropzone from 'react-dropzone';\nimport { Button } from '@material-ui/core';\nimport Previews from 'components/Previews';\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport { withStyles } from '@material-ui/core/styles';\nimport UserImage from 'components/UserImage';\n\n\n\nclass User  extends  Component {\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"profile_settings\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: true,\n                initialValues: state.account.data ,\n                formId: \"profile_settings\",\n                fields: [\n               // { name: \"user_avatar\", label: \"Avatar\", md:3,image: true},\n                { name: \"email\", label: \"Email\", xs:12 ,size: \"lg\", disabled: !props.profile.admin},\n                { name: \"first_name\", label: \"Name\", lg:6,size: \"lg\" },\n                { name: \"last_name\", label: \"Surname\", lg:6,size: \"lg\"},\n                { name: \"department\", source: this.props.departments.items, size: \"lg\",disabled: !props.profile.admin},\n                { name: \"position\", label: \"Position\", size: \"lg\"}],\n                submitCaption: \"Save changes\"     \n            }),\n            mapDispatchToProps: dispatch => ({\n                onLoad: this.props.onLoad,\n                onSubmit: this.props.onSubmit\n            \n            })             \n           \n        })\n\n        this.state ={\n            newLoaded: false,\n            preview: null\n        }\n\n        this.generatedForm =  formGenerator.getForm();\n\n    }\n\n    componentDidMount() {\n        URL.revokeObjectURL(this.state.preview)\n    }\n\n    componentWillUnmount() {\n        URL.revokeObjectURL(this.state.preview)\n    }\n    \n    readFile(files) {\n        if (files && files[0]) {\n            let formPayLoad = new FormData();\n            formPayLoad.append('uploaded_image', files[0]);\n            this.props.saveAvatar(formPayLoad)   \n            let preview = URL.createObjectURL(files[0])\n            this.setState({newLoaded:true, preview: preview})                   \n        }\n    }\n\n\n    render() {\n        const {classes,account,saveAvatar} = this.props\n        const GeneratedForm =  this.generatedForm\n        return (\n            <React.Fragment>\n                    <GridContainer>\n                        <GridItem xs={12}  sm={6} lg={6}>\n                         <UserImage account={account.data} saveAvatar={saveAvatar} changeable={true}/>\n                             \n                        </GridItem>\n                        <GridItem xs={12}  sm={6} lg={6}>\n                            <GeneratedForm />\n                        </GridItem>\n                    </GridContainer>\n            </React.Fragment>\n            )\n    }\n}\n\n\nexport default withStyles(userStyle)(withTranslation()(User))\n","import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadAccount,loadProfile, saveProfile,saveAvatar} from 'actions/profile/profileActions'\nimport  ProgressContainer from \"containers/ProgressContainer\"\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport Progress from \"components/Progress\";\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport { stat } from 'fs';\nimport Dropzone from 'react-dropzone';\nimport { Button } from '@material-ui/core';\nimport Previews from 'components/Previews';\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport User from 'layouts/User';\n\nconst img = {\n    display: 'block',\n    maxwidth: 150,\n    maxHeight: 300,\n    margin:0,\n    padding:0\n  };\n  \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLoad: () => {\n            dispatch(loadAccount())\n            let actionsDepartments = new ListActions(apis.departments)\n            dispatch(actionsDepartments.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n            dispatch(saveProfile(item))\n        },\n        saveAvatar: (payLoad) => {\n            dispatch(saveAvatar(payLoad))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        dashboard: state.dashboard,\n        account: state.account,\n        profile: state.profile,\n        system: state.system,\n        departments: state.departments\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User)\n","import * as actionTypes from \"./actionTypes\"\r\nimport  * as commonActions from \"actions/commonActions\"\r\nimport dashboardApi from \"api/dashboardApi\"\r\n\r\nconst name = 'regards'\r\n\r\nexport function loadRegards(page){\r\n    return function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'load',\r\n        name: name, \r\n        apiFunction: dashboardApi.loadRegards,\r\n        args:[page]\r\n      }\r\n\r\n      \r\n      return commonActions.callApi(\r\n          dispatch,options).then(json =>{\r\n              let  regards  = json.regards\r\n              if (regards === undefined) {\r\n                regards = []\r\n              }\r\n              let type\r\n              if (page ==0 || page == 1) {\r\n               type = actionTypes.loadSuccess(name)\r\n              }\r\n              else {\r\n                type = actionTypes.addSuccess(name)\r\n              }  \r\n              commonActions.apiResult(\r\n                dispatch,type,\r\n                {\r\n                    items: regards,\r\n                    per_page: json.headers.get('per-page'),\r\n                    total: json.headers.get('total'),\r\n                    request_date: json.headers.get('request_date'),\r\n                    page: page\r\n                },\r\n                ()=>{return{items: []}}\r\n              )\r\n          }\r\n        )\r\n    }\r\n  }","import {\r\n    primaryColor,\r\n    blackColor,\r\n    hexToRgb\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n  \r\n  const checkboxAndRadioStyle = {\r\n    root: {\r\n      padding: \"13px\"\r\n    },\r\n    checked: {\r\n      color: primaryColor[0] + \"!important\"\r\n    },\r\n    checkedIcon: {\r\n      width: \"20px\",\r\n      height: \"20px\",\r\n      border: \"1px solid rgba(\" + hexToRgb(blackColor) + \", .54)\",\r\n      borderRadius: \"3px\"\r\n    },\r\n    uncheckedIcon: {\r\n      width: \"0px\",\r\n      height: \"0px\",\r\n      padding: \"10px\",\r\n      border: \"1px solid rgba(\" + hexToRgb(blackColor) + \", .54)\",\r\n      borderRadius: \"3px\"\r\n    },\r\n    radio: {\r\n      color: primaryColor[0] + \"!important\"\r\n    },\r\n    radioChecked: {\r\n      width: \"20px\",\r\n      height: \"20px\",\r\n      border: \"1px solid \" + primaryColor[0],\r\n      borderRadius: \"50%\"\r\n    },\r\n    radioUnchecked: {\r\n      width: \"0px\",\r\n      height: \"0px\",\r\n      padding: \"10px\",\r\n      border: \"1px solid rgba(\" + hexToRgb(blackColor) + \", .54)\",\r\n      borderRadius: \"50%\"\r\n    }\r\n  };\r\n  \r\n  export default checkboxAndRadioStyle;\r\n  ","import {\n  defaultFont,\n  primaryColor,\n  blackColor,\n  dangerColor,\n  grayColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/baseStyles.jsx\";\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport checkboxAndRadioStyle from \"assets/jss/checkBoxAndRadioStyle.jsx\";\nconst customTableStyle = theme => ({\n  ...checkboxAndRadioStyle,\n  root: {\n    flexGrow: 1,\n  },\n  tooltip: {\n      padding: \"10px 15px\",\n      minWidth: \"130px\",\n      lineHeight: \"1.7em\",\n      border: \"none\",\n      borderRadius: \"3px\",\n      boxShadow:\n        \"0 8px 10px 1px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 3px 14px 2px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 5px 5px -3px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.2)\",\n      maxWidth: \"200px\",\n      textAlign: \"center\",\n      fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n      fontSize: \"12px\",\n      fontStyle: \"normal\",\n      fontWeight: \"400\",\n      textShadow: \"none\",\n      textTransform: \"none\",\n      letterSpacing: \"normal\",\n      wordBreak: \"normal\",\n      wordSpacing: \"normal\",\n      wordWrap: \"normal\",\n      whiteSpace: \"normal\",\n      lineBreak: \"auto\"\n  },\n\n  button: {\n      font: \"inherit\",\n      textTransform: \"none\"\n  },\n\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n\n  table: {\n    marginBottom: \"0\",\n    overflow: \"visible\",\n    background: whiteColor,\n    maxWidth: \"400px\"\n  },\n  tableRow: {\n    position: \"relative\",\n    borderBottom: \"1px solid \" + grayColor[5]\n  },\n  tableActions: {\n    display: \"block\",\n    textAlign: \"right\",\n    border: \"none\",\n    padding: \"12px 0px !important\",\n    verticalAlign: \"middle\",\n  },\n  tableAvatar: {\n\n  },\n  tableCell: {\n    ...defaultFont,\n    padding: \"8px\",\n    verticalAlign: \"middle\",\n    border: \"none\",//\"1px solid \" + grayColor[5],\n    lineHeight: \"1.42857143\",\n    fontSize: \"14px\",\n    width: \"80%\"\n  },\n\n  tableActionButton: {\n    width: \"30px\",\n    height: \"30px\",\n    padding: \"0\"\n  },\n\n  toolbar: {\n    margin: \"0 0 0 0\",\n    padding: \"0 0 0 0\",\n    minHeight:\"20px\",\n    \n  },\n\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  \n  title: {\n    margin: \"0px\",\n    padding: \"0px\",\n    flexGrow: \"1\"\n  },\n  \n});\nexport default customTableStyle;\n","import React, { Component } from 'react'\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport customTableStyle from \"assets/jss/components/customTableStyle.jsx\";\r\n\r\nlet CustomTableToolbar =props => {\r\n        const { numSelected, classes,children,actions} = props;\r\n        const { t} = useTranslation();\r\n        let tableActions = actions !==undefined ? actions : []\r\n        return (\r\n        <Toolbar\r\n            className={classNames(classes.toolbar, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n          >\r\n          <div className={classes.title}>\r\n            {numSelected > 0 ? (\r\n              <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                {numSelected}   <Trans>selected</Trans>\r\n              </Typography>\r\n            ) : (\r\n              <div>{children}</div>\r\n            )}\r\n          </div>\r\n          <div >\r\n          {tableActions.map(action=>(\r\n            <Tooltip \r\n              key= {action.label.concat(action.id)}\r\n              title={t(action.label)}  \r\n              classes={{ tooltip: classes.tooltip }}\r\n              onClick = {action.onClick}\r\n            >\r\n              <IconButton aria-label={action.label}  className={classes.tableActionButton}>\r\n                {action.icon}\r\n              </IconButton>\r\n            </Tooltip>          \r\n            )\r\n          )}\r\n          </div>\r\n        </Toolbar>\r\n    );       \r\n  }\r\n\r\n\r\nexport default withStyles(customTableStyle)(CustomTableToolbar)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport customTableStyle from \"assets/jss/components/customTableStyle.jsx\";\nimport CustomTableToolbar from \"./CustomTableToolbar\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { Button } from \"@material-ui/core\";\nimport UserAvatar from 'components/UserAvatar';\n\nlet  RowAction = props => {\n  const {item, action, classes} = props\n  const { t, i18n } = useTranslation();\n  return <Tooltip key={item.id + '_' + action.id} id={action.id} title={t(action.label)} placement=\"top\" classes={{ tooltip: classes.tooltip }} onClick={action.onClick(item)}>\n    <IconButton aria-label={action.label} className={classes.tableActionButton}>\n      {action.icon}\n    </IconButton>\n  </Tooltip>;\n}\n\n\n\nclass CustomTable extends React.Component {\n  state = {\n    checked: []\n  };\n\n  handleToggle = item => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(item);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(item);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  handleRowClick(item) {\n      if (this.props.rowClick !==undefined){\n        this.props.rowClick(item)\n      }\n  }\n\n  render() {\n    const { classes, items,actions,checkable} = this.props;\n    const tableCellClasses = classes.tableCell;\n    const tableRowAvatar = classes.tableAvatar\n    return (\n      <React.Fragment>\n            <Table className={classes.table}>\n              <TableBody>\n                {items.map(item => (\n                  <TableRow key={item.id} className={classes.tableRow}>\n                    {checkable && <TableCell className={tableCellClasses}>\n                      <Checkbox\n                        checked={this.state.checked.indexOf(item) !== -1}\n                        tabIndex={-1}\n                        onClick={this.handleToggle(item)}\n                        checkedIcon={<Check className={classes.checkedIcon} />}\n                        icon={<Check className={classes.uncheckedIcon} />}\n                        classes={{\n                          checked: classes.checked,\n                          root: classes.root\n                        }}\n                      />\n                    </TableCell>\n                   }\n                   {item.avatar !==undefined && <TableCell key={item.id+'_avatar'} className={tableRowAvatar}>\n                          <UserAvatar  avatar_url={item.avatar.thumb.url} onClick ={this.handleRowClick.bind(this,item)} />\n                    </TableCell>\n                   }\n                   {item.values.map((value,index)=>(\n                     <TableCell key={item.id+'_'+index} className={tableCellClasses}>\n                          <Button className={classes.button}  onClick ={this.handleRowClick.bind(this,item)}>{value}</Button>\n                     </TableCell>\n                   ))}\n\n                    <TableCell className={classes.tableActions}>\n\n                        {actions.map(action=>(\n                          <RowAction item={item} action={action} classes={classes} key={action.id}/>\n                        ))}\n\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </React.Fragment>\n    );\n  }\n}\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n  checkable: PropTypes.bool\n};\n\nexport default withStyles(customTableStyle)(CustomTable);\n\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/baseStyles.jsx\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\"\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n// core components\nimport cardStyle from \"assets/jss/components/cardStyle.jsx\";\n\nfunction Card({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    plain,\n    profile,\n    chart,\n    ...rest\n  } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool\n};\n\nexport default withStyles(cardStyle)(Card);\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  secondaryCardHeader,\n  whiteColor\n} from \"assets/jss/baseStyles.jsx\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"5px !important\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  secondaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...secondaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n// core components\nimport cardHeaderStyle from \"assets/jss/components/cardHeaderStyle.jsx\";\n\nfunction CardHeader({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    color,\n    plain,\n    stats,\n    icon,\n    ...rest\n  } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"secondary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool\n};\n\nexport default withStyles(cardHeaderStyle)(CardHeader);\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n// core components\nimport cardBodyStyle from \"assets/jss/components/cardBodyStyle.jsx\";\n\nfunction CardBody({ ...props }) {\n  const { classes, className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool\n};\n\nexport default withStyles(cardBodyStyle)(CardBody);\n","import {\n    defaultFont,\n    primaryColor,\n    successColor,\n    blackColor,\n    dangerColor,\n    grayColor,\n    whiteColor,\n    hexToRgb\n  } from \"assets/jss/baseStyles.jsx\";\n  \n  const listStyle = {\n    tableActionButtonIcon: {\n      width: \"27px\",\n      height: \"27px\"\n    },\n    edit: {\n      backgroundColor: \"transparent\",\n      color: primaryColor,\n      boxShadow: \"none\",\n      fontSize: \"30\"\n    },\n    buy: {\n        backgroundColor: \"transparent\",\n        color: successColor[3],\n        boxShadow: \"none\",\n        fontSize: \"30\"\n      },\n    close: {\n      backgroundColor: \"transparent\",\n      color: dangerColor[0],\n      boxShadow: \"none\"\n    }\n  \n  };\n  export default listStyle;\n  ","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// @material-ui/icons\nimport Print from \"@material-ui/icons/Print\";\nimport Store from \"@material-ui/icons/Store\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n\nimport CustomTable from 'components/table/CustomTable';\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\n\nimport Card from \"components/card/Card.jsx\";\nimport CardHeader from \"components/card/CardHeader.jsx\";\nimport CardBody from \"components/card/CardBody.jsx\";\nimport { withTranslation, Trans } from \"react-i18next\";\n\n\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\n\nconst items_mock = [\n  {\n    id: 111,\n    values: ['Один день отпуска без зп','2019-01-01'],\n  },\n  {\n    id: 222,\n    values: ['Час на Бали','2019-01-01']\n  },\n  {\n    id: 223,\n    values: ['Два часа на Бали','2019-01-01']\n  },\n  {\n    id: 1231,\n    values: ['Ужин с Саакашвилли','2019-01-01']\n  },\n  {\n    id: 123,\n    values: ['Литр чачи','2019-01-01']\n  }\n\n]\n\nconst getActivatedItems = (items) =>{\n  return items.filter(item=>{\n          if (item.status===2)  return item\n        }\n  )\n}\n\nconst notActivatedItems = (items) =>{\n  return items.filter(item=>{\n          if (item.status===0)  return item\n        }\n  )\n}\n\nclass Regards extends React.Component {\n  componentDidMount(){\n    //if (this.props.regards.page == 0)this.props.loadRegards()\n      //this.props.regards.page = this.props.regards.page + 1\n      this.props.loadRegards()\n\n  }\n\n  onPrint(item) {\n    console.log(item)\n    this.props.onPrint(item)\n  }\n\n  redirectToStore() {\n    this.props.onRedirectToStore()\n  }\n  render() {\n            const { classes,regards} = this.props;\n            let items = regards.items.map(item=>{\n              return {\n                id: item.id, \n                public_uid: item.public_uid,\n                name: item.name, \n                status: item.status,\n                values: [item.donut_name]}\n            })\n\n            let actions = [\n              {\n                id: 'redirectToStore1', \n                label: 'Add', \n                icon: (<Store className={classes.tableActionButtonIcon}/>),\n                onClick: this.redirectToStore.bind(this)\n              }\n\n            ]\n            \n            return (\n              <GridContainer>\n                <GridItem xs={12} sm={6} md={6}>\n                <Card>\n                  <CardHeader color=\"primary\">\n                  <CustomTableToolbar actions={actions}>\n                    <h4 className={classes.cardTitleWhite}><Trans>Regards i can use</Trans></h4>\n                  </CustomTableToolbar>\n                  </CardHeader>\n                  <CardBody>\n                  <CustomTable\n                    items = {notActivatedItems(items)}\n                    rowClick={this.onPrint.bind(this)}\n                    actions =  {[\n                        {\n                          icon: (<Print className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\n                          id: 'action_print_regard',\n                          label: 'Print',\n                          onClick: (item) => this.onPrint.bind(this,item)\n                        },\n                      ]}\n                    checkable = {false}\n                  />\n                  </CardBody>\n                  </Card>\n                 </GridItem>\n                 <GridItem xs={12} sm={6} md={6}>\n                 <Card>\n                  <CardHeader color=\"secondary\">\n                  <CustomTableToolbar>\n                    <h4 className={classes.cardTitleWhite}><Trans>Already used regards</Trans></h4>\n                  </CustomTableToolbar>\n                  </CardHeader>\n                  <CardBody>\n                  <CustomTable\n                    items = {getActivatedItems(items)}\n                    actions={[]}\n                    checkable = {false}\n                  />\n                      </CardBody>\n                  </Card>\n                 </GridItem>\n              </GridContainer>\n              )\n\n  }\n}\n\nexport default withStyles(listStyle)(Regards);\n","import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadRegards} from \"actions/regardsActions\"\nimport Regards from \"layouts/Regards\"\nimport {push} from 'connected-react-router'\n\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadRegards: () => {\n        dispatch(loadRegards(1))\n      },\n      onPrint: (regard) => {\n        dispatch(modalActions.showModal(modals.REGARDS_PRINT, {public_uid: regard.public_uid, title: regard.values[0], name: regard.name}))\n      },\n      onRedirectToStore: () => {\n        dispatch(push('donuts'));\n      },\n      onRequest: (regard) => {\n        \n      }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        profile: state.profile,\n        regards: state.regards\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Regards)\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\nimport { useTranslation, Trans,withTranslation } from \"react-i18next\";\n\n\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label:'Donut name' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n  { id: 'expiration_date', numeric: false, disablePadding: false, label: 'Expiration date' },\n];\n\n\nclass StoreTableHead extends React.Component {\n\n\n\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    <Trans>{row.label}</Trans>\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this,\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nStoreTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default  withTranslation()(StoreTableHead);\n","\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport { useTranslation, Trans } from \"react-i18next\";\n\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing(2),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n      display: 'flex',\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n  toolButton: {\n\n  }\n});\n\nlet StoreToolbar = props => {\n  const { numSelected, classes,onAddItem, onEditItem,onDeleteItem, onBuyItem } = props;\n  const { t, i18n } = useTranslation();\n\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected}   <Trans>selected</Trans>\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            <Trans>Goods</Trans>\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n          {numSelected == 1 &&\n              <Tooltip title={t(\"Edit\")} className={classes.toolButton} onClick={onEditItem}>\n                  <IconButton aria-label=\"Edit\">\n                    <EditIcon />\n                  </IconButton>\n              </Tooltip>\n          }\n          {numSelected == 1 &&\n              <Tooltip title={t(\"Buy\")} className={classes.toolButton} onClick={onBuyItem}>\n                  <IconButton aria-label=\"Buy\">\n                   <AddShoppingCartIcon />\n                  </IconButton>\n              </Tooltip>\n          }\n          {numSelected > 0 ? (\n            <Tooltip title={t(\"Delete\")} className={classes.toolButton} onClick={onDeleteItem}>\n              <IconButton aria-label=\"Delete\">\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title={t(\"Add\")} className={classes.toolButton}>\n              <IconButton aria-label=\"Add\" onClick={onAddItem}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n      </div>\n    </Toolbar>\n  );\n};\n\nStoreToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default withStyles(toolbarStyles)(StoreToolbar);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport { useTranslation, Trans } from \"react-i18next\";\nimport  StoreTableHead from \"./StoreTableHead\"\nimport  StoreToolbar from \"./StoreToolbar\"\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 100,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass Store extends React.Component {\n  state = {\n    order: 'asc',\n    orderBy: 'price',\n    selected: [],\n    page: 0,\n    rowsPerPage: 5,\n  };\n\n\n  componentDidMount = ()=>{\n      this.props.loadStore()\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: this.props.store.items.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleEdit = () =>{\n    if (this.state.selected.length>0){\n      this.props.onEditItem(this.state.selected[0])\n    }\n  }\n\n  handleBuyItem = () => {\n    if (this.state.selected.length>0){\n      this.props.onBuyItem(this.state.selected[0])\n    }\n  }\n\n  handleDelete = () =>{\n    this.props.onDeleteItem(this.state.selected)\n    this.setState({ selected: [] });\n  }\n\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\n    const data = this.props.store.items\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root} elevation={2} >\n        <StoreToolbar\n          numSelected={selected.length}\n          onAddItem = {this.props.onAddItem}\n          onEditItem = {this.handleEdit}\n          onDeleteItem = {this.handleDelete}\n          onBuyItem = {this.handleBuyItem}\n        />\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <StoreTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.id)}\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{n.price}</TableCell>\n                      <TableCell align=\"left\">{n.expiration_date}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Store);\n","\r\nimport * as actionTypes from \"./actionTypes\"\r\nimport  * as commonActions from \"actions/commonActions\"\r\nimport storeApi from \"api/storeApi\"\r\nimport * as notifierActions from \"./notifierActions\"\r\nconst name = 'ASSET'\r\n\r\nexport function buyAsset(donut){\r\n    return function(dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'add',\r\n        name: name, \r\n        apiFunction:storeApi.buyAsset,\r\n        args:[donut.id]\r\n      }\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n            commonActions.apiResult(dispatch,actionTypes.addSuccess(name),json.regard)\r\n            dispatch(notifierActions.enqueueSnackbar({\r\n              message: \"You have successfully bought a new donut\",\r\n              message2: \"  '\" +json.regard.donut_name +\"'\",              \r\n              options: {\r\n                  variant: 'success',\r\n              }\r\n            })\r\n            )\r\n          })      \r\n    }\r\n }\r\n  ","import React, { PropTypes,Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadStore, showItem, updateItem} from \"actions/storeActions\"\nimport Store from 'components/store/Store'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as storeActions from \"actions/storeActions\"\nimport * as assetActions from \"actions/assetActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadStore: () => {\n        dispatch(loadStore())\n      },\n      onAddItem: () => {\n          dispatch(modalActions.showModal(modals.NEW_STORE_ITEM, {}))\n      },\n      onEditItem: (id) => {\n          dispatch(showItem(id))\n      },\n      onDeleteItem: (ids) => {\n          var items = ids.map(id=>{\n            return {id}\n          })\n          dispatch(storeActions.removeItem(items))\n      },\n      onBuyItem: (id) => {\n        dispatch(assetActions.buyAsset(id))\n      }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        dashboard: state.dashboard,\n        profile: state.profile,\n        store: state.store\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store)\n","import {\n    defaultFont,\n    primaryColor,\n    blackColor,\n    dangerColor,\n    grayColor,\n    whiteColor,\n    hexToRgb\n  } from \"assets/jss/baseStyles.jsx\";\n  \n  const settingStyle = {\n  \n  \n  };\n  export default settingStyle;\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport DynamicForm from 'components/forms/DynamicForm';\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\nimport StorePage from \"containers/pages/StorePage\";\nimport Card from \"components/card/Card.jsx\";\nimport CardHeader from \"components/card/CardHeader.jsx\";\nimport CardBody from \"components/card/CardBody.jsx\";\nimport { withTranslation, Trans } from \"react-i18next\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport settingsStyles from \"assets/jss/layouts/settingsStyles.jsx\";\nimport { Button } from '@material-ui/core';\nimport Dropzone from 'react-dropzone';\n\nconst share_all = 'share_all'\nconst activate_code='activate_code'\nclass Settings extends Component {\n  componentDidMount() {\n    this.props.loadUsers();\n  }\n  click = (values) => {\n    let profile_ids = this.props.dashboard.profiles.map(profile => profile.id);\n    this.props.onShare(values.points, profile_ids, values.message,share_all,values.burn_old);\n  };\n\n  activate = (values) => {\n    this.props.onActivate(values.code, activate_code);\n  }\n\n  readFile(files) {\n    if (files && files[0]) {\n        let formPayLoad = new FormData();\n        formPayLoad.append('uploaded_image', files[0]);\n        this.props.saveLogo(formPayLoad)   \n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    return (<GridContainer>\n      <GridItem xs={12} sm={6} md={6}>\n        <Card>\n          <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}><Trans>New points for all users</Trans></h4>\n          </CardHeader>\n          <CardBody>\n          <DynamicForm \n            formId={share_all} \n            fields={[\n              { name: \"points\", xs:12,sm:12,md:12,lg:6 },\n              { name: \"message\",xs:12,sm:12,md:12,lg:6,size:\"lg\", multiline:true, rows: \"5\",column:2 },\n              { name: \"burn_old\",label:\"Burn old points\",xs:12,size:\"lg\", checkbox: true },\n            ]} \n            columns= {[\n              {id:1, xs:6},\n              {id:2, xs:6}\n            ]}\n            submitCaption={\"Send to all\"}             \n            onSubmit={this.click.bind(this)} \n          />\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem xs={12} sm={6} md={6}>\n      <Card>\n          <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}><Trans>Activate regard code</Trans></h4>\n          </CardHeader>\n          <CardBody>\n        <DynamicForm formId={activate_code} fields={[{ name: \"code\" }]} submitCaption={\"Activate\"} color=\"info\" onSubmit={this.activate.bind(this)}/>\n        </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem xs={12} sm={12} md={12}>\n        <StorePage />\n      </GridItem>\n      <GridItem xs={12} sm={12} md={12}>\n      <Dropzone   accept={'image/*'} onDrop={acceptedFiles => this.readFile(acceptedFiles)}>\n                            {({getRootProps, getInputProps}) => (\n                                <section>\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <p className={classes.caption}><Trans>Click to select files</Trans></p>\n                                </div>\n                                </section>\n                            )}\n       </Dropzone> \n      </GridItem>\n      \n    </GridContainer>);\n  }\n}\n\nexport default withStyles(settingsStyles)(Settings)","import {connect} from 'react-redux'\r\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\r\nimport Button from '@material-ui/core/Button';\r\nimport SimpleFieldForm from 'components/forms/SimpleFieldForm'\r\nimport Settings  from '../../layouts/Settings';\r\nimport { reset, reduxForm } from \"redux-form\";\r\nimport apis  from 'api/apiRoot'\r\nimport ListActions from \"actions/listActions\"\r\nimport * as notifierActions from \"actions/notifierActions\"\r\nimport {migrateAvatars,saveLogo} from 'actions/tenantActions'\r\n\r\nconst activateCallback = (acivate_form_id) => {\r\n  return {\r\n      success: (dispatch,response) => {\r\n        dispatch(notifierActions.enqueueSnackbar({\r\n          message: 'Regard activated',\r\n          options: {\r\n              variant: 'success',\r\n          }\r\n        })      \r\n        )\r\n        dispatch(reset(acivate_form_id))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n      onShare: (amount, profile_ids,comment,form_id,burn_old) => {\r\n          dispatch(sendPoints(amount, null, profile_ids,comment, true,true,burn_old))\r\n          dispatch(reset(form_id))\r\n      },\r\n      loadUsers: () => {\r\n\r\n        dispatch(loadUsers())\r\n      },\r\n      migrateAvatars: () => {\r\n        dispatch(migrateAvatars())\r\n      },\r\n      onActivate: (code,form_id) => {\r\n        let actions = new ListActions(apis.regards)\r\n        dispatch(actions.updateItem({public_uid:code, status: 2},activateCallback(form_id)))\r\n      },\r\n      saveLogo: (payLoad) => {\r\n        dispatch(saveLogo(payLoad))\r\n    }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        dashboard: state.dashboard,\r\n        profile: state.profile\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\r\n","import * as actionTypes from \"actions/actionTypes\"\nimport * as actions from \"actions/actionTypes\"\nimport  * as commonActions from \"actions/commonActions\"\nimport *  as notifierActions from \"actions/notifierActions\"\nimport tenantApi from 'api/tenantApi'\n\n\n\nexport function migrateAvatars(domain){\n  return function(dispatch){\n        const options = {\n        useToken: true,\n        action: 'migrate',\n        name: 'avatars', \n        apiFunction:tenantApi.migrateAvatars,\n        args:[]\n        }\n\n        return commonActions.callApi(dispatch,options).then(json=>{\n        commonActions.apiResult(dispatch,\"MIGRATE_SUCCESS\",{})\n        dispatch(notifierActions.enqueueSnackbar({\n            message: \"migrated\",\n            options: {\n                variant: 'success',\n            }\n        }))\n        })\n    }\n}\n\nexport function saveLogo(payLoad) {\n    return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'save',\n        name: 'logo', \n        apiFunction: tenantApi.saveLogo,\n        args:[payLoad]\n      }    \n  \n        return commonActions.callApi(\n            dispatch,options).then(json =>{\n              commonActions.apiResult(dispatch,\"SAVE_LOGO_SUCCESS\", {} )\n              dispatch(notifierActions.enqueueSnackbar({\n                message: \"saved\",\n                options: {\n                    variant: 'success',\n                }\n            }))\n            })\n    }\n  \n  }\n","const confrimEmailStyle = theme => ({\n    root: {\n        height: \"100%\",\n        margin: 0,\n        padding: 0\n    },\n    container: {\n        display: 'block',\n    },\n    vertical_center: {\n        width: \"90%\",\n        position: \"absolute\",\n        top: \"30%\",\n        margin: 0,\n        padding: 0\n    },\n    button: {\n        width: 200,\n        display: 'flex',\n        margin: 'auto'\n    },\n    textField: {\n        width: 250,\n        display: 'flex',\n        margin: 'auto'\n    },\n});\n\nexport default confrimEmailStyle;\n","import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\nimport Button from '@material-ui/core/Button';\nimport confrimEmailStyle from 'assets/jss/components/confrimEmailStyle'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport {loadByToken, confirmEmail} from 'actions/profile/profileActions';\nimport  { Redirect } from 'react-router-dom'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadByToken: (confirm_token) => {\n         dispatch(loadByToken(confirm_token))\n      },\n\n      confirmEmail: (confirm_token) => {\n        dispatch(confirmEmail(confirm_token))\n      },\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        authenticate: state.authenticate,\n        profile: state.profile\n      }\n}\n\n\n\nclass ConfirmEmailPage  extends  Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.loadByToken(this.props.match.params.token)\n    }\n\n    click = () => {\n        this.props.confirmEmail(this.props.match.params.token)\n    }\n    render() {\n\n        const {classes, profile} = this.props\n          if (profile.user_not_found || profile.confirmed)  {\n            return (\n              <Redirect to= '/dashboard'/>\n            )\n          }\n          return (\n             <div className={classes.root}>\n                    <div className={classes.vertical_center}>\n                      <Button onClick={this.click} className={classes.button} color=\"secondary\" >\n                          <Trans>Confirm</Trans>\n                      </Button>\n                    </div>\n            </div>\n            )\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(confrimEmailStyle)(withTranslation()(ConfirmEmailPage)))\n","import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport formStyle from 'assets/jss/components/formStyle'\nimport {renderTextField,renderCheckbox} from 'components/forms/common/render'\nimport { withTranslation, Trans} from \"react-i18next\";\n\nclass NewPasswordForm extends  Component {\n    render() {\n         const { classes,t} = this.props;\n        return (\n                <form onSubmit={this.props.handleSubmit} className={classes.container}>\n                <Field\n                    name=\"new_password\"\n                    id =\"new_password\"\n                    label={t(\"new password\")}\n                    component={renderTextField}\n                    type=\"password\"\n                    autoComplete=\"off\"\n                    className={classes.button}\n                />\n                <br/>\n                 <Button\n                    type=\"submit\"\n                    className={classes.textField}\n                    color=\"primary\"\n                >\n                    <Trans>Change password</Trans>\n                </Button>\n                </form>\n        )\n    }\n\n}\n\nNewPasswordForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nNewPasswordForm = reduxForm({\n    // a unique name for the form\n    form: 'recover'\n})(NewPasswordForm)\n\nexport default withStyles(formStyle)(withTranslation()(NewPasswordForm));\n","import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport confrimEmailStyle from 'assets/jss/components/confrimEmailStyle'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport {loadByRecoverToken, updatePassword} from 'actions/profile/profileActions';\nimport  { Redirect } from 'react-router-dom'\nimport NewPasswordForm from 'components/forms/NewPasswordForm'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadByRecover: (recover_token) => {\n         dispatch(loadByRecoverToken(recover_token))\n      },\n\n      recover: (recover_token,password) => {\n        dispatch(updatePassword(recover_token,password))\n      },\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        authenticate: state.authenticate,\n        profile: state.profile\n      }\n}\n\n\n\nclass NewPasswordPage  extends  Component {\n    componentDidMount() {\n        this.props.loadByRecover(this.props.match.params.token)\n    }\n\n    click = (values) => {\n        console.log(values)\n        this.props.recover(this.props.match.params.token, values.new_password)\n    }\n    render() {\n\n        const {classes, profile,authenticate} = this.props\n          if (profile.user_not_found || profile.confirmed || authenticate.authenticated)  {\n            return (\n              <Redirect to= '/dashboard'/>\n            )\n          }\n          return (\n             <div className={classes.root}>\n                    <div className={classes.vertical_center}>\n                    <NewPasswordForm onSubmit={this.click}/>\n                    </div>\n            </div>\n            )\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(confrimEmailStyle)(withTranslation()(NewPasswordPage)))\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle\";\r\n\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass Departments extends Component {\r\n    componentDidMount(){\r\n        this.props.loadItems()    \r\n      }\r\n    \r\n      onDelete(item) {\r\n        this.props.onDelete(item)\r\n      }\r\n\r\n      onAdd() {\r\n          this.props.onAdd();\r\n      }\r\n      \r\n      onEdit(item) {\r\n        this.props.onEdit(item)\r\n      } \r\n  \r\n      render() {\r\n                const { classes,departments} = this.props;\r\n                let items =[]\r\n                if (departments !==undefined && departments.items !== undefined){                \r\n                    items = departments.items.map(item=>{\r\n                    return {\r\n                        id: item.id, \r\n                        public_uid: item.public_uid,\r\n                        name: item.name, \r\n                        head_profile: item.head_profile,\r\n                        values: [item.name]}\r\n                    })\r\n                }\r\n    \r\n                let actions = [\r\n                  {\r\n                    id: 'add_new_department', \r\n                    label: 'Add', \r\n                    icon: (<Add className={classes.tableActionButtonIcon}/>),\r\n                    onClick: this.onAdd.bind(this)\r\n                  }\r\n    \r\n                ]\r\n                return (\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={6} md={6}>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>Departments</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {items}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Delete className={classes.tableActionButtonIcon + \" \" + classes.delete}/>),\r\n                              id: 'delete_depratment_action',\r\n                              label: 'Delete',\r\n                              onClick: (item) => this.onDelete.bind(this,item)\r\n                            },\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_depratment_action',\r\n                              label: 'Edit',\r\n                              onClick: (item) => this.onEdit.bind(this,item)\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                     </GridItem>                     \r\n                  </GridContainer>\r\n                  )\r\n    \r\n    }\r\n}\r\nexport default withStyles(listStyle)(Departments);","import React, {Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ListActions from \"actions/listActions\"\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport apis  from 'api/apiRoot'\r\nimport Departments from '../../layouts/Departments';\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      loadItems: () => {\r\n          let actions = new ListActions(apis.departments)\r\n          dispatch(actions.loadItems())\r\n      },\r\n\r\n      onAdd: () => {\r\n        dispatch(modalActions.showModal(modals.EDIT_DEPARTMENT, {}))\r\n      },\r\n\r\n      onEdit: (item) => {\r\n        dispatch(modalActions.showModal(modals.EDIT_DEPARTMENT, item))\r\n      },\r\n\r\n      onDelete:()=> {\r\n\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        profile: state.profile,\r\n        departments: state.departments\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Departments)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/icons\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\n\r\nclass People extends React.Component {\r\n  componentDidMount(){\r\n      this.props.loadProfiles()\r\n  }\r\n\r\n  open(profile) {\r\n    let disabled = !this.props.profile.admin\r\n    this.props.onEdit(profile,disabled)\r\n  }\r\n\r\n\r\n  getProfiles(items, department){\r\n        return items.filter(item=>item!==null && \r\n          (\r\n            (item.department===null && department===null)\r\n              || \r\n            (item.department!==null && department!==null && item.department.id===department.id)\r\n          )\r\n          ).map(profile =>{\r\n          return {\r\n            id: profile.id, \r\n            ...profile,\r\n            values: [profile.name],\r\n            avatar: profile.user_avatar\r\n          }\r\n        })\r\n  }\r\n\r\n  getDepartmenrsSorted(departments){\r\n\r\n    return departments.sort((a,b) =>{\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n   \r\n      return 0;\r\n    })\r\n  }\r\n \r\n\r\n  render() {\r\n            const { classes,profiles,departments} = this.props;\r\n            let actions = [\r\n             \r\n\r\n            ]\r\n\r\n            const withoutDep =  this.getProfiles(profiles.items,null)\r\n            \r\n            return (\r\n              <React.Fragment>\r\n                 {withoutDep.length>0 &&<GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                      <CardHeader color=\"secondary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>Without depratment</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {withoutDep}\r\n                        rowClick={this.open.bind(this)}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_user',\r\n                              label: 'Edit',\r\n                              onClick: (item) => this.open.bind(this,item)\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                    </GridItem>                \r\n                  </GridContainer>}\r\n                {this.getDepartmenrsSorted(departments.items).map(department =>\r\n                  <GridContainer key={department!==null ? department.id: \"undefined_department\"}>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>{department!== null?department.name: \"Without depratment\"}</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {this.getProfiles(profiles.items,department)}\r\n                        rowClick={this.open.bind(this)}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_user',\r\n                              label: 'Edit',\r\n                              onClick: (item) => this.open.bind(this,item)\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                    </GridItem>                \r\n                  </GridContainer>\r\n                  )}\r\n              </React.Fragment>\r\n              )\r\n\r\n  }\r\n}\r\n\r\nexport default withStyles(listStyle)(People);\r\n","import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadProfiles} from \"actions/profile/profileActions\"\nimport Regards from \"layouts/Regards\"\nimport {push} from 'connected-react-router'\n\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nimport Profiles from 'layouts/Profiles';\nimport ListActions from 'actions/listActions';\nimport apis  from 'api/apiRoot'\nimport { stat } from 'fs';\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadProfiles: () => {\n        let listActions = new ListActions(apis.profiles)\n        dispatch(listActions.loadItems())\n        listActions = new ListActions(apis.departments)\n        dispatch(listActions.loadItems())\n      },\n      onEdit: (profile,disabled) => {\n        dispatch(modalActions.showModal(modals.PROFILE_EDIT, {...profile,disabled:disabled}))\n      },\n     \n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        profiles: state.profiles,\n        profile: state.profile,\n        departments: state.departments\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiles)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport CustomTable from 'components/table/CustomTable';\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\n\nimport Card from \"components/card/Card.jsx\";\nimport CardHeader from \"components/card/CardHeader.jsx\";\nimport CardBody from \"components/card/CardBody.jsx\";\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\n\nimport Add from \"@material-ui/icons/Add\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Shop from \"@material-ui/icons/Shop\";\n\n\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\n\nimport { withTranslation, Trans } from \"react-i18next\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nclass Donuts extends Component {\n    componentDidMount(){\n        this.props.loadItems()    \n      }\n    \n      onBuy(item) {\n        this.props.onBuy(item)\n      }\n\n\n  \n      render() {\n                const { classes,donuts} = this.props;\n                let items =[]\n                if (donuts !==undefined && donuts.items !== undefined){                \n                    items = donuts.items.map(item=>{\n                    return {\n                        id: item.id, \n                        name: item.name,                         \n                        values: [item.name,item.price]}\n                    })\n                }\n    \n                let actions = [\n     \n                ]\n                return (\n                  <GridContainer>\n                    <GridItem xs={12} sm={6} md={6}>\n                    <Card>\n                      <CardHeader color=\"primary\">\n                      <CustomTableToolbar actions={actions}>\n                        <h4 className={classes.cardTitleWhite}><Trans>Donuts</Trans></h4>\n                      </CustomTableToolbar>\n                      </CardHeader>\n                      <CardBody>\n                      <CustomTable\n                        items = {items}\n                        actions =  {[\n                             {\n                              icon: (<Shop className={classes.tableActionButtonIcon + \" \" + classes.buy}/>),\n                              id: 'buy_donut',\n                              label: 'Buy',\n                              onClick: (item) => this.onBuy.bind(this,item)\n                            },\n                          ]}\n                        checkable = {false}\n                      />\n                      </CardBody>\n                      </Card>\n                     </GridItem>                     \n                  </GridContainer>\n                  )\n    \n    }\n}\nexport default withStyles(listStyle)(Donuts);","import React, { PropTypes,Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadStore, showItem, updateItem} from \"actions/storeActions\"\nimport Store from 'components/store/Store'\nimport * as assetActions from \"actions/assetActions\"\nimport * as modals from 'modals/modalList'\nimport apis  from 'api/apiRoot'\nimport * as storeActions from \"actions/storeActions\"\nimport ListActions from 'actions/listActions';\nimport Donuts from 'layouts/Donuts';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadItems: () => {\n        let actions  = new ListActions(apis.donuts)\n        dispatch(actions.loadItems())\n      },\n      onBuy: (item) => {\n        dispatch(assetActions.buyAsset(item))\n      }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        dashboard: state.dashboard,\n        profile: state.profile,\n        donuts: state.donuts\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Donuts)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport CustomTable from 'components/table/CustomTable';\nimport GridItem from \"components/grid/GridItem.jsx\";\nimport GridContainer from \"components/grid/GridContainer.jsx\";\n\nimport Card from \"components/card/Card.jsx\";\nimport CardHeader from \"components/card/CardHeader.jsx\";\nimport CardBody from \"components/card/CardBody.jsx\";\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\n\nimport Add from \"@material-ui/icons/Add\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\n\n\nimport listStyle from \"assets/jss/layouts/listStyle\";\n\nimport { withTranslation, Trans } from \"react-i18next\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nclass AccountOperations extends Component {\n    componentDidMount(){\n        this.props.loadItems()    \n      }\n    \n  \n      render() {\n                const { classes,account_operations} = this.props;\n                let items =[]\n                if (account_operations !==undefined && account_operations.items !== undefined){                \n                    items = account_operations.items.map(item=>{\n                    return {\n                        id: item.id, \n                        sum: item.direction*item.amount,\n                        comment: item.comment, \n                        created_at:  item.created_at!==null ?item.created_at:\"-\",\n                        values: [\n                            item.created_at!==null ?item.created_at:\"-\",\n                            item.direction*item.amount,\n                            item.comment!==null ?item.comment:\"\",\n                        ]}\n                    })\n                    items = items.sort((a,b) =>{\n                        if (a.created_at > b.created_at) {\n                          return -1;\n                        }\n                        if (a.created_at < b.created_at) {\n                          return 1;\n                        }\n                     \n                        return 0;\n                      })\n                }\n    \n                let actions = [\n                \n    \n                ]\n                return (\n                  <GridContainer>\n                    <GridItem xs={12} >\n                    <Card>\n                      <CardHeader color=\"primary\">\n                      <CustomTableToolbar actions={actions}>\n                        <h4 className={classes.cardTitleWhite}><Trans>History</Trans></h4>\n                      </CustomTableToolbar>\n                      </CardHeader>\n                      <CardBody>\n                      <CustomTable\n                        items = {items}\n                        actions =  {[\n                           \n                          ]}\n                        checkable = {false}\n                      />\n                      </CardBody>\n                      </Card>\n                     </GridItem>                     \n                  </GridContainer>\n                  )\n    \n    }\n}\nexport default withStyles(listStyle)(AccountOperations);","import React, { PropTypes,Component } from 'react'\nimport {connect} from 'react-redux'\nimport Store from 'components/store/Store'\nimport { loadAccount } from 'actions/profile/profileActions';\nimport ListActions from 'actions/listActions';\nimport apis from 'api/apiRoot'\nimport AccountOperations from 'layouts/AccountOperations';\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        loadItems: () => {\n            let listAction = new ListActions(apis.account_log)\n            dispatch(listAction.loadItems({id: props.match.params.id}))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        account_operations: state.account_operations,\n        profile: state.profile,\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountOperations)","import React from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\n import { withTranslation, Trans } from \"react-i18next\";\n import { withStyles } from '@material-ui/core/styles';\nimport leaderBoardStyle from 'assets/jss/components/leaderBoardStyle';\n\nexport  class Leaderboard extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      width: 100,\n      height: 100, \n    }\n  }\n\n  componentWillMount(){\n    this.setState({height: this.props.height})\n  }\n\n  render() {\n    const {items,t,classes} = this.props;\n    const sortedItems = items.sort((a,b)=>{\n      if (a.score_total > b.score_total) {\n        return -1;\n      }\n      if (a.score_total < b.score_total) {\n        return 1;\n      }\n   \n      return 0;\n    })\n\n    const labels = sortedItems.map(item=> item.name)\n    const data = {\n        labels: labels,\n        datasets: [\n          {\n            label: t('points'),\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: sortedItems.map(item=>{return item.score_total})\n            \n          }\n        ]\n      };\n\n    return (\n      <div>\n        <h2><Trans>{this.props.caption}</Trans></h2>\n        <div>\n        <HorizontalBar data={data} \n          height={this.state.height}\n          width ={this.state.width} \n          options={{ maintainAspectRatio: false,responsive:true }}/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withTranslation()(Leaderboard)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Leaderboard from 'components/charts/Leaderboard';\nimport ProgressContainer from 'containers/ProgressContainer';\nimport { Button, Typography } from '@material-ui/core';\n\n\n\nexport default class Statistic extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            show_score: true,\n            show_balance: false,\n            show_sent: false,\n            caption: \"Всего получено\"\n        }\n    }\n    componentDidMount(){\n        this.props.onLoad({show_score: true})\n    }\n\n    showScore = (event) => {\n       this.setState({\n        show_score: true,\n        show_balance: false,\n        show_sent: false,\n        caption: \"Всего получено\"\n        },  () =>{this.props.onLoad(this.state)})\n    };\n    \n    showBalance = (event) => {\n        this.setState({\n            show_score: false,\n            show_balance: true,\n            show_sent: false,\n            caption: \"Сейчас могут потратить\"\n            },  () =>{this.props.onLoad(this.state)})\n    };\n\n    showSent = (event) => {\n        this.setState({\n            show_score: false,\n            show_balance: false,\n            show_sent: true,\n            caption: \"Всего подарено\"\n            },   () =>{this.props.onLoad(this.state)})\n    }; \n\n    render() {\n       // let items =new Array(100)\n       // for (var i = 0;i<100;i++){\n        //    items[i] = {name: 'Peter'+i, score_total: Math.random()*100}\n       // }\n       // console.log(items)\n        let items = this.props.profiles.items\n        return (\n            <div>      \n                <Button onClick={this.showScore}>Всего получено</Button>\n                <Button onClick={this.showBalance}>Сейчас могут потратить</Button>\n                <Button onClick={this.showSent}>Всего подарено</Button>\n                {items.length >0 && \n                    <Leaderboard items = {items} height={items.length*30+100} caption = {this.state.caption}/>\n                }\n                {items.length == 0 && <ProgressContainer/>}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport Statistic from 'layouts/Statistic';\nimport ListActions from 'actions/listActions';\nimport apis  from 'api/apiRoot'\nconst mapDispatchToProps = (dispatch) => {\n    return {\n            onLoad: (args) =>{\n                let listActions = new ListActions(apis.profiles)\n                dispatch(listActions.loadItems(args))\n            }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        profiles: state.profiles,\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistic)\n","import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport * as notifierActions from \"actions/notifierActions\"\nimport { reset, reduxForm } from \"redux-form\";\nimport ProgressContainer from 'containers/ProgressContainer';\n\nconst commentCallback = (form_id) => {\n    return {\n        success: (dispatch,response) => {\n          dispatch(notifierActions.enqueueSnackbar({\n            message: 'Comment saved',\n            options: {\n                variant: 'success',\n            }\n          })      \n          )\n          dispatch(reset(form_id))\n        }\n      }\n    }\n\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onSubmit: (values) => {  \n            dispatch(commentItem({item: props.event,comment: values.text},commentCallback('new_comment_form')))\n        },\n  \n    }\n}\n\nconst  mapStateToProps = (state, ownProps) => {\n    return{\n      event: ownProps.event\n    }\n}\n\n\n\nexport class EventModal extends Component {\n    componentWillMount(){\n        \n    }\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: false  \n            }),\n            mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n    }\n\n    render() {\n        const {classes, modal,event}  =this.props\n        const GeneratedForm =  this.generatedForm\n        return (\n            <React.Fragment>                \n                <GeneratedForm formId= {\"new_comment_form\"} onCloseModal={this.props.onCloseModal} event ={event}/>\n           </React.Fragment>\n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(EventModal))\n","\nimport React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport NewCommentContainer from 'containers/NewCommentContainer';\n\n\nexport class EventLayout extends Component {\n\n    constructor(props) {\n        super(props);     \n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: true  \n            }),\n           // mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n          \n    }\n    componentDidMount(){\n        this.props.onLoad();\n    }\n\n    render() {\n        const {events}  =this.props\n        return (\n            <React.Fragment>\n                    {events.selected !==undefined &&\n                    <GridContainer >\n                        <GridItem xs = {12} >\n                            <EventCardContainer post = {events.selected} notModal={true}/>\n                        </GridItem>\n         \n                        {events.selected.comments!==null && events.selected.comments.sort((a,b)=>{\n                            return a.id-b.id\n                        }).map((post,index) =>(\n                        <GridItem xs={12}  key = {index}>\n                            <CommentContainer  post = {post}/>\n                        </GridItem>\n                        )\n                        )}               \n                        <GridItem xs={12}>\n                          {\n                              <NewCommentContainer event={events.selected}/>                              \n                          }\n                        </GridItem>\n                    </GridContainer>\n                    }        \n            </React.Fragment>  \n           \n            )\n  }\n}\nexport default withStyles(userStyle)(EventLayout)\n","\nimport {connect} from 'react-redux'\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\n//import apis from 'api/apiRoot'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nimport queryString from 'query-string'\n\nimport { EventLayout } from 'layouts/EventLayout';\nimport { stat } from 'fs';\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onLoad: () => {\n            dispatch(loadEventWithComments(props.match.params.id,))    \n            //const values = queryString.parse(props.location.search)\n            //console.log(values.eventid) \n            //dispatch(modalActions.showModal(modals.EVENT, {event:{id: parseInt(props.match.params.id)}}))\n        },\n        showEventModal: (event) =>{\n            dispatch(modalActions.showModal(modals.EVENT, {event: event}))\n        },\n    }\n}\n\n\nconst  mapStateToProps = (state,props) => {\n      return{\n           profile: state.profile,\n           events: state.events,\n           event_id: props.match.params.id\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventLayout)","\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Person from \"@material-ui/icons/Person\";\nimport Store from \"@material-ui/icons/Store\";\nimport List from \"@material-ui/icons/List\";\nimport Stars from \"@material-ui/icons/Stars\";\nimport People from \"@material-ui/icons/People\";\nimport Settings from \"@material-ui/icons/Settings\";\nimport BarChart from \"@material-ui/icons/BarChart\";\n\nimport LocationOn from \"@material-ui/icons/LocationOn\";\n\n\nimport LoginPage from \"containers/pages/LoginPage\"\nimport RegisterPage from \"containers/pages/RegisterPage\"\nimport  DashboardPage from \"containers/pages/DashboardPage\"\nimport  HomePage from \"containers/pages/HomePage\"\nimport  UserPage from \"containers/pages/UserPage\"\nimport  RegardsPage from \"containers/pages/RegardsPage\"\nimport  SettingsPage from \"containers/pages/SettingsPage\"\nimport  StorePage from \"containers/pages/StorePage\"\nimport ConfirmEmailPage  from \"containers/pages/ConfirmEmailPage\"\nimport NewPasswordPage  from \"containers/pages/NewPasswordPage\"\nimport DepartmentsPage  from \"containers/pages/DepartmentsPage\"\nimport React from 'react'\nimport PeoplePage from \"containers/pages/ProfilesPage\";\nimport DonutsPage from \"containers/pages/DonutsPage\";\nimport AccountOperationsPage from \"containers/pages/AccountOperationsPage\";\nimport StatisticPage from \"containers/pages/StatisticPage\";\nimport EventPage from \"containers/pages/EventPage\";\n\nconst dashboardRoutes = [\n    {\n        path: \"/home\",\n        anonymous: true,\n        authenticated: false,\n        sidebarName: \"Home\",\n        navbarName: \"Home\",\n        icon: LocationOn,\n        hideInMenu: true,\n        active: true,\n        component: HomePage\n    },\n  {\n    path: \"/dashboard\",\n    authenticated: true,\n    anonymous: true,\n    sidebarName: \"Dashboard\",\n    navbarName: \"Dashboard\",\n    icon: Dashboard,\n    hideInMenu: false,\n    active: true,\n    component: DashboardPage\n  },\n  {\n    path: \"/login\",\n    anonymous: true,\n    authenticated: false,\n    sidebarName: \"Log In\",\n    navbarName: \"Log In\",\n    icon: Person,\n    active:true,\n    component: LoginPage\n  },\n  {\n    path: \"/register\",\n    anonymous: true,\n      authenticated:false,\n    sidebarName: \"Register\",\n    navbarName: \"Register\",\n    icon: Person,\n    active: true,\n    component: RegisterPage\n  },\n  {\n      path: \"/confirm_email/:token\",\n      anonymous: true,\n      authenticated:false,\n      active: true,\n      hideInMenu: true,\n      sidebarName: \"ConfirmEmail\",\n      navbarName: \"ConfirmEmail\",\n      component: ConfirmEmailPage\n  },\n  {\n      path: \"/recover_password/:token\",\n      anonymous: true,\n      authenticated:false,\n      active: true,\n      hideInMenu: true,\n      sidebarName: \"RecoverPassword\",\n      navbarName: \"RecoverPassword\",\n      component: NewPasswordPage\n  },\n  {\n    path: \"/account/:id\",\n    anonymous: false,\n    authenticated:true,\n    active: true,\n    hideInMenu: true,\n    sidebarName: \"AccountOperationsPage\",\n    navbarName: \"AccountOperationsPage\",\n    component: AccountOperationsPage\n  },\n  {\n    path: \"/event/:id\",\n    anonymous: false,\n    authenticated:true,\n    active: true,\n    hideInMenu: true,\n    component: EventPage\n  },\n  {\n    path: \"/account\",\n      anonymous: false,\n      authenticated: true,\n    sidebarName: \"Account\",\n    navbarName: \"Account\",\n    icon: Person,\n    active: true,\n    component: UserPage\n  },\n  {\n    path: \"/departments\",\n      anonymous: false,\n      authenticated: true,\n    sidebarName: \"Departments\",\n    navbarName: \"Departments\",\n    icon: List,\n    active: true,\n    admin: true,\n    component: DepartmentsPage\n  },\n  {\n    path: \"/people\",\n      anonymous: false,\n      authenticated: true,\n    sidebarName: \"People\",\n    navbarName: \"People\",\n    icon: People,\n    active: true,\n    admin: false,\n    component: PeoplePage\n  },\n\n  {\n    path: \"/donuts\",\n      anonymous: false,\n      authenticated: true,\n    sidebarName: \"Donuts\",\n    navbarName: \"Donuts\",\n    icon: Store,\n    active: true,\n    component: DonutsPage\n  },\n  {\n    path: \"/my\",\n      anonymous: false,\n      authenticated: true,\n    sidebarName: \"My regards\",\n    navbarName: \"My regards\",\n    icon: Stars,\n    active: true,\n    component: RegardsPage\n  },\n  {\n    path: \"/statistic\",\n    anonymous: false,\n    authenticated: true,\n    sidebarName: \"Statistic\",\n    navbarName: \"Statistic\",\n    admin: true,\n    icon: BarChart,\n    active: true,\n    component: StatisticPage\n  },\n  {\n    path: \"/settings\",\n    anonymous: false,\n    authenticated: true,\n    sidebarName: \"Settings\",\n    navbarName: \"Settings\",\n    admin: true,\n    icon: Settings,\n    active: true,\n    component: SettingsPage\n  },\n    {\n        redirect: true,\n        anonymous: false,\n        authenticated: true,\n        active:true,\n        path: \"/login\", to: \"/dashboard\",\n        navbarName: \"Redirect\"\n    },\n    {\n      redirect: true,\n      anonymous: false,\n      authenticated: true,\n      active:true,\n      path: \"/home\", to: \"/dashboard\",\n      navbarName: \"Redirect\"\n  },\n\n  {\n      redirect: true,\n      anonymous: true,\n      authenticated: false,\n      active:true,\n      path: \"/\", to: \"/home\",\n      navbarName: \"Redirect\"\n  },\n  {\n      redirect: true,\n      anonymous: false,\n      authenticated: true,\n      active:true,\n      path: \"/\", to: \"/dashboard\",\n      navbarName: \"Redirect\"\n  },\n\n\n];\n\nexport default dashboardRoutes;\n","const accountMenuStyle = theme => ({\n    accountTitle: {\n        backgroundColor: theme.palette.primary['200']\n    }\n});\n\nexport default accountMenuStyle;\n","import {\n  drawerWidth,\n  drawerCloseWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  defaultBoxShadow,\n  grayColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/baseStyles.jsx\";\n\nconst sideboardStyle = theme => ({\n    drawerPaper: {\n      border: \"none\",\n      position: \"fixed\",\n      top: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      zIndex: \"1\",\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(8),\n      },\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    hidden: {\n      display: 'none',\n    },\n    toolbar: {\n      paddingRight: drawerCloseWidth, // keep right padding when drawer closed\n    },\n    logo: {\n      position: \"relative\",\n      padding: \"15px 15px 5px 10px\",\n      zIndex: \"4\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        bottom: \"0\",\n  \n        height: \"1px\",\n        right: \"15px\",\n        width: \"calc(100% - 30px)\",\n        backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n      }\n    },\n    logoLink: {\n      ...defaultFont,\n      textTransform: \"uppercase\",\n      padding: \"5px 0\",\n      display: \"block\",\n      fontSize: \"18px\",\n      textAlign: \"left\",\n      fontWeight: \"400\",\n      lineHeight: \"30px\",\n      textDecoration: \"none\",\n      backgroundColor: \"transparent\",\n      \"&,&:hover\": {\n        color: primaryColor\n      }\n    },\n    logoImage: {\n      width: \"30px\",\n      display: \"inline-block\",\n      maxHeight: \"30px\",\n      marginLeft: \"10px\",\n      marginRight: \"15px\"\n    },\n    img: {\n      width: \"35px\",\n      top: \"17px\",\n      position: \"absolute\",\n      verticalAlign: \"middle\",\n      border: \"0\"\n    },\n    list: {\n      marginTop: \"20px\",\n      paddingLeft: \"0\",\n      paddingTop: \"0\",\n      paddingBottom: \"0\",\n      marginBottom: \"0\",\n      listStyle: \"none\",\n      position: \"unset\"\n    },\n    item: {\n      position: \"relative\",\n      display: \"block\",\n      //height:\"40px\",\n      textDecoration: \"none\",\n      \"&:hover,&:focus,&:visited,&\": {\n        color: \"black\"\n      }\n    },\n    itemLink: {\n      width: \"210px\",\n      height:\"40px\",\n      transition: \"all 300ms linear\",\n      margin: \"10px 10px 0\",\n      borderRadius: \"3px\",\n      position: \"relative\",\n      display: \"block\",\n      padding: \"5px 10px\",\n      //-backgroundColor: \"transparent\",\n      ...defaultFont\n    },\n    itemIcon: {\n      width: \"24px\",\n      marginLeft: \"10px\",\n      height: \"30px\",\n      fontSize: \"24px\",\n      paddingTop:\"3px\",\n      lineHeight: \"30px\",\n      float: \"left\",\n      marginRight: \"18px\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      color: \"rgba(0, 0, 0, 0.8)\"\n    },\n    itemText: {\n      ...defaultFont,\n      margin: \"0\",\n      lineHeight: \"30px\",\n      fontSize: \"14px\",\n    },\n    purple: {\n      backgroundColor: primaryColor,\n      ...primaryBoxShadow,\n      \"&:hover\": {\n        backgroundColor: primaryColor,\n        ...primaryBoxShadow\n      }\n    },\n    gray: {\n      backgroundColor: grayColor,\n      ...defaultBoxShadow,\n      paddingTop:\"5px\",\n      \"&:hover\": {\n        backgroundColor: grayColor,\n        ...defaultBoxShadow,\n        paddingTop: \"5px\"\n      }\n    },\n    blue: {\n      backgroundColor: infoColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\",\n      \"&:hover\": {\n        backgroundColor: infoColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\"\n      }\n    },\n    green: {\n      backgroundColor: successColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\",\n      \"&:hover\": {\n        backgroundColor: successColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\"\n      }\n    },\n    orange: {\n      backgroundColor: warningColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\",\n      \"&:hover\": {\n        backgroundColor: warningColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\"\n      }\n    },\n    red: {\n      backgroundColor: dangerColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\",\n      \"&:hover\": {\n        backgroundColor: dangerColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\"\n      }\n    },\n    sidebarWrapper: {\n      position: \"relative\",\n      height: \"calc(100vh - 75px)\",\n      overflow: \"auto\",\n      width: drawerWidth,\n      zIndex: \"4\",\n      overflowScrolling: \"touch\"\n    },\n})\nexport default sideboardStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from \"@material-ui/core/Icon\";\nimport { NavLink } from \"react-router-dom\";\nimport { withTranslation, Trans } from \"react-i18next\";\nimport sideboardStyle from \"assets/jss/components/sideboardStyle\"\n\n\nclass MenuLinks extends React.Component {\n    activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\n    }\n\n    render() {\n        const {classes,routes,color,profile} = this.props;\n         return (\n            <List className={classes.list}>\n              {routes.map((prop, key) => {\n                      if (prop.redirect || \n                        !prop.authenticated || \n                        prop.hideInMenu || \n                        prop.sidebarName ===undefined ||\n                        (prop.admin && !profile.admin)\n                        ) return null;\n                      const listItemClasses = classNames({[\" \" + classes[color]]: this.activeRoute(prop.path)});\n                      console.log(listItemClasses)\n                      const whiteFontClasses = classNames({[\" \" + classes.whiteFont]: this.activeRoute(prop.path)});\n                          return (\n                              <NavLink\n                                to={prop.path}\n                                className={classes.item}\n                                activeClassName=\"active\"\n                                key={key}\n                              >\n                                <ListItem button className={classes.itemLink + listItemClasses}>\n                                  <ListItemIcon className={classes.itemIcon + whiteFontClasses}>\n                                    {typeof prop.icon === \"string\" ? (\n                                      <Icon>{prop.icon}</Icon>\n                                    ) : (\n                                      <prop.icon />\n                                    )}\n                                  </ListItemIcon>\n                                  <ListItemText\n                                    className={classes.itemText + whiteFontClasses}\n                                    disableTypography={true}\n                                  >\n                                      <Trans>{prop.sidebarName}</Trans>\n                                  </ListItemText>\n                                </ListItem>\n                              </NavLink>\n                          )\n              })}\n            </List>\n          )\n    }\n}\n\nexport default withStyles(sideboardStyle)(withTranslation(\"translations\")(MenuLinks))\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Exit from \"@material-ui/icons/ExitToApp\";\nimport Menu  from '@material-ui/core/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport UserAvatar from 'react-user-avatar'\nimport appRoutes from \"routes/appRoutes.jsx\";\nimport menuStyle from \"assets/jss/components/accountMenuStyle.jsx\";\nimport MenuLinks from \"components/MenuLinks\";\nimport { withTranslation, Trans } from \"react-i18next\";\n\n\nconst WrappedLinks = React.forwardRef((props, ref) => <MenuLinks forwardedRef={ref} {...props} />)\n\nclass AccountMenu extends React.Component {\n    state = {\n        auth: true,\n        anchorEl: null,\n    };\n\n    handleChange = (event, checked) => {\n        this.setState({ auth: checked });\n    };\n\n    handleMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.setState({ anchorEl: null });\n        this.props.onLogOut()\n    }\n\n    handleLogIn = () => {\n        this.setState({ anchorEl: null });\n        this.props.onLoginRedirect()\n    }\n    handleRegister = () => {\n        this.setState({ anchorEl: null });\n        this.props.onRegisterRedirect()\n    }\n\n    handleAccount =() => {\n        this.setState({ anchorEl: null });\n        this.props.onAccount()\n    }\n\n    render() {\n        const { classes,profile } = this.props;\n        const {anchorEl } = this.state;\n        console.log(\"Account menu\");\n        console.log(this.props);\n        let auth = this.props.authenticate.authenticated;\n        const open = Boolean(anchorEl);\n        let avatar_url = null\n        if (profile.user_avatar !== undefined && profile.user_avatar !==null){\n            avatar_url = profile.user_avatar.thumb.url\n        }\n        return (\n            <React.Fragment>\n                <IconButton\n                    aria-owns={open ? 'menu-account' : null}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleMenu}\n                    color=\"inherit\"\n                >\n                                      \n                    {avatar_url && <UserAvatar size=\"30\" name={profile.name} src={avatar_url} />}\n                    {!avatar_url && <AccountCircle />}\n                </IconButton>\n              \n                    <Menu\n                        id=\"menu-account\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={this.handleClose}\n                        onClick={this.handleClose}\n                    >\n                        {!auth && (<MenuItem onClick={this.handleLogIn}>Log In</MenuItem>)}\n                        {!auth && (<MenuItem onClick={this.handleRegister}>Registration</MenuItem>)}\n                         <WrappedLinks profile={profile} routes={appRoutes} location={this.props.location}/>\n                        {auth && (<MenuItem onClick={this.handleLogOut}> <Exit></Exit> <Trans>Log Out</Trans></MenuItem>)}\n                    </Menu>\n      \n            </React.Fragment>\n        )\n    }\n}\n\n\nAccountMenu.propTypes = {\n    onLoginRedirect: PropTypes.func.isRequired,\n    onLogOut: PropTypes.func.isRequired,\n    onAccount: PropTypes.func.isRequired,\n}\n\nexport default withStyles(menuStyle)(AccountMenu);\n","import {connect} from 'react-redux'\nimport AccountMenu from \"components/menu/AccountMenu\";\nimport {authenticate,logout,checkAuth}  from 'actions/authActions'\nimport {push } from 'connected-react-router'\nimport { stat } from 'fs';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (username,password) => {\n            dispatch(authenticate(username,password))\n        },\n        onLogOut: () => {\n            dispatch(logout())\n        },\n        onCheckAuth: () => {\n            dispatch(checkAuth())\n        },\n        onLoginRedirect: () => {\n            dispatch(push('/login'))\n        },\n        onRegisterRedirect: () => {\n            dispatch(push('/register'))\n        },\n        onAccount: () => {\n            dispatch(push('/account'))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        location: ownProps.location,\n        profile: state.profile\n    }\n}\n\nconst accountMenuStyle = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountMenu)\n\n\nexport default  accountMenuStyle\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport classNames from \"classnames\";\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport headerStyle from \"assets/jss/components/headerStyle\"\nimport AccountMenuContainer from 'containers/menu/AccountMenuContainer'\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport logo from \"assets/img/donut.svg\";\nimport Dropzone from 'react-dropzone';\nimport { withTranslation, Trans } from \"react-i18next\";\n\nclass Header extends React.Component {\n    componentDidMount(){\n       // this.props.loadProfile()\n    }\n    \n    render() {\n        console.log(this.props)\n        const { classes, color,authenticate,profile } = this.props;\n        let auth = authenticate.authenticated;\n        const appBarClasses = classNames({\n            [\" \" + classes[color]]: color\n        });\n        let depName = profile.department !==undefined && profile.department !==null? profile.department.name :\"\"\n        if (auth && profile.loaded){\n            return (\n                <AppBar className={classes.appBar + appBarClasses}>\n                    <Toolbar className={classes.container}>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                    >\n              \n                     </IconButton>\n                        <div className={classes.flex}>\n                            <Typography variant=\"button\"> \n                            {profile.first_name + \" \" +profile.last_name}\n                            </Typography>\n                            <br/>\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom> \n                                {depName}, {profile.position}\n                            </Typography>  \n                        </div>\n                          <AccountMenuContainer location={this.props.location}/>\n                    </Toolbar>\n                </AppBar>\n\n            )}\n        else {\n            return(<React.Fragment/>)\n        }\n\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n    loadProfile: PropTypes.func.isRequired\n};\n\nexport default withStyles(headerStyle) (Header)\n","import {connect} from 'react-redux'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport Header from \"components/Header\"\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => {\n            dispatch(loadProfile())\n        },\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile,\n        routes: ownProps.routes\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header)\n\n\nexport default  HeaderContainer\n","import {\n  drawerWidth,\n  drawerCloseWidth,\n  transition,\n  container\n} from \"assets/jss/baseStyles.jsx\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  mainPanelWide :{\n    width: `calc(100% - ${theme.spacing(7)}px)`,\n    [theme.breakpoints.up('xs')]: {\n      width: `calc(100% - ${theme.spacing(1)}px)`\n    },\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.spacing(9)}px)`\n    },\n\n  },\n\n  content: {\n    marginTop: \"30px\",\n    padding: \"30px 10px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"assets/img/donut.svg\";\nimport IconButton from '@material-ui/core/IconButton';\n\nimport sideboardStyle from \"assets/jss/components/sideboardStyle\"\nimport { withTranslation, Trans } from \"react-i18next\";\nimport MenuLinks from './MenuLinks';//\n\nclass Sideboard extends React.Component {\n    state = {\n        open: this.props.open,\n    };\n    handleDrawerOpen = () => {\n      this.setState({ open: true });\n      this.props.handleDrawerOpen();\n    };\n\n    handleDrawerClose = () => {\n      this.setState({ open: false });\n      this.props.handleDrawerClose();\n    };\n\n    toggle =() => {\n      if (this.state.open){\n        this.handleDrawerClose()\n      }\n      else {\n        this.handleDrawerOpen()\n      }\n    }\n\n    render(){\n      const {classes} = this.props;\n      let auth = this.props.authenticate.authenticated;\n      var brand = (\n        <div className={classes.logo}>\n          <a\n            href=\"#\"\n            className={classes.logoLink}\n            onClick={this.toggle}\n          >\n            <div className={classes.logoImage}>\n              <img src={logo} alt=\"logo\" className={classes.img} />\n            </div>\n             Do Nuts\n          </a>\n        </div>\n      );\n\n      return (\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n              {brand}\n            <div className={classNames(classes.toolbarIcon)}>\n              <IconButton onClick={this.handleDrawerClose} className={classNames(!this.state.open && classes.hidden)}>\n                <ChevronLeftIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton,this.state.open && classes.hidden,)}\n              >\n                <MenuIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <div className={classes.sidebarWrapper}>\n              <MenuLinks {...this.props}/>\n            </div>\n          </Drawer>\n        </Hidden>\n        )\n    }\n}\n\nexport default withStyles(sideboardStyle)(withTranslation(\"translations\")(Sideboard))\n","import {connect} from 'react-redux'\n\nimport {authenticate}  from 'actions/authActions'\nimport Sideboard from \"components/Sideboard\"\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        routes: ownProps.routes,\n        profile: state.profile\n    }\n}\n\nconst SideboardContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sideboard)\n\n\nexport default  SideboardContainer\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\n\nclass DialogWindow  extends Component {\n  handleClose() {\n    this.props.onClose();\n  }\n\n  render (){\n      const {open,fullScreen} = this.props;\n      return (\n         <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            onClose={this.handleClose.bind(this)}\n            aria-labelledby=\"responsive-dialog-title\"\n            fullWidth = {true}      \n            scroll=\"body\"     \n        >\n          {this.props.children}\n        </Dialog>\n      )\n    }\n  }\n\n\nDialogWindow.propTypes = {\n  onClose: PropTypes.func.isRequired\n}\n\n\nexport default withMobileDialog()(DialogWindow)\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport  * as  actions from \"actions/modal/modalActions\"\nimport modalList from './modalList'\nimport DialogWindow from './DialogWindow'\nimport * as modalResults from 'actions/modal/modalResults'\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onCloseModal: () => {\n          dispatch(actions.hideModal())\n          dispatch(actions.resultModal(modalResults.EMPTY))\n      },\n\n      onAccept: () => {\n        dispatch(actions.hideModal())\n        dispatch(actions.resultModal(modalResults.OK))\n      },\n      onCancel: () => {\n          dispatch(actions.hideModal())\n          dispatch(actions.resultModal(modalResults.CANCEL))\n      },\n  }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        modal: state.modal,\n    }\n}\n\nclass Modal  extends Component {\n  handleClose() {\n    this.props.onCloseModal();\n  }\n\n  handleAccept() {\n    this.props.onAccept()\n  }\n\n  handleCancel() {\n    this.props.onCancel()\n  }\n\n\n  render (){\n    const {modal} = this.props;\n    let show = modal.show;\n    let modalName = modal.modalName;\n    if (!show) {\n      return (<React.Fragment/>)\n    }\n    else {\n      const ModalName = modalList[modalName];\n      return (\n        <DialogWindow\n            open={true}\n            onClose={this.handleClose.bind(this)}\n        >\n          <ModalName\n            onCloseModal = {this.handleClose.bind(this)}\n            onAccept = {this.handleAccept.bind(this)}\n            onCancel = {this.handleCancel.bind(this)}\n            modal={modal}\n            body={modal.body}\n          />\n\n        </DialogWindow>\n      )\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Modal)\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack';\nimport { removeSnackbar } from 'actions/notifierActions';\nimport { withTranslation,useTranslation } from 'react-i18next';\nimport {  Button } from '@material-ui/core';\n\n\n\nconst ActionButton = (props) => {\n    return (\n        <React.Fragment>\n        {props.notifyText}\n        <Button onClick ={props.onClick}>\n            {props.children}\n        </Button>\n        </React.Fragment>\n    )\n}\n\n\n\nclass Notifier extends Component {\n    displayed = [];\n\n    storeDisplayed = id => {\n        this.displayed = [...this.displayed, id];\n    };\n\n    shouldComponentUpdate({ notifications: newSnacks = [] }) {\n        const { notifications: currentSnacks } = this.props;\n        let notExists = false;\n        for (let i = 0; i < newSnacks.length; i++) {\n            if (notExists) continue;\n            notExists = notExists || !currentSnacks.filter(({ key }) => newSnacks[i].key === key).length;\n        }\n        return notExists;\n    }\n\n   \n\n    componentDidUpdate() {\n        let notifyElement\n        const { notifications = [], t, i18n  } = this.props;\n          notifications.forEach(notification => {\n            // Do nothing if snackbar is already displayed\n            if (this.displayed.includes(notification.key)) return;\n            // Display snackbar using notistack\n            let text=t(notification.message)\n            if (notification.message2!==undefined){\n                text = text  +  t(notification.message2) \n            }\n            if (notification.action){\n                notifyElement = <ActionButton \n                                    notifyText={text} \n                                    onClick={notification.action.onClick}>\n                                    {t(notification.action.caption)}\n                                </ActionButton>\n            }\n            else{\n                notifyElement = text\n            }\n            this.props.enqueueSnackbar(notifyElement, notification.options);\n            // Keep track of snackbars that we've displayed\n            this.storeDisplayed(notification.key);\n            // Dispatch action to remove snackbar from redux store\n            this.props.removeSnackbar(notification.key);\n        });\n    }\n    render() {\n        return null;\n    }\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.notifier.notifications,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({removeSnackbar}, dispatch);\n\n\n\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withTranslation()(withSnackbar(Notifier)));\n","import React, { Component } from 'react';\nimport {withRouter,Switch, Route, Redirect } from 'react-router-dom'\nimport classNames from \"classnames\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HeaderContainer from \"containers/HeaderContainer\"\nimport orange from '@material-ui/core/colors/orange';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport {connect} from 'react-redux'\nimport {authenticate,logout,checkAuth}  from 'actions/authActions'\nimport {push } from 'connected-react-router'\n\nimport appStyle from \"assets/jss/layouts/appStyle.jsx\";\n//import Sideboard from \"components/Sidebar/Sideboard\"\nimport SideboardContainer from \"containers/SideboardContainer\"\nimport Modal from 'modals/Modal'\nimport Notifier from 'components/Notifier'\nimport appRoutes from \"routes/appRoutes.jsx\";\nimport { container } from 'assets/jss/baseStyles';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green, // Purple and green play nicely together.\n        secondary: {\n            ...orange,\n            A400: '#00e677',\n        },\n        error: red,\n    },\n\n});\n\n\nconst switchRoutes  = (\n  <Switch>\n    {appRoutes.map((prop, key) => {\n        if (prop.authenticated !== undefined && prop.authenticated\n            && prop.active\n        ) {\n            if (prop.redirect)\n                return <Redirect from={prop.path} to={prop.to} key={key}/>;\n            return <Route path={prop.path} component={prop.component} key={key}/>;\n        }\n    })}\n  </Switch>\n);\nconst switchAnonymousRoutes = (\n    <Switch>\n        {appRoutes.map((prop, key) => {\n            if (prop.anonymous && prop.active) {\n                if (prop.redirect)\n                    return <Redirect from={prop.path} to={prop.to} key={key}/>;\n                return <Route path={prop.path} component={prop.component} key={key}/>;\n            }\n        })}\n    </Switch>\n);\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileOpen: false,\n      drawerOpen: true\n    };\n    this.resizeFunction = this.resizeFunction.bind(this);\n    this.mainPanel = React.createRef()\n  }\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  resizeFunction() {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  }\n\n  componentWillMount() {\n    if(this.props.authenticate.authenticated) {\n        this.props.actions.onLoad()\n    }\n  }\n\n  componentDidMount() {  \n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      if (this.mainPanel.current !== undefined && this.mainPanel.current !==null){\n        const ps = new PerfectScrollbar(this.mainPanel.current)\n      }\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname){\n      if (this.mainPanel.current !==undefined && this.mainPanel.current !== null) {\n        try{\n          this.mainPanel.current.scrollTop()\n        }\n        catch{\n          this.mainPanel.current.scrollTop = 0\n        }\n      }\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n  }\n\n  handleDrawerOpen = () => {\n    console.log('Open drawer');\n    this.setState({ drawerOpen: true });\n  };\n\n  handleDrawerClose = () => {\n    console.log('Close drawer');\n    this.setState({ drawerOpen: false });\n  };\n\n\n\n    render() {\n        const { classes,authenticate, ...rest } = this.props;\n        let auth = authenticate.authenticated;\n        var mainPanelClass;\n        if(!this.state.drawerOpen || !auth){\n              mainPanelClass = classNames(classes.mainPanel, classes.mainPanelWide);\n            //  {classes.mainPanel,!this.state.drawerOpen && classes.mainPanelWide}\n        }\n        else {\n            mainPanelClass = classNames(classes.mainPanel);\n        }\n\n        return (\n            <MuiThemeProvider theme={theme}>\n                    <Notifier />\n                    {auth && (<div className={classes.wrapper}>\n                            {auth && (<SideboardContainer\n                              routes={appRoutes}\n                              handleDrawerOpen = {this.handleDrawerOpen.bind(this)}\n                              handleDrawerClose = {this.handleDrawerClose.bind(this)}\n                              open = {this.state.drawerOpen}\n                              color=\"gray\"\n                              {...rest}\n                            />)}\n                            <div className={mainPanelClass} ref={this.mainPanel}>\n                                {auth && (<HeaderContainer  routes={appRoutes} {...rest}/>)}\n                                <div className={classes.content}>\n                                    <div className={classes.container}>{switchRoutes}</div>\n                                </div>\n\n                            </div>\n                          </div>\n                    )}\n                    {!auth &&\n                         <div className={mainPanelClass} >\n                            <div className={classes.content}>\n                                <div className={classes.container}>{switchAnonymousRoutes}</div>\n                            </div>\n                        </div>}\n                    <Modal/>\n            </MuiThemeProvider>\n            );\n    }\n\n}\n\n\nexport default withRouter(withStyles(appStyle)(App));\n","import App from \"containers/AppContainer\";\nimport LoginPage from \"containers/pages/LoginPage\"\n\n\nconst indexRoutes = [\n  //  { path: \"/login\", component: LoginPage},\n    { path: \"/\", component: App },\n];\n\nexport default indexRoutes;\n","import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport  { Redirect } from 'react-router-dom'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport App from 'components/App'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: {\n            onLoad: () =>{\n                dispatch(loadProfile())\n            }\n\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n.use(LanguageDetector).init({\n    // we init with resources\n    resources: {\n        en: {\n            translations: {\n                \"Events\": \"Events\",\n                \"Balance\": \"Balance\",\n                \"Dashboard\": \"Dashboard\",\n                \"Confirmation email was sent to\": \"Confirmation email was sent to\",\n                \"Confirm\": \"Confirm email\",\n                \"Registration Confirmation\": \"Registration Confirmation\",\n                \"Log in\": \"Log in\",\n                \"Recover password\":\"Recover password\",\n\n                //CONSTS \n                \"CONST_GREETINGS\":     \"Fast and simple way to   encourage your colleagues and thank them for their patience and help.\"\n            }\n        },\n        ru: {\n            translations: {\n                //CONSTS\n                \"CONST_GREETINGS\": \"Простой и быстрый способ поблагодарить ваших коллег за отличную работу.\",\n                //A\n                \"Account\": \"Аккаунт\",\n                \"Add\": \"Добавить\",\n                \"Activate\": \"Активировать\",\n                \"Already used regards\": \"Уже использованные награды\",\n                \"Activate regard code\":\"Активация кода награды\",\n                \"Already activated\": \"Уже активировано\",\n                \"All users\":\"Все пользователи\",\n                //B\n                \"Balance\": \"Баланс\",\n                \"Buy\": \"Купить\",\n                \"Burn old points\":\"Списать неиспользованных баллов\",\n\n                //C\n                \"Cancel\": \"Отмена\",\n                \"Can not be empty\":\"Не может быть пустым\",\n                \"Change password\" :\"Сменить пароль\",\n                \"Confirm\": \"Подтвердить почтовый адрес\",\n                \"Confirmation email was sent to\": \"Подтвердите адрес электронной почты \",\n                \"Confirm your email first\": \"Для продолжнеия подтвердите адрес электронной почты \",\n                \"Connect to space\":\"Присоединиться к пространству\",\n                \"code\": \"код\",\n                \"Comment\":\"Комментарий\",\n                \"Click to select files\": \"Нажмите, чтобы выбрать фото\",\n                \"Close\":\"Закрыть\",\n                \"created\": \"создан(а)\",\n\n                //D\n                \"department\": \"подразделение\",\n                \"Dashboard\": \"Лента\",\n                \"Delete\": \"Удалить\",\n                \"Departments\": \"Отделы\",\n                \"Department\": \"Отдел\",\n                \"Details\": \"Подробнее\",\n                \"Distrib account\": \"Могу отдать\",\n                \"Donut name\": \"Название плюшки\",\n                \"Donuts\":\"Гайки и плюшки\",\n                \"donuts\": \"пончики\",\n                \"donut_0\": \"пончик\",\n                \"donut_1\": \"пончика\",\n                \"donut_2\": \"пончиков\",                \n                \"Domain not found\": \"Не найден почтовый домен\",\n\n                //E\n                \"Edit\": \"Редактировать\",\n                'Error while updating': 'Ошибка во время обновления',\n                \"Events\": \"События\",\n                \"Expiration date\": \"Дата окончания\",\n\n\n                //F\n                 \"forbidden\": \"запрещено\",\n                //G\n                \"Go to shop\": \"Магазин\",\n                \"Goods\": \"Товары\",\n\n                //H\n                \"History\":\"История\",\n                \"Home\": \"Главная\",\n\n                //I\n\n                //J\n\n                //K\n\n                //L\n                \"Log in\": \"Войти\",\n                \"Log Out\": \"Выйти\",\n                \n\n\n                //M\n                \"Max donuts\":\"Макисмальное количество пончиков\",\n                \"message\": \"сообщение\",\n                \"My regards\": \"Мои награды\",\n                //N\n                \"new password\": \"новый пароль\",\n                \"New points for all users\":\"Новые баллы для всех пользователей\",\n                \"Name\": \"Имя\",\n\n                //O\n                \"Only you can see it\": \"Только вы это видите\",\n                //P\n                \"People\":\"Сотрудники\",\n                \"Please confirm your email\":\"Пожалуйста, подтвердите почтовый адрес\",\n                \"points\": \"баллы\",\n                \"point_0\": \"балл\",\n                \"point_1\": \"балла\",\n                \"point_2\": \"баллов\",\n                \"position\":\"должность\",\n                \"Position\":\"Должность\",\n                \"Price\":\"Цена\",\n                \"Profile\":\"Профиль\",\n                \"pts\": \"$\",\n                \"place\":\"место\",\n                //Q\n\n                //R\n                \"Registration Confirmation\": \"Подтверждение регистрации\",\n                \"Recover password\":\"Восстановить пароль\",\n                \"Regards i can use\": \"Награды, которые могу использовать\",\n                'Regard activated': \"Награда активирована\",\n                'Required': 'Обязательное поле',\n                \n\n                //S\n                \"Save changes\": \"Сохранить изменения\",\n                \"Self account\":\"Могу потратить\",\n                \"Share\": \"Поделиться\",\n                \"Share dialog\": \"Окно подарков\",\n                \"Show only mine\": \"Показывать только мои\",\n                \"Store item\": \"Элемент магазина\",\n                \"Send\":\"Отправить\",\n                \"Send to all\": \"Отправить всем\",\n                \"Send again\": \"Отправить еще раз\",\n                \"Settings\": \"Настройки\",\n                \"Statistic\": \"Статистика\",\n                \"start typing\": \"начните ввод\",\n                \"Store\":\"Магазин\",\n                \"Something went wrong.\":\"Что-то пошло не так.\",\n                \"Surname\": \"Фамилия\",\n\n                //T\n\n                //U\n\n                //V\n\n                //W\n                \"Without depratment\":\"Без подразделения\",\n                'Wrong credetialis': 'Не удалось войти с этим именем и паролем',\n                \"Withdrawl error. Not enough points\" : \"Ошибка. Недостаточно баллов\",\n                //X\n\n                //Y\n                'you have to be admin': 'Вы должны иметь полномочия администратора',\n                \"You have successfully bought a new donut\":\"Вы успешно купили плюшку\",\n                \"your comment\": \"ваш комментарий\",\n                //Z\n\n            }\n        }\n    },\n    fallbackLng: \"en\",\n    debug: true,\n\n    // have a common namespace used around the full app\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false, // we use content as keys\n\n    interpolation: {\n        escapeValue: false, // not needed for react!!\n        formatSeparator: \",\"\n    },\n\n    react: {\n        wait: true\n    }\n});\n\nexport default i18n;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport {checkAuth} from './actions/authActions'\n\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {ConnectedRouter} from 'connected-react-router'\nimport {  Route, Switch } from \"react-router-dom\";\nimport {store, history,persistor} from \"./store/configureStore\"\nimport * as serviceWorker from './serviceWorker';\nimport indexRoutes from \"routes/index.jsx\";\nimport  \"assets/css/baseStyle.css?v=1.0.1\";\n\nimport { SnackbarProvider } from 'notistack';\n\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./i18n\";\n\nstore.dispatch(checkAuth())\n\nconst rootElement = document.querySelector('#root');\n\n//index\nReactDOM.render(\n    <Provider store={store}>\n      <SnackbarProvider>\n         <I18nextProvider i18n={i18n}>\n            <PersistGate loading={null} persistor={persistor}>\n              \n              <ConnectedRouter  history={history}>\n                <Switch>\n                   {indexRoutes.map((prop, key) => {\n                     return <Route path={prop.path} component={prop.component} key={key} />;\n                   })}\n                  </Switch>\n              </ConnectedRouter>\n            \n            </PersistGate>\n         </I18nextProvider>\n        </SnackbarProvider>\n    </Provider>,\n    rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}