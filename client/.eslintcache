[{"/home/alex/donuts/client/src/index.js":"1","/home/alex/donuts/client/src/serviceWorker.js":"2","/home/alex/donuts/client/src/i18n.js":"3","/home/alex/donuts/client/src/actions/authActions.jsx":"4","/home/alex/donuts/client/src/store/configureStore.jsx":"5","/home/alex/donuts/client/src/routes/index.jsx":"6","/home/alex/donuts/client/src/actions/actionTypes.jsx":"7","/home/alex/donuts/client/src/actions/commonActions.jsx":"8","/home/alex/donuts/client/src/api/authenticateApi.jsx":"9","/home/alex/donuts/client/src/actions/profile/profileActions.jsx":"10","/home/alex/donuts/client/src/actions/notifierActions.jsx":"11","/home/alex/donuts/client/src/reducers/index.jsx":"12","/home/alex/donuts/client/src/store/initialState.jsx":"13","/home/alex/donuts/client/src/containers/AppContainer.jsx":"14","/home/alex/donuts/client/src/containers/pages/LoginPage.jsx":"15","/home/alex/donuts/client/src/actions/errores.jsx":"16","/home/alex/donuts/client/src/reducers/loader.jsx":"17","/home/alex/donuts/client/src/reducers/modal.jsx":"18","/home/alex/donuts/client/src/reducers/notifier.jsx":"19","/home/alex/donuts/client/src/reducers/account.jsx":"20","/home/alex/donuts/client/src/reducers/profile.jsx":"21","/home/alex/donuts/client/src/reducers/system.jsx":"22","/home/alex/donuts/client/src/reducers/errors.jsx":"23","/home/alex/donuts/client/src/reducers/dashboard.jsx":"24","/home/alex/donuts/client/src/reducers/authenticate.jsx":"25","/home/alex/donuts/client/src/actions/listActions.jsx":"26","/home/alex/donuts/client/src/common/storage.jsx":"27","/home/alex/donuts/client/src/api/apiRoot.jsx":"28","/home/alex/donuts/client/src/api/api.jsx":"29","/home/alex/donuts/client/src/api/tenantApi.jsx":"30","/home/alex/donuts/client/src/api/profileApi.jsx":"31","/home/alex/donuts/client/src/actions/profile/actionTypes.jsx":"32","/home/alex/donuts/client/src/components/App.js":"33","/home/alex/donuts/client/src/actions/modal/modalActions.jsx":"34","/home/alex/donuts/client/src/components/forms/RecoverForm.jsx":"35","/home/alex/donuts/client/src/components/forms/LoginForm.jsx":"36","/home/alex/donuts/client/src/api/profilesApi.jsx":"37","/home/alex/donuts/client/src/api/accountLogApi.jsx":"38","/home/alex/donuts/client/src/api/pluginApi.jsx":"39","/home/alex/donuts/client/src/api/requestApi.jsx":"40","/home/alex/donuts/client/src/api/tenantPluginApi.jsx":"41","/home/alex/donuts/client/src/api/jsonParser.jsx":"42","/home/alex/donuts/client/src/actions/modal/actionTypes.jsx":"43","/home/alex/donuts/client/src/api/departmentApi.jsx":"44","/home/alex/donuts/client/src/api/storeApi.jsx":"45","/home/alex/donuts/client/src/api/regardApi.jsx":"46","/home/alex/donuts/client/src/api/schedulersApi.jsx":"47","/home/alex/donuts/client/src/modals/modalList.jsx":"48","/home/alex/donuts/client/src/routes/appRoutes.jsx":"49","/home/alex/donuts/client/src/assets/jss/layouts/appStyle.jsx":"50","/home/alex/donuts/client/src/containers/HeaderContainer.jsx":"51","/home/alex/donuts/client/src/modals/Modal.jsx":"52","/home/alex/donuts/client/src/components/Notifier.jsx":"53","/home/alex/donuts/client/src/containers/SideboardContainer.jsx":"54","/home/alex/donuts/client/src/assets/jss/baseStyles.jsx":"55","/home/alex/donuts/client/src/actions/modal/modalResults.jsx":"56","/home/alex/donuts/client/src/components/forms/common/text.jsx":"57","/home/alex/donuts/client/src/assets/jss/components/formStyle.jsx":"58","/home/alex/donuts/client/src/modals/purchase/PurchasePreviewModal.jsx":"59","/home/alex/donuts/client/src/modals/plugin/PluginModal.jsx":"60","/home/alex/donuts/client/src/modals/event/EventModal.jsx":"61","/home/alex/donuts/client/src/modals/scheduler/SchedulerModal.jsx":"62","/home/alex/donuts/client/src/modals/profile/ProfilePreviewModal.jsx":"63","/home/alex/donuts/client/src/modals/DialogWindow.jsx":"64","/home/alex/donuts/client/src/modals/profile/ProfileModal.jsx":"65","/home/alex/donuts/client/src/containers/pages/RequestsPage.jsx":"66","/home/alex/donuts/client/src/containers/pages/QuizPage.jsx":"67","/home/alex/donuts/client/src/modals/department/DepartmentModal.jsx":"68","/home/alex/donuts/client/src/modals/regard/RegardModalView.jsx":"69","/home/alex/donuts/client/src/containers/pages/EventPage.jsx":"70","/home/alex/donuts/client/src/containers/pages/StatisticPage.jsx":"71","/home/alex/donuts/client/src/components/Header.jsx":"72","/home/alex/donuts/client/src/components/Sideboard.jsx":"73","/home/alex/donuts/client/src/containers/pages/AccountOperationsPage.jsx":"74","/home/alex/donuts/client/src/containers/pages/DonutsPage.jsx":"75","/home/alex/donuts/client/src/containers/pages/ProfilesPage.jsx":"76","/home/alex/donuts/client/src/containers/pages/DepartmentsPage.jsx":"77","/home/alex/donuts/client/src/containers/pages/NewPasswordPage.jsx":"78","/home/alex/donuts/client/src/containers/pages/ConfirmEmailPage.jsx":"79","/home/alex/donuts/client/src/containers/pages/StorePage.jsx":"80","/home/alex/donuts/client/src/containers/pages/SettingsPage.jsx":"81","/home/alex/donuts/client/src/containers/pages/RegardsPage.jsx":"82","/home/alex/donuts/client/src/containers/pages/UserPage.jsx":"83","/home/alex/donuts/client/src/containers/pages/DashboardPage.jsx":"84","/home/alex/donuts/client/src/containers/pages/RegisterPage.jsx":"85","/home/alex/donuts/client/src/containers/pages/HomePage.jsx":"86","/home/alex/donuts/client/src/modals/confirm/ConfirmModalView.jsx":"87","/home/alex/donuts/client/src/modals/store/StoreItemModal.jsx":"88","/home/alex/donuts/client/src/modals/share/ShareModal.jsx":"89","/home/alex/donuts/client/src/components/UserImage.jsx":"90","/home/alex/donuts/client/src/assets/jss/layouts/userStyle.jsx":"91","/home/alex/donuts/client/src/modals/LayoutModal.jsx":"92","/home/alex/donuts/client/src/components/forms/reduxFormGenerator.jsx":"93","/home/alex/donuts/client/src/components/grid/GridItem.jsx":"94","/home/alex/donuts/client/src/components/grid/GridContainer.jsx":"95","/home/alex/donuts/client/src/containers/ProgressContainer.jsx":"96","/home/alex/donuts/client/src/containers/CommentContainer.jsx":"97","/home/alex/donuts/client/src/components/MenuLinks.jsx":"98","/home/alex/donuts/client/src/layouts/Departments.jsx":"99","/home/alex/donuts/client/src/actions/assetActions.jsx":"100","/home/alex/donuts/client/src/layouts/Requests.jsx":"101","/home/alex/donuts/client/src/layouts/QuizLayout.jsx":"102","/home/alex/donuts/client/src/actions/eventActions.jsx":"103","/home/alex/donuts/client/src/layouts/EventLayout.jsx":"104","/home/alex/donuts/client/src/layouts/Settings.jsx":"105","/home/alex/donuts/client/src/modals/share/ShareModalView.jsx":"106","/home/alex/donuts/client/src/modals/store/StoreItemModalView.jsx":"107","/home/alex/donuts/client/src/assets/jss/modals/modalStyle.jsx":"108","/home/alex/donuts/client/src/actions/dashboardActions.jsx":"109","/home/alex/donuts/client/src/layouts/Statistic.jsx":"110","/home/alex/donuts/client/src/assets/jss/components/sideboardStyle.jsx":"111","/home/alex/donuts/client/src/layouts/AccountOperations.jsx":"112","/home/alex/donuts/client/src/layouts/Donuts.jsx":"113","/home/alex/donuts/client/src/layouts/Profiles.jsx":"114","/home/alex/donuts/client/src/components/forms/NewPasswordForm.jsx":"115","/home/alex/donuts/client/src/assets/jss/components/confrimEmailStyle.jsx":"116","/home/alex/donuts/client/src/actions/tenantActions.jsx":"117","/home/alex/donuts/client/src/layouts/Regards.jsx":"118","/home/alex/donuts/client/src/layouts/User.jsx":"119","/home/alex/donuts/client/src/layouts/Register.jsx":"120","/home/alex/donuts/client/src/layouts/Dashboard.jsx":"121","/home/alex/donuts/client/src/layouts/Home.jsx":"122","/home/alex/donuts/client/src/components/Previews.jsx":"123","/home/alex/donuts/client/src/components/Progress.jsx":"124","/home/alex/donuts/client/src/actions/storeActions.jsx":"125","/home/alex/donuts/client/src/components/store/Store.jsx":"126","/home/alex/donuts/client/src/components/ImageLoader.jsx":"127","/home/alex/donuts/client/src/components/table/CustomTableToolbar.jsx":"128","/home/alex/donuts/client/src/assets/jss/layouts/listStyle.jsx":"129","/home/alex/donuts/client/src/modals/share/ShareForm.jsx":"130","/home/alex/donuts/client/src/modals/store/StoreItemForm.jsx":"131","/home/alex/donuts/client/src/components/EventCard.jsx":"132","/home/alex/donuts/client/src/components/card/CardBody.jsx":"133","/home/alex/donuts/client/src/components/card/CardHeader.jsx":"134","/home/alex/donuts/client/src/components/card/Card.jsx":"135","/home/alex/donuts/client/src/api/dashboardApi.jsx":"136","/home/alex/donuts/client/src/containers/NewCommentContainer.jsx":"137","/home/alex/donuts/client/src/layouts/TenantSettings.jsx":"138","/home/alex/donuts/client/src/components/list/StandartList.jsx":"139","/home/alex/donuts/client/src/components/store/StoreTableHead.jsx":"140","/home/alex/donuts/client/src/components/store/StoreToolbar.jsx":"141","/home/alex/donuts/client/src/components/tabs/TabPanel.jsx":"142","/home/alex/donuts/client/src/assets/jss/components/registerFormStyle.jsx":"143","/home/alex/donuts/client/src/assets/jss/components/homeStyle.jsx":"144","/home/alex/donuts/client/src/components/charts/Leaderboard.jsx":"145","/home/alex/donuts/client/src/components/OperationText.jsx":"146","/home/alex/donuts/client/src/assets/jss/components/customTableStyle.jsx":"147","/home/alex/donuts/client/src/components/UserAvatar.jsx":"148","/home/alex/donuts/client/src/components/table/fields/OperationField.jsx":"149","/home/alex/donuts/client/src/assets/jss/components/cardStyle.jsx":"150","/home/alex/donuts/client/src/assets/jss/components/cardBodyStyle.jsx":"151","/home/alex/donuts/client/src/assets/jss/components/cardHeaderStyle.jsx":"152","/home/alex/donuts/client/src/containers/EventListContainer.jsx":"153","/home/alex/donuts/client/src/containers/DistribAccountContainer.jsx":"154","/home/alex/donuts/client/src/containers/SelfAccountContainer.jsx":"155","/home/alex/donuts/client/src/assets/jss/components/imageLoaderStyle.jsx":"156","/home/alex/donuts/client/src/components/forms/common/render.jsx":"157","/home/alex/donuts/client/src/containers/OperationContainer.jsx":"158","/home/alex/donuts/client/src/assets/jss/layouts/settingsStyles.jsx":"159","/home/alex/donuts/client/src/components/ProfileButton.jsx":"160","/home/alex/donuts/client/src/assets/jss/components/eventCardStyle.jsx":"161","/home/alex/donuts/client/src/components/PurchaseButton.jsx":"162","/home/alex/donuts/client/src/assets/jss/components/dashboardStyle.jsx":"163","/home/alex/donuts/client/src/components/table/CustomTable.jsx":"164","/home/alex/donuts/client/src/containers/EventCardContainer.jsx":"165","/home/alex/donuts/client/src/assets/jss/checkBoxAndRadioStyle.jsx":"166","/home/alex/donuts/client/src/components/forms/register/RegisterForm.jsx":"167","/home/alex/donuts/client/src/assets/jss/components/leaderBoardStyle.jsx":"168","/home/alex/donuts/client/src/components/table/customTableItemContext.jsx":"169","/home/alex/donuts/client/src/components/forms/DynamicForm.jsx":"170","/home/alex/donuts/client/src/components/EventList.jsx":"171","/home/alex/donuts/client/src/components/AccountBalance.jsx":"172","/home/alex/donuts/client/src/components/FormTextField.jsx":"173","/home/alex/donuts/client/src/components/forms/register/asyncValidate.jsx":"174","/home/alex/donuts/client/src/assets/jss/components/profileButtonStyle.jsx":"175","/home/alex/donuts/client/src/components/downshift/AutoDownshift.jsx":"176","/home/alex/donuts/client/src/components/input/InputWithRange.jsx":"177","/home/alex/donuts/client/src/components/forms/SimpleFieldForm.jsx":"178","/home/alex/donuts/client/src/assets/jss/components/headerStyle.jsx":"179","/home/alex/donuts/client/src/containers/menu/AccountMenuContainer.jsx":"180","/home/alex/donuts/client/src/components/EventsFilter.jsx":"181","/home/alex/donuts/client/src/components/downshift/Suggestion.jsx":"182","/home/alex/donuts/client/src/components/downshift/Input.jsx":"183","/home/alex/donuts/client/src/assets/jss/components/eventsListStyle.jsx":"184","/home/alex/donuts/client/src/assets/jss/components/eventsFilterStyle.jsx":"185","/home/alex/donuts/client/src/components/forms/common/radio.jsx":"186","/home/alex/donuts/client/src/components/menu/AccountMenu.jsx":"187","/home/alex/donuts/client/src/assets/jss/components/accountMenuStyle.jsx":"188","/home/alex/donuts/client/src/assets/jss/components/radioGroupStyle.jsx":"189"},{"size":1617,"mtime":1591972543690,"results":"190","hashOfConfig":"191"},{"size":4948,"mtime":1591972543690,"results":"192","hashOfConfig":"191"},{"size":9139,"mtime":1595328739370,"results":"193","hashOfConfig":"191"},{"size":4825,"mtime":1591972543690,"results":"194","hashOfConfig":"191"},{"size":1432,"mtime":1591972543690,"results":"195","hashOfConfig":"191"},{"size":232,"mtime":1591972543690,"results":"196","hashOfConfig":"191"},{"size":3092,"mtime":1595328739370,"results":"197","hashOfConfig":"191"},{"size":4556,"mtime":1595328739370,"results":"198","hashOfConfig":"191"},{"size":1145,"mtime":1591972543690,"results":"199","hashOfConfig":"191"},{"size":8869,"mtime":1591972543690,"results":"200","hashOfConfig":"191"},{"size":270,"mtime":1591972543690,"results":"201","hashOfConfig":"191"},{"size":1418,"mtime":1597773435360,"results":"202","hashOfConfig":"191"},{"size":208,"mtime":1591972543690,"results":"203","hashOfConfig":"191"},{"size":659,"mtime":1591972543690,"results":"204","hashOfConfig":"191"},{"size":2578,"mtime":1591972543690,"results":"205","hashOfConfig":"191"},{"size":308,"mtime":1591972543690,"results":"206","hashOfConfig":"191"},{"size":2472,"mtime":1592314910560,"results":"207","hashOfConfig":"191"},{"size":851,"mtime":1595328739380,"results":"208","hashOfConfig":"191"},{"size":720,"mtime":1591972543690,"results":"209","hashOfConfig":"191"},{"size":1694,"mtime":1591972543690,"results":"210","hashOfConfig":"191"},{"size":2434,"mtime":1595328739380,"results":"211","hashOfConfig":"191"},{"size":575,"mtime":1591972543690,"results":"212","hashOfConfig":"191"},{"size":612,"mtime":1591972543690,"results":"213","hashOfConfig":"191"},{"size":523,"mtime":1591972543690,"results":"214","hashOfConfig":"191"},{"size":1322,"mtime":1591972543690,"results":"215","hashOfConfig":"191"},{"size":6098,"mtime":1595328739370,"results":"216","hashOfConfig":"191"},{"size":196,"mtime":1591972543690,"results":"217","hashOfConfig":"191"},{"size":689,"mtime":1602589041545,"results":"218","hashOfConfig":"191"},{"size":3312,"mtime":1595286061720,"results":"219","hashOfConfig":"191"},{"size":849,"mtime":1595328739370,"results":"220","hashOfConfig":"191"},{"size":2397,"mtime":1591972543690,"results":"221","hashOfConfig":"191"},{"size":1238,"mtime":1591972543690,"results":"222","hashOfConfig":"191"},{"size":5875,"mtime":1595328739370,"results":"223","hashOfConfig":"191"},{"size":1042,"mtime":1591972543690,"results":"224","hashOfConfig":"191"},{"size":1557,"mtime":1608822884010,"results":"225","hashOfConfig":"191"},{"size":2235,"mtime":1608822884010,"results":"226","hashOfConfig":"191"},{"size":1152,"mtime":1591972543690,"results":"227","hashOfConfig":"191"},{"size":517,"mtime":1595328739370,"results":"228","hashOfConfig":"191"},{"size":574,"mtime":1597773435360,"results":"229","hashOfConfig":"191"},{"size":483,"mtime":1595328739370,"results":"230","hashOfConfig":"191"},{"size":870,"mtime":1602589041545,"results":"231","hashOfConfig":"191"},{"size":1634,"mtime":1591972543690,"results":"232","hashOfConfig":"191"},{"size":262,"mtime":1595328739370,"results":"233","hashOfConfig":"191"},{"size":850,"mtime":1591972543690,"results":"234","hashOfConfig":"191"},{"size":780,"mtime":1595328739370,"results":"235","hashOfConfig":"191"},{"size":742,"mtime":1595328739370,"results":"236","hashOfConfig":"191"},{"size":600,"mtime":1595328739370,"results":"237","hashOfConfig":"191"},{"size":1656,"mtime":1602589041545,"results":"238","hashOfConfig":"191"},{"size":6145,"mtime":1608822884010,"results":"239","hashOfConfig":"191"},{"size":925,"mtime":1591972543690,"results":"240","hashOfConfig":"191"},{"size":608,"mtime":1591972543690,"results":"241","hashOfConfig":"191"},{"size":1729,"mtime":1591972543690,"results":"242","hashOfConfig":"191"},{"size":2698,"mtime":1591972543690,"results":"243","hashOfConfig":"191"},{"size":504,"mtime":1591972543690,"results":"244","hashOfConfig":"191"},{"size":7097,"mtime":1608822884010,"results":"245","hashOfConfig":"191"},{"size":83,"mtime":1591972543690,"results":"246","hashOfConfig":"191"},{"size":1209,"mtime":1608822884010,"results":"247","hashOfConfig":"191"},{"size":2275,"mtime":1591972543690,"results":"248","hashOfConfig":"191"},{"size":3231,"mtime":1595328739380,"results":"249","hashOfConfig":"191"},{"size":2789,"mtime":1602589041545,"results":"250","hashOfConfig":"191"},{"size":4239,"mtime":1591972543690,"results":"251","hashOfConfig":"191"},{"size":2634,"mtime":1595328739380,"results":"252","hashOfConfig":"191"},{"size":3297,"mtime":1595328739380,"results":"253","hashOfConfig":"191"},{"size":800,"mtime":1591972543690,"results":"254","hashOfConfig":"191"},{"size":4227,"mtime":1595328739380,"results":"255","hashOfConfig":"191"},{"size":1430,"mtime":1595328739370,"results":"256","hashOfConfig":"191"},{"size":537,"mtime":1608822884010,"results":"257","hashOfConfig":"191"},{"size":2411,"mtime":1591972543690,"results":"258","hashOfConfig":"191"},{"size":2442,"mtime":1595328739380,"results":"259","hashOfConfig":"191"},{"size":1150,"mtime":1591972543690,"results":"260","hashOfConfig":"191"},{"size":584,"mtime":1591972543690,"results":"261","hashOfConfig":"191"},{"size":2532,"mtime":1591972543690,"results":"262","hashOfConfig":"191"},{"size":3384,"mtime":1591972543690,"results":"263","hashOfConfig":"191"},{"size":839,"mtime":1595328739370,"results":"264","hashOfConfig":"191"},{"size":1420,"mtime":1595328739370,"results":"265","hashOfConfig":"191"},{"size":1155,"mtime":1591972543690,"results":"266","hashOfConfig":"191"},{"size":994,"mtime":1595266980800,"results":"267","hashOfConfig":"191"},{"size":1911,"mtime":1591972543690,"results":"268","hashOfConfig":"191"},{"size":2003,"mtime":1591972543690,"results":"269","hashOfConfig":"191"},{"size":1371,"mtime":1595328739370,"results":"270","hashOfConfig":"191"},{"size":2485,"mtime":1608822884010,"results":"271","hashOfConfig":"191"},{"size":1118,"mtime":1595328739370,"results":"272","hashOfConfig":"191"},{"size":1576,"mtime":1591972543690,"results":"273","hashOfConfig":"191"},{"size":2028,"mtime":1591972543690,"results":"274","hashOfConfig":"191"},{"size":1026,"mtime":1591972543690,"results":"275","hashOfConfig":"191"},{"size":839,"mtime":1591972543690,"results":"276","hashOfConfig":"191"},{"size":1690,"mtime":1595328739380,"results":"277","hashOfConfig":"191"},{"size":923,"mtime":1591972543690,"results":"278","hashOfConfig":"191"},{"size":981,"mtime":1591972543690,"results":"279","hashOfConfig":"191"},{"size":595,"mtime":1595328739370,"results":"280","hashOfConfig":"191"},{"size":773,"mtime":1591972543690,"results":"281","hashOfConfig":"191"},{"size":746,"mtime":1591972543690,"results":"282","hashOfConfig":"191"},{"size":1623,"mtime":1595328739370,"results":"283","hashOfConfig":"191"},{"size":585,"mtime":1591972543690,"results":"284","hashOfConfig":"191"},{"size":485,"mtime":1591972543690,"results":"285","hashOfConfig":"191"},{"size":546,"mtime":1591972543690,"results":"286","hashOfConfig":"191"},{"size":1170,"mtime":1591972543690,"results":"287","hashOfConfig":"191"},{"size":3067,"mtime":1595328739370,"results":"288","hashOfConfig":"191"},{"size":3497,"mtime":1608207812660,"results":"289","hashOfConfig":"191"},{"size":971,"mtime":1591972543690,"results":"290","hashOfConfig":"191"},{"size":3583,"mtime":1595328739380,"results":"291","hashOfConfig":"191"},{"size":4489,"mtime":1608822884010,"results":"292","hashOfConfig":"191"},{"size":3627,"mtime":1591972543690,"results":"293","hashOfConfig":"191"},{"size":2843,"mtime":1591972543690,"results":"294","hashOfConfig":"191"},{"size":4448,"mtime":1608822884010,"results":"295","hashOfConfig":"191"},{"size":1510,"mtime":1591972543690,"results":"296","hashOfConfig":"191"},{"size":2101,"mtime":1608822884010,"results":"297","hashOfConfig":"191"},{"size":300,"mtime":1591972543690,"results":"298","hashOfConfig":"191"},{"size":2018,"mtime":1608822884010,"results":"299","hashOfConfig":"191"},{"size":2216,"mtime":1591972543690,"results":"300","hashOfConfig":"191"},{"size":5611,"mtime":1591972543690,"results":"301","hashOfConfig":"191"},{"size":3497,"mtime":1595328739370,"results":"302","hashOfConfig":"191"},{"size":2726,"mtime":1595328739370,"results":"303","hashOfConfig":"191"},{"size":5137,"mtime":1595328739370,"results":"304","hashOfConfig":"191"},{"size":1591,"mtime":1608822884010,"results":"305","hashOfConfig":"191"},{"size":529,"mtime":1591972543690,"results":"306","hashOfConfig":"191"},{"size":2592,"mtime":1595328739370,"results":"307","hashOfConfig":"191"},{"size":4315,"mtime":1595328739380,"results":"308","hashOfConfig":"191"},{"size":3725,"mtime":1608822884010,"results":"309","hashOfConfig":"191"},{"size":2708,"mtime":1591972543690,"results":"310","hashOfConfig":"191"},{"size":4578,"mtime":1595328739370,"results":"311","hashOfConfig":"191"},{"size":3051,"mtime":1591972543690,"results":"312","hashOfConfig":"191"},{"size":1573,"mtime":1591972543690,"results":"313","hashOfConfig":"191"},{"size":1108,"mtime":1591972543690,"results":"314","hashOfConfig":"191"},{"size":3014,"mtime":1591972543690,"results":"315","hashOfConfig":"191"},{"size":7014,"mtime":1595328739370,"results":"316","hashOfConfig":"191"},{"size":2279,"mtime":1608822884010,"results":"317","hashOfConfig":"191"},{"size":1897,"mtime":1591972543690,"results":"318","hashOfConfig":"191"},{"size":889,"mtime":1595328739370,"results":"319","hashOfConfig":"191"},{"size":3998,"mtime":1608822884010,"results":"320","hashOfConfig":"191"},{"size":3108,"mtime":1608822884010,"results":"321","hashOfConfig":"191"},{"size":6549,"mtime":1595328739370,"results":"322","hashOfConfig":"191"},{"size":998,"mtime":1591972543690,"results":"323","hashOfConfig":"191"},{"size":1352,"mtime":1595328739370,"results":"324","hashOfConfig":"191"},{"size":1048,"mtime":1591972543690,"results":"325","hashOfConfig":"191"},{"size":1449,"mtime":1608822884010,"results":"326","hashOfConfig":"191"},{"size":2898,"mtime":1591972543690,"results":"327","hashOfConfig":"191"},{"size":2807,"mtime":1595328739380,"results":"328","hashOfConfig":"191"},{"size":3128,"mtime":1597773435360,"results":"329","hashOfConfig":"191"},{"size":3104,"mtime":1591972543690,"results":"330","hashOfConfig":"191"},{"size":3529,"mtime":1595328739370,"results":"331","hashOfConfig":"191"},{"size":1218,"mtime":1595328739370,"results":"332","hashOfConfig":"191"},{"size":972,"mtime":1591972543690,"results":"333","hashOfConfig":"191"},{"size":1119,"mtime":1591972543690,"results":"334","hashOfConfig":"191"},{"size":1629,"mtime":1591972543690,"results":"335","hashOfConfig":"191"},{"size":3516,"mtime":1595328739370,"results":"336","hashOfConfig":"191"},{"size":3371,"mtime":1595328739370,"results":"337","hashOfConfig":"191"},{"size":1133,"mtime":1591972543690,"results":"338","hashOfConfig":"191"},{"size":471,"mtime":1595328739370,"results":"339","hashOfConfig":"191"},{"size":789,"mtime":1591972543690,"results":"340","hashOfConfig":"191"},{"size":320,"mtime":1595328739370,"results":"341","hashOfConfig":"191"},{"size":3412,"mtime":1595328739370,"results":"342","hashOfConfig":"191"},{"size":640,"mtime":1591972543690,"results":"343","hashOfConfig":"191"},{"size":1206,"mtime":1595328739370,"results":"344","hashOfConfig":"191"},{"size":1166,"mtime":1595328739370,"results":"345","hashOfConfig":"191"},{"size":829,"mtime":1595328739370,"results":"346","hashOfConfig":"191"},{"size":4270,"mtime":1608822884010,"results":"347","hashOfConfig":"191"},{"size":1379,"mtime":1595328739370,"results":"348","hashOfConfig":"191"},{"size":241,"mtime":1595328739370,"results":"349","hashOfConfig":"191"},{"size":929,"mtime":1595328739370,"results":"350","hashOfConfig":"191"},{"size":2298,"mtime":1595328739370,"results":"351","hashOfConfig":"191"},{"size":720,"mtime":1595328739370,"results":"352","hashOfConfig":"191"},{"size":1463,"mtime":1591972543690,"results":"353","hashOfConfig":"191"},{"size":4812,"mtime":1595328739370,"results":"354","hashOfConfig":"191"},{"size":1431,"mtime":1595328739370,"results":"355","hashOfConfig":"191"},{"size":1071,"mtime":1591972543690,"results":"356","hashOfConfig":"191"},{"size":4249,"mtime":1608822884010,"results":"357","hashOfConfig":"191"},{"size":453,"mtime":1591972543690,"results":"358","hashOfConfig":"191"},{"size":205,"mtime":1595328739370,"results":"359","hashOfConfig":"191"},{"size":2379,"mtime":1591972543690,"results":"360","hashOfConfig":"191"},{"size":2718,"mtime":1595328739370,"results":"361","hashOfConfig":"191"},{"size":3856,"mtime":1595515541010,"results":"362","hashOfConfig":"191"},{"size":371,"mtime":1591972543690,"results":"363","hashOfConfig":"191"},{"size":314,"mtime":1591972543690,"results":"364","hashOfConfig":"191"},{"size":330,"mtime":1595328739370,"results":"365","hashOfConfig":"191"},{"size":4715,"mtime":1595328739370,"results":"366","hashOfConfig":"191"},{"size":2408,"mtime":1591972543690,"results":"367","hashOfConfig":"191"},{"size":6311,"mtime":1608822884010,"results":"368","hashOfConfig":"191"},{"size":1488,"mtime":1591972543690,"results":"369","hashOfConfig":"191"},{"size":1097,"mtime":1591972543690,"results":"370","hashOfConfig":"191"},{"size":1783,"mtime":1591972543690,"results":"371","hashOfConfig":"191"},{"size":941,"mtime":1591972543690,"results":"372","hashOfConfig":"191"},{"size":589,"mtime":1591972543690,"results":"373","hashOfConfig":"191"},{"size":230,"mtime":1591972543690,"results":"374","hashOfConfig":"191"},{"size":447,"mtime":1591972543690,"results":"375","hashOfConfig":"191"},{"size":1851,"mtime":1608822884010,"results":"376","hashOfConfig":"191"},{"size":4225,"mtime":1597773435360,"results":"377","hashOfConfig":"191"},{"size":155,"mtime":1591972543690,"results":"378","hashOfConfig":"191"},{"size":1466,"mtime":1608822884010,"results":"379","hashOfConfig":"191"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},"16hbpaw",{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"382"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"382"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"382"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"382"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"382"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"382"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"382"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"382"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"382"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"382"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"382"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"382"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"382"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"382"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"382"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"382"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"382"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"382"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"382"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"382"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"382"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"382"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"382"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"382"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"382"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"382"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"382"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"382"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"382"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"382"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"382"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"382"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"382"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"382"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"382"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"382"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"382"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"382"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"382"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"382"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"382"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"382"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"382"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"382"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"382"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"382"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"382"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"382"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"382"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"382"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"382"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"382"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"382"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"382"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"382"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"382"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"382"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"382"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"382"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"382"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"382"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"382"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"382"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"382"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"382"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"382"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"382"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"382"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"382"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"382"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"382"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"382"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"382"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"382"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"382"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"382"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"382"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"382"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"382"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"382"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"382"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"382"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"382"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"382"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"382"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"382"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"382"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"382"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"382"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"382"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"382"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"382"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"382"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"382"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"382"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"382"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"382"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"382"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"382"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"382"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"382"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"382"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"382"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"382"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"382"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"382"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"382"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"382"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"382"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"382"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"382"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"382"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"382"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"382"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"382"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"382"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"382"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"382"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"382"},"/home/alex/donuts/client/src/index.js",[],["879","880"],"/home/alex/donuts/client/src/serviceWorker.js",[],"/home/alex/donuts/client/src/i18n.js",[],"/home/alex/donuts/client/src/actions/authActions.jsx",[],"/home/alex/donuts/client/src/store/configureStore.jsx",["881","882","883"],"import {createStore, applyMiddleware, compose} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1';\nimport  {initialState} from \"store/initialState\"\nimport createHistory from 'history/createBrowserHistory'\nimport initSubscriber from 'redux-subscriber';\n\n// Create a history of your choosing (we're using a browser history in this case)\nexport const history = createHistory()\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: ['dashboard'],\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst router = routerMiddleware(history)\n\n\nexport  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(\n        applyMiddleware(router),\n        applyMiddleware(thunk),\n    )\n)\n\nconst subscribe = initSubscriber(store);\n\nexport const persistor = persistStore(store)\n","/home/alex/donuts/client/src/routes/index.jsx",["884"],"import App from \"containers/AppContainer\";\nimport LoginPage from \"containers/pages/LoginPage\"\n\n\nconst indexRoutes = [\n  //  { path: \"/login\", component: LoginPage},\n    { path: \"/\", component: App },\n];\n\nexport default indexRoutes;\n","/home/alex/donuts/client/src/actions/actionTypes.jsx",[],"/home/alex/donuts/client/src/actions/commonActions.jsx",[],"/home/alex/donuts/client/src/api/authenticateApi.jsx",["885","886","887"],"import {post, get,request} from './api'\n\nconst AUTH_URL  =  '/api/authenticate'\nconst DEMO_AUTH_URL  =  '/api/demo_authenticate'\nconst REGISTER_URL  =  '/api/register'\nconst VALIDATE_NEW_EMAIL_URL  =  '/api/validate_new_email'\nconst SECRET_URL= '/api/secret'\n\nexport default class AuthenticateApi {\n    static authenticate(email, password) {\n        let body = JSON.stringify({email: email, password: password})\n        return request(AUTH_URL,'POST',body,null,false)\n    }\n\n    static demo_authenticate() {\n        let body = JSON.stringify({})\n        return request(DEMO_AUTH_URL,'POST',body,null,false)\n    }\n\n    static register(credentials) {\n        let body = JSON.stringify({\n            first_name: credentials.first_name,\n            last_name: credentials.last_name,\n            email: credentials.email,\n            password: credentials.password,             \n        })\n        return request(REGISTER_URL, \"POST\", body,null,false)\n    }\n\n\n    static validateEmail(email) {\n        let body = JSON.stringify({email})\n        return request(VALIDATE_NEW_EMAIL_URL, \"POST\", body,null,false)\n    }\n\n\n    static logout() {\n\n    }\n\n\n}\n","/home/alex/donuts/client/src/actions/profile/profileActions.jsx",["888","889","890","891"],"import * as actionTypes from \"actions/actionTypes\"\nimport * as actions from \"actions/actionTypes\"\nimport * as profileActionTypes from \"actions/profile/actionTypes\"\nimport profileApi from \"api/profileApi\"\nimport  * as commonActions from \"actions/commonActions\"\nimport *  as notifierActions from \"actions/notifierActions\"\nimport tenantApi from 'api/tenantApi'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nexport function loadProfile() {\n    return function (dispatch) {\n        return commonActions.callApi(\n            dispatch,\n            {\n              apiFunction: profileApi.getProfile,\n              args:[],\n              name:\"profile\",\n              action: \"load\",              \n            }).then(json =>{\n              var profile = {user_id: json.included.users[0].id, ...json.included.users[0],...json.profile}\n              //console.log(profile)\n            commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:profile},()=>{return{user_not_found: true}})\n              dispatch(loadSelfBalance(json.profile.self_account.id))\n              dispatch(loadDistribBalance(json.profile.distrib_account.id))\n            })\n    }\n}\n\nexport function loadAccount() {\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'ACCOUNT', \n        apiFunction:profileApi.getProfile,\n        args:[]\n      }\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            var profile = {...json.included.users[0],...json.profile}\n            commonActions.apiResult(dispatch,actions.loadSuccess('ACCOUNT'), {item:profile},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\nexport function loadTenantByDomain(domain){\n  return function(dispatch){\n    const options = {\n      useToken: false,\n      action: 'load',\n      name: 'CURRENT_TENANT', \n      apiFunction:tenantApi.loadTenantByDomain,\n      args:[domain]\n    }\n\n    return commonActions.callApi(dispatch,options).then(json=>{\n      commonActions.apiResult(dispatch,actionTypes.loadSuccess('CURRENT_TENANT'),{tenant: json.tenant})\n    })\n\n  }\n}\n\n\nexport function loadByToken(token){\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'PROFILE', \n        apiFunction:profileApi.getByToken,\n        args:[token]\n      }\n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:json.user},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\nexport function loadByRecoverToken(token){\n  return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'PROFILE', \n        apiFunction:profileApi.getByRecoverToken,\n        args:[token]\n      }    \n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,actions.loadSuccess('PROFILE'), {item:json.user},()=>{return{user_not_found: true}})\n          })\n  }\n}\n\n\nexport function confirmEmail(token){\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'confirm',\n      name: 'email', \n      apiFunction:profileApi.confirmEmail,\n      args:[token]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            dispatch(confirmEmailSuccess(json.user,json.auth_token))\n            dispatch(notifierActions.enqueueSnackbar({\n                    message: \"Email confirmed\",\n                    options: {\n                        variant: 'success',\n                    }\n                  })\n                )\n          })\n  }\n}\n\n\n\nexport function saveProfile(profile) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'save',\n      name: 'ACCOUNT', \n      apiFunction: profileApi.saveProfile,\n      args:[profile]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            commonActions.apiResult(dispatch,profileActionTypes.SAVE_ACCOUNT_SUCCESS, {profile: json.profile} )\n            dispatch(loadProfile())\n            //dispatch(saveProfileSuccess(json.user))\n          })\n  }\n\n}\n\n\nexport function saveAvatar(payLoad) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'save',\n      name: 'AVATAR', \n      apiFunction: profileApi.saveAvatar,\n      args:[payLoad]\n    }    \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n            commonActions.apiResult(dispatch,\"SAVE_AVATAR_SUCCESS\", {} )\n          })\n  }\n\n}\n\nexport function loadSelfBalance(profile_id) {\n    return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'self_balance', \n        apiFunction: profileApi.loadSelfBalance,\n        args:[profile_id]\n      }  \n\n      return commonActions.callApi(\n            dispatch,options).then(json =>dispatch(loadSelfBalanceSuccess(json.account)))\n    }\n}\n\nexport function loadDistribBalance(profile_id) {\n    return function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'load',\n        name: 'distrib_balance', \n        apiFunction: profileApi.loadSelfBalance,\n        args:[profile_id]\n      }  \n        return commonActions.callApi(\n            dispatch,options).then(json =>dispatch(loadDistribBalanceSuccess(json.account)))\n    }\n}\n\n\nexport function recoverPassword(email) {\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'RECOVER',\n      name: 'PASSWORD', \n      apiFunction: profileApi.requestNewPassword,\n      args:[email]\n    }  \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,'PASSWORD_RECOVER',{},()=>{return{user_not_found: true}})\n             dispatch(notifierActions.enqueueSnackbar({\n                     message: \"Recovery email was sent\",\n                     options: {\n                         variant: 'success',\n                     }\n                   })\n                 )  \n          })\n  }\n}\n\nexport function sendConfirmEmail(params){\n  if (params !==undefined) {\n    let email = params.email\n    if (email !==undefined){\n      return function (dispatch) {\n        const options = {\n          useToken: false,\n          action: 'SEND',\n          name: 'CONFIRM_EMAIL', \n          apiFunction: profileApi.sendConfirmEmail,\n          args:[email]\n        }  \n\n          return commonActions.callApi(\n              dispatch,options).then(json =>{\n                commonActions.apiResult(dispatch,'CONFIRM_EMAIL_SENT',{},()=>{return{user_not_found: true}})\n                dispatch(notifierActions.enqueueSnackbar({\n                        message: \"Confirm email was sent\",\n                        options: {\n                            variant: 'success',\n                        }\n                      })\n                    )  \n              })\n      }\n    }\n  }\n}\nexport function updatePassword(recover_token, password) {\n  return function (dispatch) {\n    const options = {\n      useToken: false,\n      action: 'update',\n      name: 'PASSWORD', \n      apiFunction: profileApi.submitNewPassword,\n      args: [recover_token, password],\n    }  \n\n      return commonActions.callApi(\n          dispatch,options).then(json =>{\n             commonActions.apiResult(dispatch,'UPDATE_PASSWORD',{},()=>{return{user_not_found: true}})\n             console.log(json)\n             dispatch(notifierActions.enqueueSnackbar({\n                     message: \"Password updated\",\n                     options: {\n                         variant: 'success',\n                     }\n                   })\n                 )\n              localStorage.setItem('auth_token', json.auth_token)\n              localStorage.setItem('tenant', json.tenant)\n              dispatch({\n                type: actionTypes.AUTHENTICATE_SUCCESS,\n                token: json.auth_token,\n                username:json.email\n              })\n              dispatch(loadProfile())    \n          })\n  }\n}\nfunction saveProfileSuccess(user){\n    return {\n        type: profileActionTypes.SAVE_PROFILE_SUCCESS,\n        profile: user\n    }\n}\n\n\nfunction profileSuccess(user){\n    return {\n        type: profileActionTypes.LOAD_PROFILE_SUCCESS,\n        ...user\n    }\n}\n\nfunction  loadSelfBalanceSuccess(account) {\n    return{\n        type: profileActionTypes.LOAD_SELF_BALANCE_SUCCESS,\n        account: account\n    }\n}\n\nfunction  loadDistribBalanceSuccess(account) {\n    return{\n        type: profileActionTypes.LOAD_DISTRIB_BALANCE_SUCCESS,\n        account: account\n    }\n}\n\n\nfunction confirmEmailSuccess(user,token) {\n  return{\n    type: profileActionTypes.CONFIRM_EMAIL_SUCCESS,\n    user,\n    token\n  }\n}\n","/home/alex/donuts/client/src/actions/notifierActions.jsx",[],"/home/alex/donuts/client/src/reducers/index.jsx",["892"],"import { combineReducers } from 'redux'\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport errors  from './errors'\r\nimport authenticate from './authenticate'\r\nimport dashboard from './dashboard'\r\nimport system from './system'\r\nimport profile from './profile'\r\nimport account from './account'\r\nimport modal from './modal'\r\nimport notifier from './notifier'\r\nimport loader from './loader'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\n\r\nconst rootReducer  = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    errors,\r\n    authenticate,\r\n    dashboard,\r\n    system,\r\n    profile,\r\n    account,\r\n    modal,\r\n    notifier,\r\n    events: createReducer(loader,'EVENT'),\r\n    store:createReducer(loader,'STORE'),\r\n    regards: createReducer(loader,'REGARD'),\r\n    requests: createReducer(loader,'REQUEST'),\r\n    departments: createReducer(loader,'DEPARTMENT'),\r\n    profiles: createReducer(loader,'PROFILE'),\r\n    donuts: createReducer(loader,\"DONUT\"),\r\n    account_operations: createReducer(loader,\"ACCOUNT_OPERATION\"),\r\n    schedulers: createReducer(loader,\"SCHEDULER\"),\r\n    plugins: createReducer(loader,\"PLUGIN\"),\r\n    form: formReducer,\r\n    })\r\n\r\nexport default rootReducer\r\n\r\nfunction createReducer(reducerFunction, name){\r\n  return (state, action) => {\r\n        return reducerFunction(state, action,name)\r\n    }\r\n}\r\n","/home/alex/donuts/client/src/store/initialState.jsx",[],"/home/alex/donuts/client/src/containers/AppContainer.jsx",["893","894","895","896","897","898","899"],"import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport  { Redirect } from 'react-router-dom'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport App from 'components/App'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: {\n            onLoad: () =>{\n                dispatch(loadProfile())\n            }\n\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","/home/alex/donuts/client/src/containers/pages/LoginPage.jsx",["900","901","902"],"import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport LoginForm from 'components/forms/LoginForm'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport {recoverPassword} from '../../actions/profile/profileActions'\nimport {hideModal} from 'actions/modal/modalActions'\nimport  { Redirect } from 'react-router-dom'\nimport RecoverForm from 'components/forms/RecoverForm'\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: {\n            onLogin: (username,password) => {\n                dispatch(authenticate(username,password))\n            },\n            hideModal: () =>{\n                dispatch(hideModal)\n            },\n            onRecoverPassword: (email) => {\n              dispatch(recoverPassword(email))\n              dispatch(push('/'))\n            }\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        modal: state.modal\n    }\n}\n\n\n\nclass LoginPage  extends  Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          recoverMode: false\n        }\n    }\n    submit = values => {\n        this.props.actions.onLogin(values.username, values.password)\n    }\n\n    recoverModeToggle = () => {\n      this.setState({recoverMode: !this.state.recoverMode})\n    }\n\n    sendRecoverEmail = values => {\n        this.props.actions.onRecoverPassword(values.email)\n    }\n\n    render() {\n\n       if (this.state.recoverMode) {\n         return (\n            <div>\n              <RecoverForm onSubmit ={this.sendRecoverEmail}/>\n            </div>\n          )\n       }\n        return (\n            <div>\n                <LoginForm onSubmit ={this.submit} recoverToggle = {this.recoverModeToggle.bind(this)} authenticate ={this.props.authenticate}/>\n            </div>\n        )\n    }\n    /*render() {\n        if(!this.props.authenticate || !this.props.authenticate.authenticated) {\n            return (\n                <div>\n                    <LoginForm onSubmit ={this.submit} authenticate ={this.props.authenticate}/>\n                </div>\n            )\n        }\n        else {\n            if (this.props.modal !== undefined && this.props.modal.show){\n                this.props.hideModal()\n            }\n            return (\n                <div>\n                    <Redirect to='/'/>\n                </div>\n            )\n        }\n    }*/\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","/home/alex/donuts/client/src/actions/errores.jsx",["903"],"import { demo_authenticate } from \"./authActions\";\r\nimport { sendConfirmEmail } from \"./profile/profileActions\";\r\n\r\nconst errores =  {\r\n    5000: {caption: \"Email not confirmed\", actions:[\r\n         {action: sendConfirmEmail, actionText: \"Send again\"}\r\n     ]\r\n    }\r\n}\r\n  \r\n  \r\n  export default errores;\r\n  ","/home/alex/donuts/client/src/reducers/loader.jsx",["904"],"import * as actionTypes from \"../actions/actionTypes\";\nimport pluralize from 'pluralize'\nconst defaultState ={items: [], page:0}\n\n\nexport default function loader(state = defaultState, action, name) {\n  switch (action.type) {\n    case actionTypes.loadSuccess(pluralize.plural(name)):\n     return {\n       ...state,\n       ...action,\n       items: action.items,\n       max_id: (action.items!==undefined && action.items.length > 0 )? action.items[0].id: null\n     }\n\n    case actionTypes.addSuccess(name):\n        var new_state = {...state,...action, items: state.items}\n        if (action.items !== undefined)  {\n          new_state = {...new_state, items: new_state.items.concat(action.items)}\n        }\n        if (action.item !== undefined) {\n          new_state = {...new_state, items: [...new_state.items, action.item]}\n        }\n        return new_state\n\n    case actionTypes.addSuccess(pluralize.plural(name)):\n      var new_state = {...state,...action, items: state.items}\n      if (action.items !== undefined)  {\n        new_state = {...new_state, items: new_state.items.concat(action.items)}\n      }\n      if (action.item !== undefined) {\n        new_state = {...new_state, items: [...new_state.items, action.item]}\n      }\n      return new_state\n\n    case actionTypes.loadFailed(name):\n      return {\n          ...state\n      }\n    case actionTypes.updateSuccess(name):\n      var newItems   = state.items.map(item => {\n        if (item.id === action.item.id){\n          return action.item\n        }\n        return item\n      }) \n      console.log(newItems)\n      if (newItems.length ===0) {\n        newItems.push(action.item)\n        console.log(newItems)\n      }\n\n      return {\n          ...state,\n          items: newItems,\n          selected: action.item\n      }\n    case actionTypes.deleteSuccess(name):\n      return {\n        ...state,\n        items: state.items.filter(function(item,index,arr){\n          //return action.items.indexOf(item.id) == -1\n          return action.item.id !== item.id\n        })\n      }\n    case actionTypes.loadItemSuccess(name):\n      return {\n        ...state,\n        loadedItem: action.item\n      }\n\n    case  actionTypes.loadItemFailed(name):\n      return {\n        ...state,\n        loadItem: undefined\n      }\n\n    case actionTypes.AUTHENTICATE_FAILED:\n      return  {\n          ...defaultState\n      }\n    case actionTypes.LOG_OUT:\n      return  {\n        ...defaultState\n      }\n\n    default:\n        return state\n  }\n}\n","/home/alex/donuts/client/src/reducers/modal.jsx",[],"/home/alex/donuts/client/src/reducers/notifier.jsx",[],"/home/alex/donuts/client/src/reducers/account.jsx",[],"/home/alex/donuts/client/src/reducers/profile.jsx",[],"/home/alex/donuts/client/src/reducers/system.jsx",[],"/home/alex/donuts/client/src/reducers/errors.jsx",["905"],"import * as actionTypes from \"actions/actionTypes\";\nexport default function errors(state={list:[]}, action) {\n    switch (action.type) {\n\n        case actionTypes.ADD_ERROR:\n        return {\n            ...state,\n            list: [...state.list, action.errorText],\n            activeError: true\n        }\n\n\n        case actionTypes.REMOVE_ERROR:\n            return {\n              ...state.filter((error, i) => i !== action.index)\n            }\n\n       case  actionTypes.CLEAR_ERRORS:\n            return {\n              list:[]\n            }\n\n         break;\n\n        default:\n            return state;\n    }\n}\n","/home/alex/donuts/client/src/reducers/dashboard.jsx",[],"/home/alex/donuts/client/src/reducers/authenticate.jsx",[],"/home/alex/donuts/client/src/actions/listActions.jsx",["906","907","908","909","910","911"],"import React from 'react';\r\nimport * as actionTypes from \"./actionTypes\"\r\nimport  * as commonActions from \"actions/commonActions\"\r\nimport apis from \"api/apiRoot\"\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport pluralize from 'pluralize'\r\n\r\nexport default class ListActions {\r\n  constructor(api) {\r\n    this.nameUpper = api.itemName.toUpperCase()\r\n    this.nameLower = api.itemName.toLowerCase()\r\n    this.api = api\r\n  }\r\n\r\n  loadItems(args={}) {\r\n       var loadFunction = function (dispatch) {\r\n          const options = {\r\n            useToken: true,\r\n            action: 'load',\r\n            name:  pluralize.plural(this.api.itemName), \r\n            apiFunction:   this.api.loadItems, \r\n            args:[args]\r\n          }\r\n          return commonActions.callApi(\r\n              dispatch,options).then(json =>{\r\n                \r\n                let  items   = json[pluralize.plural(this.nameLower)]\r\n                \r\n                if (items === undefined) {\r\n                  items = []\r\n                }\r\n                if (args.page !==undefined){\r\n                  let pagination = {\r\n                    page:args.page,\r\n                    per_page:json.headers.get('per-page'),\r\n                    total:json.headers.get('total'),\r\n                    request_date:json.headers.get('request_date')\r\n                  }\r\n                  if (args.page ==0 || args.page == 1) {\r\n                    commonActions.apiResult(dispatch,actionTypes.loadSuccess(pluralize.plural(this.nameUpper)), \r\n                    {items:items,...pagination},\r\n                    ()=>{return{items: []}})\r\n\r\n                  }\r\n                  else {\r\n                    commonActions.apiResult(dispatch,actionTypes.addSuccess(pluralize.plural(this.nameUpper)), \r\n                    {items:items,...pagination},\r\n                    ()=>{return{items: []}})\r\n                  }\r\n                }\r\n                else {\r\n                  commonActions.apiResult(dispatch,actionTypes.loadSuccess(pluralize.plural(this.nameUpper)), {items:items},()=>{return{items: []}})\r\n                }\r\n              })\r\n      }\r\n      return loadFunction.bind(this)\r\n  }\r\n\r\n  getItem(id, callback = undefined){\r\n    var getFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'get',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.getItem, \r\n        args:[id]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(dispatch,actionTypes.getSuccess(this.nameUpper),{item: json[this.nameLower]})  \r\n          console.log(callback)   \r\n          console.log(callback.success)         \r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            console.log('callback')\r\n            callback.success(dispatch, json[this.nameLower])\r\n          }\r\n        })\r\n    }\r\n    return getFunction.bind(this)\r\n  }\r\n\r\n\r\n  addItem(item,callback = undefined) {\r\n    var addFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'add',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.addItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(dispatch,actionTypes.addSuccess(this.nameUpper),{item: json[this.nameLower]})\r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            callback.success(dispatch)\r\n          }\r\n        })\r\n    }\r\n    return addFunction.bind(this)\r\n  }\r\n\r\n  updateItem(item,callback = undefined) {\r\n    var editFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'update',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.updateItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          let  items   = json[pluralize.plural(this.nameLower)]\r\n          if (items !== undefined){\r\n            items.forEach(item => {\r\n              commonActions.apiResult(\r\n                dispatch,\r\n                actionTypes.updateSuccess(this.nameUpper),\r\n                {item: item}\r\n              )\r\n            });\r\n          }else{\r\n            commonActions.apiResult(\r\n              dispatch,\r\n              actionTypes.updateSuccess(this.nameUpper),\r\n              {item: json[this.nameLower]}\r\n            )\r\n          }\r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            callback.success(dispatch)\r\n          }\r\n        })\r\n    }\r\n    return editFunction.bind(this)\r\n  }\r\n\r\n  commentItem(params,callback){\r\n    var commentFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'comment',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.commentItem, \r\n        args:[params.item,params.comment]\r\n      }\r\n      \r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(\r\n            dispatch,\r\n            actionTypes.updateSuccess(this.nameUpper),\r\n            {item: json[this.nameLower]}\r\n          )\r\n          if (callback !==undefined && callback.success !==undefined) {\r\n            callback.success(dispatch)\r\n          }\r\n        })\r\n    }\r\n    return commentFunction.bind(this)\r\n  }\r\n\r\n  deleteItem(item) {\r\n    var deleteFunction =  function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'delete',\r\n        name:  this.api.itemName, \r\n        apiFunction:   this.api.updateItem, \r\n        args:[item]\r\n      }\r\n\r\n\r\n      return commonActions.callApi(\r\n        dispatch,options).then(json => {\r\n          commonActions.apiResult(\r\n            dispatch,\r\n            actionTypes.deleteSuccess(this.nameUpper),\r\n            {item: json[this.nameLower]}\r\n          )\r\n        })\r\n    }\r\n    return deleteFunction.bind(this)\r\n  }\r\n}\r\n\r\n","/home/alex/donuts/client/src/common/storage.jsx",[],"/home/alex/donuts/client/src/api/apiRoot.jsx",[],"/home/alex/donuts/client/src/api/api.jsx",[],"/home/alex/donuts/client/src/api/tenantApi.jsx",["912"],"\r\nimport {post,get,del,put,request} from './api'\r\n\r\nconst TENANT_BY_DOMAIN  =  '/api/tenant/show_by_domain'\r\n\r\n\r\nexport default class ProfileApi {\r\n\r\n    static itemName ='tenant'\r\n\r\n    static loadTenantByDomain(domain){\r\n        return get(TENANT_BY_DOMAIN +'?domain=' + domain)\r\n    }  \r\n    \r\n    static showTenant(token) {\r\n        return get('/api/tenant/current',token)\r\n    }\r\n\r\n\r\n    static saveTenant(token, tenant) {\r\n        let body = JSON.stringify({\r\n          ...tenant,                 \r\n        })\r\n        return put('/api/tenant/current', body,token)\r\n    }\r\n\r\n    static migrateAvatars(token) {\r\n        return post('/api/tenant/migrate_avatars/',null,token)\r\n    }\r\n\r\n    static saveLogo(token,payload){\r\n        let body =payload\r\n        return request('/api/tenant/upload_logo/', \"POST\", body,token,false,true)\r\n      }\r\n}\r\n","/home/alex/donuts/client/src/api/profileApi.jsx",["913"],"\nimport {post,get,del,put,request} from './api'\n\nconst PROFILE_URL  =  '/api/profile'\nconst PROFILES_URL  =  '/api/profiles'\nconst SELF_ACCOUNT_URL =  '/api/self_accounts'\nconst DISTRIB_ACCOUNT_URL =  '/api/distrib_accounts'\nconst CONFIRM_EMAIL_URL = '/api/confirm_email'\nconst SEND_CONFIRM_EMAIL_URL = '/api/send_confirm_email'\nconst RECOVER_URL = '/api/users/password'\nconst RECOVER_BY_TOKEN ='/api/users/recover'\n\n\nexport default class ProfileApi {\n    static getProfile(token) {\n      return  get(PROFILE_URL, token)\n    }\n\n    static getProfileById(token,id) {\n      return  get(PROFILES_URL+'/'+id, token)\n    }\n\n    static getByToken(token, confirm_token){\n      return get(CONFIRM_EMAIL_URL +'?token=' + confirm_token)\n    }\n\n    static getByRecoverToken(token, recover_token){\n      return get(RECOVER_BY_TOKEN +'?recover_token=' + recover_token)\n    }\n\n    static confirmEmail(token, confirm_token) {\n      let body = JSON.stringify({\n        token: confirm_token\n      })\n      return post(CONFIRM_EMAIL_URL, body, token)\n    }\n\n    static sendConfirmEmail(email) {\n      let body = JSON.stringify({\n        email: email\n      })\n      return post(SEND_CONFIRM_EMAIL_URL, body)\n    }\n\n    static saveProfile(token,profile){\n      let body =JSON.stringify({\n        email: profile.email,\n        first_name: profile.first_name,\n        last_name: profile.last_name,\n        department_id: profile.department ? profile.department.id: null,\n        position: profile.position,\n        admin: profile.admin,\n        active: profile.active\n      })\n      return put(PROFILE_URL + 's/' + profile.id, body,token)\n    }\n\n    static loadSelfBalance(token, account_id){\n        return  get(SELF_ACCOUNT_URL +'/' + account_id  , token)\n    }\n\n    static loadDistribBalance(token, account_id){\n        return  get(DISTRIB_ACCOUNT_URL +'/' + account_id , token)\n    }\n\n    static requestNewPassword(token, email) {\n      let body =JSON.stringify({\n        email: email\n      })\n      return put(RECOVER_URL, body, token )\n    }\n\n    static submitNewPassword(recover_token, password) {\n      let body =JSON.stringify({\n        recover_token: recover_token,\n        password: password\n      })\n      return request(RECOVER_URL, \"POST\", body,null,false)\n    }\n\n    static saveAvatar(token,payload) {\n      let body =payload\n      return request('/api/avatars', \"POST\", body,token,false,true)\n    }\n\n\n}\n","/home/alex/donuts/client/src/actions/profile/actionTypes.jsx",[],"/home/alex/donuts/client/src/components/App.js",["914","915","916","917","918","919","920","921","922","923"],"import React, { Component } from 'react';\r\nimport {withRouter,Switch, Route, Redirect } from 'react-router-dom'\r\nimport classNames from \"classnames\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport HeaderContainer from \"containers/HeaderContainer\"\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\nimport red from '@material-ui/core/colors/red';\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\nimport {connect} from 'react-redux'\r\nimport {authenticate,logout,checkAuth}  from 'actions/authActions'\r\nimport {push } from 'connected-react-router'\r\n\r\nimport appStyle from \"assets/jss/layouts/appStyle.jsx\";\r\n//import Sideboard from \"components/Sidebar/Sideboard\"\r\nimport SideboardContainer from \"containers/SideboardContainer\"\r\nimport Modal from 'modals/Modal'\r\nimport Notifier from 'components/Notifier'\r\nimport appRoutes from \"routes/appRoutes.jsx\";\r\nimport { container } from 'assets/jss/baseStyles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {...green}, // Purple and green play nicely together.\r\n        secondary: {\r\n            ...orange,\r\n            A400: '#00e677',\r\n        },\r\n        error: red,\r\n    },\r\n\r\n});\r\n\r\n\r\nconst switchRoutes  = (\r\n  <Switch>\r\n    {appRoutes.map((prop, key) => {\r\n        if (prop.authenticated !== undefined && prop.authenticated\r\n            && prop.active\r\n        ) {\r\n            if (prop.redirect)\r\n                return <Redirect from={prop.path} to={prop.to} key={key}/>;\r\n            return <Route path={prop.path} component={prop.component} key={key}/>;\r\n        }\r\n    })}\r\n  </Switch>\r\n);\r\nconst switchAnonymousRoutes = (\r\n    <Switch>\r\n        {appRoutes.map((prop, key) => {\r\n            if (prop.anonymous && prop.active) {\r\n                if (prop.redirect)\r\n                    return <Redirect from={prop.path} to={prop.to} key={key}/>;\r\n                return <Route path={prop.path} component={prop.component} key={key}/>;\r\n            }\r\n        })}\r\n    </Switch>\r\n);\r\n\r\nclass App extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobileOpen: false,\r\n      drawerOpen: true\r\n    };\r\n    this.resizeFunction = this.resizeFunction.bind(this);\r\n    this.mainPanel = React.createRef()\r\n  }\r\n  handleDrawerToggle = () => {\r\n    this.setState({ mobileOpen: !this.state.mobileOpen });\r\n  };\r\n\r\n  resizeFunction() {\r\n    if (window.innerWidth >= 960) {\r\n      this.setState({ mobileOpen: false });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if(this.props.authenticate.authenticated) {\r\n        this.props.actions.onLoad()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {  \r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      if (this.mainPanel.current !== undefined && this.mainPanel.current !==null){\r\n        const ps = new PerfectScrollbar(this.mainPanel.current)\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", this.resizeFunction);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname){\r\n      if (this.mainPanel.current !==undefined && this.mainPanel.current !== null) {\r\n        try{\r\n          this.mainPanel.current.scrollTop()\r\n        }\r\n        catch{\r\n          this.mainPanel.current.scrollTop = 0\r\n        }\r\n      }\r\n      if (this.state.mobileOpen) {\r\n        this.setState({ mobileOpen: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    console.log('Open drawer');\r\n    this.setState({ drawerOpen: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    console.log('Close drawer');\r\n    this.setState({ drawerOpen: false });\r\n  };\r\n\r\n\r\n\r\n    render() {\r\n        const { classes,authenticate, ...rest } = this.props;\r\n        let auth = authenticate.authenticated;\r\n        var mainPanelClass;\r\n        if(!this.state.drawerOpen || !auth){\r\n              mainPanelClass = classNames(classes.mainPanel, classes.mainPanelWide);\r\n            //  {classes.mainPanel,!this.state.drawerOpen && classes.mainPanelWide}\r\n        }\r\n        else {\r\n            mainPanelClass = classNames(classes.mainPanel);\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                    <Notifier />\r\n                    {auth && (<div className={classes.wrapper}>\r\n                            {auth && (<SideboardContainer\r\n                              routes={appRoutes}\r\n                              handleDrawerOpen = {this.handleDrawerOpen.bind(this)}\r\n                              handleDrawerClose = {this.handleDrawerClose.bind(this)}\r\n                              open = {this.state.drawerOpen}\r\n                              color=\"gray\"\r\n                              {...rest}\r\n                            />)}\r\n                            <div className={mainPanelClass} ref={this.mainPanel}>\r\n                                {auth && (<HeaderContainer  routes={appRoutes} {...rest}/>)}\r\n                                <div className={classes.content}>\r\n                                    <div className={classes.container}>{switchRoutes}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                    )}\r\n                    {!auth &&\r\n                         <div className={mainPanelClass} >\r\n                            <div className={classes.content}>\r\n                                <div className={classes.container}>{switchAnonymousRoutes}</div>\r\n                            </div>\r\n                        </div>}\r\n                    <Modal/>\r\n            </MuiThemeProvider>\r\n            );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRouter(withStyles(appStyle)(App));\r\n","/home/alex/donuts/client/src/actions/modal/modalActions.jsx",["924","925"],"import * as actionTypes from 'actions/modal/actionTypes'\nimport {subscribe} from 'redux-subscriber';\nimport * as modalResults from 'actions/modal/modalResults'\n\nexport function showModal(modalName,body){\n    return {\n        type: actionTypes.SHOW_MODAL,\n        modalName: modalName,\n        body: body\n    }\n}\n\nexport function hideModal(){\n    console.log(\"HIDE_MODAL\")\n    return {\n        type: actionTypes.HIDE_MODAL,\n    }\n}\n\n\nexport function confirm(dispatch,body){\n  return new Promise((resolve, reject) => {\n\n    const unsubscribe = subscribe('modal.result', state => {\n      if (state.modal.result !== undefined){\n        unsubscribe();\n        if (state.modal.result == modalResults.CANCEL || state.modal.result == modalResults.EMPTY) {\n          reject(state.modal.result)\n        }\n        else {\n          resolve(state.modal.result);\n        }\n      }\n    });\n\n    dispatch(showModal('CONFIRM_DIALOG', body))\n  })\n}\n\n\nexport function resultModal(result){\n  return {\n    type: actionTypes.RESULT_MODAL,\n    result: result\n  }\n}\n","/home/alex/donuts/client/src/components/forms/RecoverForm.jsx",[],"/home/alex/donuts/client/src/components/forms/LoginForm.jsx",[],"/home/alex/donuts/client/src/api/profilesApi.jsx",["926","927"],"import {post,get,del,put,request} from './api'\r\n\r\nconst PROFILES_URL = 'api/profiles'\r\n\r\nexport default class ProfilesApi {\r\n    \r\n    static itemName ='profile'\r\n\r\n    static loadItems(token,args) {\r\n        if (args.show_score){\r\n          return  get(PROFILES_URL+'?show_score='+ args.show_score, token)\r\n        }\r\n        else if (args.show_balance){\r\n          return  get(PROFILES_URL+'?show_balance='+ args.show_balance, token)\r\n        }\r\n        else if (args.show_sent){\r\n          return  get(PROFILES_URL+'?show_sent='+ args.show_sent, token)\r\n        }\r\n        else {\r\n          return  get(PROFILES_URL, token)\r\n        }\r\n    }\r\n\r\n    static addItem(token, item) {\r\n      let body = JSON.stringify({\r\n        department_id: item.department ? item.department.id: null,\r\n        position: item.position\r\n      })\r\n      return post(PROFILES_URL, body,token)\r\n    }\r\n\r\n    static updateItem(token, item) {\r\n        let body = JSON.stringify({\r\n          ...item,  \r\n          department_id: item.department ? item.department.id: null,            \r\n        })\r\n        return put(PROFILES_URL+'/'+item.id, body,token)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","/home/alex/donuts/client/src/api/accountLogApi.jsx",["928","929","930","931"],"\r\nimport {post,get,del,put,request} from './api'\r\n\r\nconst URL  =  '/api/account_operations'\r\n\r\n\r\nexport default class AccountLogApi {\r\n\r\n     \r\n    static itemName ='account_operation'\r\n\r\n\r\n    static loadItems(token, args) {\r\n        if (args.page !==undefined){\r\n            return  get(URL+'?account_id='+args.id+'&page='+ args.page, token)\r\n        }\r\n        return  get(URL+'?account_id='+args.id+'&page=1', token)\r\n    }\r\n\r\n    static getItem(token, id){\r\n        return  get(URL+'/'+id, token)\r\n    }\r\n\r\n\r\n\r\n}","/home/alex/donuts/client/src/api/pluginApi.jsx",["932","933"],"import {post,get,del,put,request} from './api'\r\n\r\nconst API_ENDPOINT = 'api/plugins'\r\n\r\n\r\nexport default class PluginApi {\r\n    \r\n    static itemName ='plugin'\r\n    \r\n    static loadItems(token) {\r\n      return  get(API_ENDPOINT, token)\r\n    }\r\n\r\n    static addItem(token, item) {\r\n      let body = JSON.stringify({\r\n        ...item\r\n      })\r\n      return post(API_ENDPOINT, body,token)\r\n    }\r\n\r\n    static updateItem(token, item) {\r\n      let body = JSON.stringify({\r\n        ...item\r\n      })\r\n      return put(API_ENDPOINT+'/'+item.id, body,token)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","/home/alex/donuts/client/src/api/requestApi.jsx",["934","935","936"],"\r\nimport {post,get,del,put,request} from './api'\r\n\r\n\r\nconst REQUEST = '/api/regards/requests'\r\nconst ACTIVATE_URL ='/api/regards/activate'\r\n\r\nexport default class RequestApi {\r\n\r\n     \r\n    static itemName ='request'\r\n\r\n    static loadItems(token){\r\n        return get(REQUEST+'?archive=true', token)\r\n    }\r\n\r\n    static updateItem(token, regard) {\r\n        let body = JSON.stringify({\r\n            ...regard\r\n          })\r\n        return  post(ACTIVATE_URL, body,token)\r\n    }  \r\n}","/home/alex/donuts/client/src/api/tenantPluginApi.jsx",["937","938"],"import {post,get,del,put,request} from './api'\r\n\r\nconst API_ENDPOINT = 'api/tenant_plugins'\r\n\r\n\r\nexport default class TenantPluginApi {\r\n    \r\n    static itemName ='plugin'\r\n    \r\n    static loadItems(token) {\r\n      return  get(API_ENDPOINT, token)\r\n    }\r\n\r\n    static addItem(token, item) {\r\n      let body = JSON.stringify({\r\n        ...item\r\n      })\r\n      return post(API_ENDPOINT, body,token)\r\n    }\r\n\r\n    static updateItem(token, item) {\r\n    \r\n      let tenant_settings = Object.keys(item).reduce((object, key) => {\r\n        if (item.settings.map(x=>x.name).includes(key)) {\r\n          object[key] = item[key]\r\n        }\r\n        return object\r\n      }, {})\r\n\r\n      let body = JSON.stringify({\r\n        id: item.id, name: item.name, active: item.active, tenant_settings,\r\n      })\r\n      return put(API_ENDPOINT+'/'+item.id, body,token)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","/home/alex/donuts/client/src/api/jsonParser.jsx",[],"/home/alex/donuts/client/src/actions/modal/actionTypes.jsx",[],"/home/alex/donuts/client/src/api/departmentApi.jsx",["939","940","941","942","943"],"import {post,get,del,put,request} from './api'\n\nconst DEPARTMENTS_URL = 'api/departments'\nconst SEND_POINT_URL = 'api/account_operations'\nconst EVENTS_URL = 'api/events'\nconst REGARDS_URL ='api/profile_assets'\n\nexport default class DepartmentApi {\n    \n    static itemName ='department'\n    \n    static loadItems(token) {\n      return  get(DEPARTMENTS_URL, token)\n    }\n\n    static addItem(token, item) {\n      let body = JSON.stringify({\n        name: item.name, \n        head_profile_id: item.head_profile ? item.head_profile.id: null\n      })\n      return post(DEPARTMENTS_URL, body,token)\n    }\n\n    static updateItem(token, item) {\n      let body = JSON.stringify({\n        name: item.name, \n        head_profile_id: item.head_profile ? item.head_profile.id: null\n      })\n      return put(DEPARTMENTS_URL+'/'+item.id, body,token)\n    }\n\n\n  \n\n}\n","/home/alex/donuts/client/src/api/storeApi.jsx",["944"],"import {post,get,del,put,request} from './api'\r\n\r\nconst DONUTS_URL = 'api/donuts'\r\n\r\n\r\nexport default class DashboardApi {\r\n   \r\n  static itemName ='donut'\r\n\r\n    static loadItems(token) {\r\n      return  get(DONUTS_URL, token)\r\n    }\r\n\r\n    static  loadDounts(token) {\r\n      return  get(DONUTS_URL, token)\r\n    }\r\n\r\n    static postItem(token, item) {\r\n       let body = JSON.stringify({...item})\r\n       return post(DONUTS_URL, body,token)\r\n    }\r\n\r\n    static getItem(token, id){\r\n      return  get(DONUTS_URL+'/' + id, token)\r\n    }\r\n\r\n    static updateItem(token, item){\r\n      let body = JSON.stringify({...item})\r\n      return put(DONUTS_URL+'/' + item.id, body,token)\r\n    }\r\n\r\n    static removeItem(token, id) {\r\n      return  del(DONUTS_URL+'/' + id, token)\r\n    }\r\n\r\n}\r\n","/home/alex/donuts/client/src/api/regardApi.jsx",["945","946","947"],"\r\nimport {post,get,del,put,request} from './api'\r\n\r\n\r\nconst ACTIVATE_URL ='/api/regards/activate'\r\nconst PROFILE_ASSETS = '/api/profile_assets'\r\n\r\n\r\nexport default class RegardApi {\r\n\r\n     \r\n    static itemName ='regard'\r\n\r\n    static loadItems(token){\r\n        return get(PROFILE_ASSETS, token)\r\n    }\r\n\r\n    static getItem(token, id){\r\n      return get(PROFILE_ASSETS+'/'+id, token)\r\n    }\r\n\r\n    static updateItem(token, regard) {\r\n        let body = JSON.stringify({\r\n            ...regard\r\n          })\r\n        return  post(ACTIVATE_URL, body,token)\r\n    }\r\n    static addItem(token, regard) {\r\n        let body = JSON.stringify({\r\n            ...regard\r\n          })\r\n        return post(PROFILE_ASSETS, body, token)  \r\n      }\r\n\r\n\r\n}","/home/alex/donuts/client/src/api/schedulersApi.jsx",["948","949"],"import {post,get,del,put,request} from './api'\r\n\r\nconst SCHEDULERS_API = 'api/donuts_schedulers'\r\n\r\n\r\nexport default class ScheduilersApi {\r\n    \r\n    static itemName ='scheduler'\r\n    \r\n    static loadItems(token) {\r\n      return  get(SCHEDULERS_API, token)\r\n    }\r\n\r\n    static addItem(token, item) {\r\n      let body = JSON.stringify({\r\n        ...item\r\n      })\r\n      return post(SCHEDULERS_API, body,token)\r\n    }\r\n\r\n    static updateItem(token, item) {\r\n      let body = JSON.stringify({\r\n        ...item\r\n      })\r\n      return put(SCHEDULERS_API+'/'+item.id, body,token)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","/home/alex/donuts/client/src/modals/modalList.jsx",[],"/home/alex/donuts/client/src/routes/appRoutes.jsx",["950","951"],"\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport List from \"@material-ui/icons/List\";\r\nimport Stars from \"@material-ui/icons/Stars\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport BarChart from \"@material-ui/icons/BarChart\";\r\nimport Input from \"@material-ui/icons/Input\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\n\r\n\r\nimport LoginPage from \"containers/pages/LoginPage\"\r\nimport RegisterPage from \"containers/pages/RegisterPage\"\r\nimport  DashboardPage from \"containers/pages/DashboardPage\"\r\nimport  HomePage from \"containers/pages/HomePage\"\r\nimport  UserPage from \"containers/pages/UserPage\"\r\nimport  RegardsPage from \"containers/pages/RegardsPage\"\r\nimport  SettingsPage from \"containers/pages/SettingsPage\"\r\nimport  StorePage from \"containers/pages/StorePage\"\r\nimport ConfirmEmailPage  from \"containers/pages/ConfirmEmailPage\"\r\nimport NewPasswordPage  from \"containers/pages/NewPasswordPage\"\r\nimport DepartmentsPage  from \"containers/pages/DepartmentsPage\"\r\nimport React from 'react'\r\nimport PeoplePage from \"containers/pages/ProfilesPage\";\r\nimport DonutsPage from \"containers/pages/DonutsPage\";\r\nimport AccountOperationsPage from \"containers/pages/AccountOperationsPage\";\r\nimport StatisticPage from \"containers/pages/StatisticPage\";\r\nimport EventPage from \"containers/pages/EventPage\";\r\nimport QuizPage from \"containers/pages/QuizPage\";\r\nimport RequestsPage from \"containers/pages/RequestsPage\";\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: \"/home\",\r\n        anonymous: true,\r\n        authenticated: false,\r\n        sidebarName: \"Home\",\r\n        navbarName: \"Home\",\r\n        icon: LocationOn,\r\n        hideInMenu: true,\r\n        active: true,\r\n        component: HomePage\r\n    },\r\n  {\r\n    path: \"/dashboard\",\r\n    authenticated: true,\r\n    anonymous: true,\r\n    sidebarName: \"Dashboard\",\r\n    navbarName: \"Dashboard\",\r\n    icon: Dashboard,\r\n    hideInMenu: false,\r\n    active: true,\r\n    component: DashboardPage\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    anonymous: true,\r\n    authenticated: false,\r\n    sidebarName: \"Log In\",\r\n    navbarName: \"Log In\",\r\n    icon: Person,\r\n    active:true,\r\n    component: LoginPage\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    anonymous: true,\r\n      authenticated:false,\r\n    sidebarName: \"Register\",\r\n    navbarName: \"Register\",\r\n    icon: Person,\r\n    active: true,\r\n    component: RegisterPage\r\n  },\r\n  {\r\n      path: \"/confirm_email/:token\",\r\n      anonymous: true,\r\n      authenticated:false,\r\n      active: true,\r\n      hideInMenu: true,\r\n      sidebarName: \"ConfirmEmail\",\r\n      navbarName: \"ConfirmEmail\",\r\n      component: ConfirmEmailPage\r\n  },\r\n  {\r\n      path: \"/recover_password/:token\",\r\n      anonymous: true,\r\n      authenticated:false,\r\n      active: true,\r\n      hideInMenu: true,\r\n      sidebarName: \"RecoverPassword\",\r\n      navbarName: \"RecoverPassword\",\r\n      component: NewPasswordPage\r\n  },\r\n  {\r\n    path: \"/account/:id\",\r\n    anonymous: false,\r\n    authenticated:true,\r\n    active: true,\r\n    hideInMenu: true,\r\n    sidebarName: \"AccountOperationsPage\",\r\n    navbarName: \"AccountOperationsPage\",\r\n    component: AccountOperationsPage\r\n  },\r\n  {\r\n    path: \"/quiz/:id\",\r\n    anonymous: false,\r\n    authenticated:true,\r\n    active: true,\r\n    hideInMenu: true,\r\n    component: QuizPage\r\n  },\r\n  {\r\n    path: \"/event/:id\",\r\n    anonymous: false,\r\n    authenticated:true,\r\n    active: true,\r\n    hideInMenu: true,\r\n    component: EventPage\r\n  },\r\n  {\r\n    path: \"/account\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"Account\",\r\n    navbarName: \"Account\",\r\n    icon: Person,\r\n    active: true,\r\n    component: UserPage\r\n  },\r\n  {\r\n    path: \"/departments\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"Departments\",\r\n    navbarName: \"Departments\",\r\n    icon: List,\r\n    active: true,\r\n    admin: true,\r\n    component: DepartmentsPage\r\n  },\r\n  {\r\n    path: \"/people\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"People\",\r\n    navbarName: \"People\",\r\n    icon: People,\r\n    active: true,\r\n    admin: false,\r\n    component: PeoplePage\r\n  },\r\n\r\n  {\r\n    path: \"/donuts\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"Donuts\",\r\n    navbarName: \"Donuts\",\r\n    icon: Store,\r\n    active: true,\r\n    component: DonutsPage\r\n  },\r\n  {\r\n    path: \"/my\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"My regards\",\r\n    navbarName: \"My regards\",\r\n    icon: Stars,\r\n    active: true,\r\n    component: RegardsPage\r\n  },\r\n  {\r\n    path: \"/requests\",\r\n      anonymous: false,\r\n      authenticated: true,\r\n    sidebarName: \"Requests\",\r\n    navbarName: \"Requests\",\r\n    icon: Input,\r\n    active: true,\r\n    store_admin: true,\r\n    component: RequestsPage\r\n  },\r\n  {\r\n    path: \"/statistic\",\r\n    anonymous: false,\r\n    authenticated: true,\r\n    sidebarName: \"Statistic\",\r\n    navbarName: \"Statistic\",\r\n    admin: true,\r\n    icon: BarChart,\r\n    active: true,\r\n    component: StatisticPage\r\n  },\r\n  {\r\n    path: \"/settings\",\r\n    anonymous: false,\r\n    authenticated: true,\r\n    sidebarName: \"Settings\",\r\n    navbarName: \"Settings\",\r\n    admin: true,\r\n    icon: Settings,\r\n    active: true,\r\n    component: SettingsPage\r\n  },\r\n    {\r\n        redirect: true,\r\n        anonymous: false,\r\n        authenticated: true,\r\n        active:true,\r\n        path: \"/login\", to: \"/dashboard\",\r\n        navbarName: \"Redirect\"\r\n    },\r\n    {\r\n      redirect: true,\r\n      anonymous: false,\r\n      authenticated: true,\r\n      active:true,\r\n      path: \"/home\", to: \"/dashboard\",\r\n      navbarName: \"Redirect\"\r\n  },\r\n\r\n  {\r\n      redirect: true,\r\n      anonymous: true,\r\n      authenticated: false,\r\n      active:true,\r\n      path: \"/\", to: \"/home\",\r\n      navbarName: \"Redirect\"\r\n  },\r\n  {\r\n      redirect: true,\r\n      anonymous: false,\r\n      authenticated: true,\r\n      active:true,\r\n      path: \"/\", to: \"/dashboard\",\r\n      navbarName: \"Redirect\"\r\n  },\r\n\r\n\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","/home/alex/donuts/client/src/assets/jss/layouts/appStyle.jsx",["952"],"import {\n  drawerWidth,\n  drawerCloseWidth,\n  transition,\n  container\n} from \"assets/jss/baseStyles.jsx\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  mainPanelWide :{\n    width: `calc(100% - ${theme.spacing(7)}px)`,\n    [theme.breakpoints.up('xs')]: {\n      width: `calc(100% - ${theme.spacing(1)}px)`\n    },\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.spacing(9)}px)`\n    },\n\n  },\n\n  content: {\n    marginTop: \"30px\",\n    padding: \"30px 10px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","/home/alex/donuts/client/src/containers/HeaderContainer.jsx",["953","954"],"import {connect} from 'react-redux'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport Header from \"components/Header\"\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => {\n            dispatch(loadProfile())\n        },\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile,\n        routes: ownProps.routes\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header)\n\n\nexport default  HeaderContainer\n","/home/alex/donuts/client/src/modals/Modal.jsx",[],"/home/alex/donuts/client/src/components/Notifier.jsx",["955","956"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack';\nimport { removeSnackbar } from 'actions/notifierActions';\nimport { withTranslation,useTranslation } from 'react-i18next';\nimport {  Button } from '@material-ui/core';\n\n\n\nconst ActionButton = (props) => {\n    return (\n        <React.Fragment>\n        {props.notifyText}\n        <Button onClick ={props.onClick}>\n            {props.children}\n        </Button>\n        </React.Fragment>\n    )\n}\n\n\n\nclass Notifier extends Component {\n    displayed = [];\n\n    storeDisplayed = id => {\n        this.displayed = [...this.displayed, id];\n    };\n\n    shouldComponentUpdate({ notifications: newSnacks = [] }) {\n        const { notifications: currentSnacks } = this.props;\n        let notExists = false;\n        for (let i = 0; i < newSnacks.length; i++) {\n            if (notExists) continue;\n            notExists = notExists || !currentSnacks.filter(({ key }) => newSnacks[i].key === key).length;\n        }\n        return notExists;\n    }\n\n   \n\n    componentDidUpdate() {\n        let notifyElement\n        const { notifications = [], t, i18n  } = this.props;\n          notifications.forEach(notification => {\n            // Do nothing if snackbar is already displayed\n            if (this.displayed.includes(notification.key)) return;\n            // Display snackbar using notistack\n            let text=t(notification.message)\n            if (notification.message2!==undefined){\n                text = text  +  t(notification.message2) \n            }\n            if (notification.action){\n                notifyElement = <ActionButton \n                                    notifyText={text} \n                                    onClick={notification.action.onClick}>\n                                    {t(notification.action.caption)}\n                                </ActionButton>\n            }\n            else{\n                notifyElement = text\n            }\n            this.props.enqueueSnackbar(notifyElement, notification.options);\n            // Keep track of snackbars that we've displayed\n            this.storeDisplayed(notification.key);\n            // Dispatch action to remove snackbar from redux store\n            this.props.removeSnackbar(notification.key);\n        });\n    }\n    render() {\n        return null;\n    }\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.notifier.notifications,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({removeSnackbar}, dispatch);\n\n\n\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withTranslation()(withSnackbar(Notifier)));\n","/home/alex/donuts/client/src/containers/SideboardContainer.jsx",["957"],"import {connect} from 'react-redux'\n\nimport {authenticate}  from 'actions/authActions'\nimport Sideboard from \"components/Sideboard\"\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        routes: ownProps.routes,\n        profile: state.profile\n    }\n}\n\nconst SideboardContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sideboard)\n\n\nexport default  SideboardContainer\n","/home/alex/donuts/client/src/assets/jss/baseStyles.jsx",[],"/home/alex/donuts/client/src/actions/modal/modalResults.jsx",[],"/home/alex/donuts/client/src/components/forms/common/text.jsx",["958","959","960"],"import React  from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {Trans} from 'react-i18next';\r\nimport classNames from \"classnames\";\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nexport const renderTextField = ({\r\n  label,\r\n  input,\r\n  light,\r\n  options,\r\n  legend,\r\n  meta: { touched, invalid, error },\r\n  classes={},\r\n  ...custom\r\n}) => (\r\n  <FormControl className={classNames({[custom.className]:true,[classes.formControl]:true})}>\r\n    {legend && <FormLabel component=\"legend\">{legend}</FormLabel>}\r\n    <TextField\r\n      id={label + Math.random().toString()}\r\n      label={label}    \r\n      error={touched && invalid}\r\n      {...input}\r\n      {...custom}    \r\n      disabled = {options!==undefined ? options.disabled: false}\r\n    />\r\n   \r\n    <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>\r\n  </FormControl> \r\n)\r\n\r\n","/home/alex/donuts/client/src/assets/jss/components/formStyle.jsx",["961","962","963","964","965","966","967","968","969"],"import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    secondaryCardHeader,\n    whiteColor,\n    infoColor,\n    warningColor,\n    primaryColor,\n    roseColor,\n    grayColor\n  } from \"assets/jss/baseStyles.jsx\";\n\nconst formStyle = theme => ({\n    container: {\n        display: 'block',\n        margin: \"auto\",\n        height: \"auto\"\n    },\n    gridItem: {\n        margin:0,\n        padding:\"0 15px 5px !important\"\n    },\n    button: {\n        color: primaryColor,\n        display: \"flex\",\n        margin: \"auto\"\n    },\n\n    infoButton: {\n        color: infoColor[0],\n    },\n\n    primaryButton: {\n        color: primaryColor,\n    },\n    warningButton: {\n        color: warningColor[1],\n    },\n    input: {\n        display: 'none',\n    },\n\n    textField: {\n        width: 200,\n        display: 'flex',\n        margin: 'auto'\n    },\n    formControl: {\n        height: 40,\n\n    },\n    downshiftControl: {\n        marginTop: 10,\n        paddingBottom: \"0px !important\",\n    },\n    menu: {\n        width: 200,\n    },\n    smField:{\n        width: 300,  \n    },\n    mdField: {\n        [theme.breakpoints.up('md')]: {\n            width: 400,\n          },\n    },\n    lgField: {\n        [theme.breakpoints.up('xs')]: {\n         width: `calc(100% - ${theme.spacing(2)}px)`,\n         height: \"auto\",\n        },\n    },\n    okButton:{\n        marginLeft: \"auto\",\n        width: \"auto\",\n        display: \"flex\",\n        float:\"right\"\n    } ,\n    \n    cancelButton: {\n        display: \"block\",\n        width: \"auto\",\n        float: \"right\",\n        color: grayColor[1],\n    },\n    image :{\n        display: 'block',\n        maxWidth: \"95%\",\n        maxHeight: 600,\n        margin:'auto',\n        padding:0,\n      [theme.breakpoints.down('xs')]: {\n        width: 200,\n      },\n    \n    },\n    modalImage :{\n      display: 'block',\n      maxWidth: \"95%\",\n      //maxHeight: 400,\n      margin:'auto',\n      padding:0,\n    [theme.breakpoints.up('xs')]: {\n      maxHeight: 250,\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxHeight: 400,\n    },\n    [theme.breakpoints.up('md')]: {\n     // width: 200,\n    },\n    },\n    label: {\n        width:\"auto\",\n        margin: 0\n    }\n});\n\nexport default formStyle;\n","/home/alex/donuts/client/src/modals/purchase/PurchasePreviewModal.jsx",["970","971","972"],"import React, { Component } from 'react'\r\nimport ListActions from \"actions/listActions\"\r\nimport apis  from 'api/apiRoot'\r\n\r\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\r\nimport LayoutModal from 'modals/LayoutModal';\r\nimport {connect} from 'react-redux'\r\nimport GridContainer from 'components/grid/GridContainer';\r\nimport GridItem from 'components/grid/GridItem';\r\nimport userStyle from 'assets/jss/layouts/userStyle';\r\nimport * as actionTypes from 'actions/modal/actionTypes';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UserImage from 'components/UserImage';\r\n\r\nconst loadCallback = () => {\r\n    return {\r\n        success: (dispatch,item) => {\r\n          dispatch({\r\n            type: actionTypes.LOAD_MODAL_OBJECT_SUCCESS,\r\n            body:item\r\n          })\r\n        }\r\n      }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return {\r\n        onLoad: () => {\r\n          let actionsRegards = new ListActions(apis.regards)\r\n          if (props.body.regard !== undefined){\r\n            dispatch(actionsRegards.getItem(props.body.regard.id,loadCallback()))\r\n          }\r\n        },      \r\n        \r\n        onSubmit: (item) => {\r\n            props.onCloseModal();\r\n        }\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = (state) => {\r\n    return{\r\n      profile: state.profile,\r\n      departments: state.departments\r\n    }\r\n}\r\n\r\nexport class PurchasePreviewModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n            const formGenerator = new ReduxFormGenerator({\r\n                reduxForm:{\r\n                    form:\"purchase_preview\",\r\n                    enableReinitialize: true,\r\n                    keepDirtyOnReinitialize: true \r\n                },\r\n                mapStateToProps:state => ({\r\n                    hasInitial: true,\r\n                    initialValues: state.modal.body ,\r\n                    formId: \"purchase_edit\",\r\n                    fields: [\r\n                    { name: \"donut_name\", label: \"Donut\", lg:12, size: \"lg\", disabled: true},\r\n                    { name: \"created_at\", label: \"Buy date\", lg:12, size: \"lg\", disabled: true},\r\n                    { name: \"date_used\", label: \"Activate date\", lg:12, size: \"lg\", disabled: true},\r\n                    ],\r\n                    submitCaption: \"OK\",\r\n                    cancelable: false\r\n                }),\r\n                mapDispatchToProps,\r\n                title: \"Purchase\",        \r\n               \r\n            })\r\n    \r\n            this.generatedForm =  formGenerator.getForm();\r\n    \r\n\r\n    }\r\n\r\n    render() {\r\n        const GeneratedForm =  this.generatedForm\r\n        const {classes, modal}  =this.props\r\n        const modalProps = {...this.props, classes: {}}\r\n        return (\r\n            <LayoutModal title=\"Purchase\">\r\n                    <GridContainer>                      \r\n                        <GridItem xs={12}  sm={12} >\r\n                            <GeneratedForm {...modalProps}/>\r\n                        </GridItem>\r\n                    </GridContainer>\r\n            </LayoutModal>            \r\n            )\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(PurchasePreviewModal))\r\n","/home/alex/donuts/client/src/modals/plugin/PluginModal.jsx",[],"/home/alex/donuts/client/src/modals/event/EventModal.jsx",["973","974","975","976","977","978","979","980"],"import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport * as notifierActions from \"actions/notifierActions\"\nimport { reset, reduxForm } from \"redux-form\";\nimport ProgressContainer from 'containers/ProgressContainer';\n\nconst commentCallback = (form_id) => {\n    return {\n        success: (dispatch,response) => {\n          dispatch(notifierActions.enqueueSnackbar({\n            message: 'Comment saved',\n            options: {\n                variant: 'success',\n            }\n          })      \n          )\n          dispatch(reset(form_id))\n        }\n      }\n    }\n\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        loadEvent: (id) =>{\n          dispatch(loadEventWithComments(id))  \n        },\n        onSubmit: (values) => {\n  \n            dispatch(commentItem({item: props.event,comment: values.text},commentCallback('new_comment_form')))\n            \n            //props.onCloseModal()\n        },\n        onCancel: () => {\n            props.onCloseModal()\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      events: state.events\n    }\n}\n\n\n\nexport class EventModal extends Component {\n    componentWillMount(){\n        this.props.loadEvent(this.props.modal.body.event.id)\n    }\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: true  \n            }),\n            mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n    }\n\n    render() {\n        const {classes, modal,events}  =this.props\n        const GeneratedForm =  this.generatedForm\n        const event = events.selected//.items.find(event => event.id === modal.body.event.id);\n        return (\n            <React.Fragment>                \n            {(event ===undefined || event.id !== modal.body.event.id) &&\n                 <React.Fragment>\n                     <ProgressContainer/>           \n                 </React.Fragment>\n\n            }\n            {event !==undefined && event.id === modal.body.event.id &&\n                <LayoutModal>\n                <GridContainer>\n                        <GridItem xs={12}>\n                            <EventCardContainer post = {event}/>\n                        </GridItem>\n                        <GridItem xs={12}>\n                            <GeneratedForm formId= {\"new_comment_form\"} onCloseModal={this.props.onCloseModal} event ={event}/>\n                        </GridItem>\n                        {event.comments!==null && event.comments.map((post,index) =>(\n                        <GridItem xs={12}  key = {index}>\n                            <CommentContainer  post = {post}/>\n                        </GridItem>\n                        )\n                        )}              \n             \n                \n                </GridContainer>        \n            </LayoutModal>  \n            }\n           </React.Fragment>\n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(EventModal))\n","/home/alex/donuts/client/src/modals/scheduler/SchedulerModal.jsx",[],"/home/alex/donuts/client/src/modals/profile/ProfilePreviewModal.jsx",["981","982","983"],"import React, { Component } from 'react'\r\nimport ListActions from \"actions/listActions\"\r\nimport apis  from 'api/apiRoot'\r\n\r\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\r\nimport LayoutModal from 'modals/LayoutModal';\r\nimport {connect} from 'react-redux'\r\nimport GridContainer from 'components/grid/GridContainer';\r\nimport GridItem from 'components/grid/GridItem';\r\nimport userStyle from 'assets/jss/layouts/userStyle';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UserImage from 'components/UserImage';\r\n\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return {\r\n        onLoad: () => {\r\n          // let actionsDepartments = new ListActions(apis.departments)\r\n           //dispatch(actionsDepartments.loadItems())\r\n        },      \r\n        \r\n        onSubmit: (item) => {\r\n         //   let actions = new ListActions(apis.profiles)\r\n            \r\n          //  if (item.id !==undefined && item.id !==\"\"){\r\n          //      dispatch(actions.updateItem(item))    \r\n          //  }\r\n          //  else{\r\n          //      dispatch(actions.addItem(item))\r\n          //  }\r\n            props.onCloseModal();\r\n        }\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = (state) => {\r\n    return{\r\n      profile: state.profile,\r\n      departments: state.departments\r\n    }\r\n}\r\n\r\nexport class ProfilePreviewModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n            const formGenerator = new ReduxFormGenerator({\r\n                reduxForm:{\r\n                    form:\"profile_preview\",\r\n                    enableReinitialize: true,\r\n                    keepDirtyOnReinitialize: true \r\n                },\r\n                mapStateToProps:state => ({\r\n                    hasInitial: true,\r\n                    initialValues: state.modal.body ,\r\n                    formId: \"profile_edit\",\r\n                    fields: [\r\n                    { name: \"user_name\", label: \"Name\", md:12, size: \"lg\", disabled: true},\r\n                    { name: \"position\", label: \"Position\", md:12, size: \"lg\", disabled: true},\r\n                    ],\r\n                    submitCaption: \"OK\"     ,\r\n                    cancelable: false\r\n                }),\r\n                mapDispatchToProps,\r\n                title: \"Profile\",        \r\n               \r\n            })\r\n    \r\n            this.generatedForm =  formGenerator.getForm();\r\n    \r\n\r\n    }\r\n\r\n    render() {\r\n        const GeneratedForm =  this.generatedForm\r\n        const {classes, modal}  =this.props\r\n        const modalProps = {...this.props, classes: {}}\r\n        return (\r\n            <LayoutModal title=\"Profile\">\r\n                    <GridContainer>\r\n                        <GridItem xs={12}  sm={6} >\r\n                          {modal.body.user_avatar!==undefined && <img className={classes.modalImage} src={modal.body.user_avatar.url} alt=\"not found\"/>}                  \r\n                        </GridItem>\r\n                        <GridItem xs={12}  sm={6} >\r\n                            <GeneratedForm {...modalProps}/>\r\n                        </GridItem>\r\n                    </GridContainer>\r\n            </LayoutModal>            \r\n            )\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(ProfilePreviewModal))\r\n","/home/alex/donuts/client/src/modals/DialogWindow.jsx",[],"/home/alex/donuts/client/src/modals/profile/ProfileModal.jsx",[],"/home/alex/donuts/client/src/containers/pages/RequestsPage.jsx",["984","985","986","987","988","989","990","991","992","993"],"import React, { PropTypes,Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as notifierActions from \"actions/notifierActions\"\r\nimport {loadStore, showItem, updateItem} from \"actions/storeActions\"\r\nimport Store from 'components/store/Store'\r\nimport * as assetActions from \"actions/assetActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport apis  from 'api/apiRoot'\r\nimport * as storeActions from \"actions/storeActions\"\r\nimport ListActions from 'actions/listActions';\r\nimport Requests from 'layouts/Requests';\r\n\r\n\r\n\r\nconst activateCallback = () => {\r\n  return {\r\n      success: (dispatch,response) => {\r\n        dispatch(notifierActions.enqueueSnackbar({\r\n          message: 'Regard activated',\r\n          options: {\r\n              variant: 'success',\r\n          }\r\n        })      \r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      loadItems: () => {\r\n        let actions  = new ListActions(apis.requests)\r\n        dispatch(actions.loadItems())\r\n      },    \r\n      onActivate: (item) => {\r\n        let actions = new ListActions(apis.requests)\r\n        dispatch(actions.updateItem({public_uid:item.public_uid, status: 2},activateCallback()))\r\n      }, \r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        requests: state.requests,     \r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Requests)\r\n","/home/alex/donuts/client/src/containers/pages/QuizPage.jsx",[],"/home/alex/donuts/client/src/modals/department/DepartmentModal.jsx",["994"],"import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport {loadUsers} from \"actions/dashboardActions\"\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onLoad: () => {\n            let listActions = new ListActions(apis.profiles)\n            dispatch(listActions.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n            let actions = new ListActions(apis.departments)\n            \n            if (item.id !==undefined && item.id !==\"\"){\n                dispatch(actions.updateItem(item))    \n            }\n            else{\n                dispatch(actions.addItem(item))\n            }\n            props.onCloseModal();\n        }\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return{\n      dashboard: state.dashboard,\n      profiles: state.profiles\n    }\n}\n\nexport class DepartmentModal extends Component {\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"profile_settings\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: true,\n                initialValues: state.modal.body ,\n                formId: \"department_form\",\n                fields: [\n                    { name: \"name\", size:\"lg\" },\n                    { \n                        name: \"head_profile\",\n                        label: \"department chief\", \n                        size: \"lg\",\n                        source:props.profiles.items}\n                ],\n                submitCaption: \"Save changes\",\n                cancelable: true          \n            }),\n            mapDispatchToProps,\n            title: \"New department\",               \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n\n    }\n\n    render() {\n        const GeneratedForm =  this.generatedForm\n        return (\n            <LayoutModal title=\"Department\">\n                <GeneratedForm  {...this.props}/>\n            </LayoutModal>            \n            )\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DepartmentModal)\n","/home/alex/donuts/client/src/modals/regard/RegardModalView.jsx",[],"/home/alex/donuts/client/src/containers/pages/EventPage.jsx",["995","996","997","998"],"\nimport {connect} from 'react-redux'\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\n//import apis from 'api/apiRoot'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nimport queryString from 'query-string'\n\nimport { EventLayout } from 'layouts/EventLayout';\nimport { stat } from 'fs';\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onLoad: () => {\n            dispatch(loadEventWithComments(props.match.params.id,))    \n            //const values = queryString.parse(props.location.search)\n            //console.log(values.eventid) \n            //dispatch(modalActions.showModal(modals.EVENT, {event:{id: parseInt(props.match.params.id)}}))\n        },\n        showEventModal: (event) =>{\n            dispatch(modalActions.showModal(modals.EVENT, {event: event}))\n        },\n    }\n}\n\n\nconst  mapStateToProps = (state,props) => {\n      return{\n           profile: state.profile,\n           events: state.events,\n           event_id: props.match.params.id\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventLayout)","/home/alex/donuts/client/src/containers/pages/StatisticPage.jsx",["999"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport Statistic from 'layouts/Statistic';\nimport ListActions from 'actions/listActions';\nimport apis  from 'api/apiRoot'\nconst mapDispatchToProps = (dispatch) => {\n    return {\n            onLoad: (args) =>{\n                let listActions = new ListActions(apis.profiles)\n                dispatch(listActions.loadItems(args))\n            }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        profiles: state.profiles,\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistic)\n","/home/alex/donuts/client/src/components/Header.jsx",["1000","1001","1002","1003"],"import React from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport classNames from \"classnames\";\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport headerStyle from \"assets/jss/components/headerStyle\"\nimport AccountMenuContainer from 'containers/menu/AccountMenuContainer'\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport logo from \"assets/img/donut.svg\";\nimport Dropzone from 'react-dropzone';\nimport { withTranslation, Trans } from \"react-i18next\";\n\nclass Header extends React.Component {\n    componentDidMount(){\n       // this.props.loadProfile()\n    }\n    \n    render() {\n        console.log(this.props)\n        const { classes, color,authenticate,profile } = this.props;\n        let auth = authenticate.authenticated;\n        const appBarClasses = classNames({\n            [\" \" + classes[color]]: color\n        });\n        let depName = profile.department !==undefined && profile.department !==null? profile.department.name :\"\"\n        if (auth && profile.loaded){\n            return (\n                <AppBar className={classes.appBar + appBarClasses}>\n                    <Toolbar className={classes.container}>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                    >\n              \n                     </IconButton>\n                        <div className={classes.flex}>\n                            <Typography variant=\"button\"> \n                            {profile.first_name + \" \" +profile.last_name}\n                            </Typography>\n                            <br/>\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom> \n                                {depName}, {profile.position}\n                            </Typography>  \n                        </div>\n                          <AccountMenuContainer location={this.props.location}/>\n                    </Toolbar>\n                </AppBar>\n\n            )}\n        else {\n            return(<React.Fragment/>)\n        }\n\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n    loadProfile: PropTypes.func.isRequired\n};\n\nexport default withStyles(headerStyle) (Header)\n","/home/alex/donuts/client/src/components/Sideboard.jsx",["1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"assets/img/donut.svg\";\nimport IconButton from '@material-ui/core/IconButton';\n\nimport sideboardStyle from \"assets/jss/components/sideboardStyle\"\nimport { withTranslation, Trans } from \"react-i18next\";\nimport MenuLinks from './MenuLinks';//\n\nclass Sideboard extends React.Component {\n    state = {\n        open: this.props.open,\n    };\n    handleDrawerOpen = () => {\n      this.setState({ open: true });\n      this.props.handleDrawerOpen();\n    };\n\n    handleDrawerClose = () => {\n      this.setState({ open: false });\n      this.props.handleDrawerClose();\n    };\n\n    toggle =() => {\n      if (this.state.open){\n        this.handleDrawerClose()\n      }\n      else {\n        this.handleDrawerOpen()\n      }\n    }\n\n    render(){\n      const {classes} = this.props;\n      let auth = this.props.authenticate.authenticated;\n      var brand = (\n        <div className={classes.logo}>\n          <a\n            href=\"#\"\n            className={classes.logoLink}\n            onClick={this.toggle}\n          >\n            <div className={classes.logoImage}>\n              <img src={logo} alt=\"logo\" className={classes.img} />\n            </div>\n             Do Nuts\n          </a>\n        </div>\n      );\n\n      return (\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n              {brand}\n            <div className={classNames(classes.toolbarIcon)}>\n              <IconButton onClick={this.handleDrawerClose} className={classNames(!this.state.open && classes.hidden)}>\n                <ChevronLeftIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton,this.state.open && classes.hidden,)}\n              >\n                <MenuIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <div className={classes.sidebarWrapper}>\n              <MenuLinks {...this.props}/>\n            </div>\n          </Drawer>\n        </Hidden>\n        )\n    }\n}\n\nexport default withStyles(sideboardStyle)(withTranslation(\"translations\")(Sideboard))\n","/home/alex/donuts/client/src/containers/pages/AccountOperationsPage.jsx",["1020","1021","1022","1023","1024"],"import React, { PropTypes,Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Store from 'components/store/Store'\r\nimport { loadAccount } from 'actions/profile/profileActions';\r\nimport ListActions from 'actions/listActions';\r\nimport apis from 'api/apiRoot'\r\nimport AccountOperations from 'layouts/AccountOperations';\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        loadItems: (page) => {\r\n            let listAction = new ListActions(apis.account_log)\r\n            dispatch(listAction.loadItems({id: props.match.params.id, page}))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        account_operations: state.account_operations,\r\n        profile: state.profile,\r\n      }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountOperations)","/home/alex/donuts/client/src/containers/pages/DonutsPage.jsx",["1025","1026","1027","1028","1029","1030","1031","1032","1033","1034"],"import React, { PropTypes,Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {loadStore, showItem, updateItem} from \"actions/storeActions\"\r\nimport Store from 'components/store/Store'\r\nimport * as assetActions from \"actions/assetActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport apis  from 'api/apiRoot'\r\nimport * as storeActions from \"actions/storeActions\"\r\nimport ListActions from 'actions/listActions';\r\nimport Donuts from 'layouts/Donuts';\r\nimport * as notifierActions from \"actions/notifierActions\"\r\n\r\nconst buyCallBack = {\r\n        success: (dispatch,response) => {\r\n        dispatch(notifierActions.enqueueSnackbar({\r\n          message: 'Donut added',\r\n          options: {\r\n              variant: 'success',\r\n          }\r\n        })      \r\n        )       \r\n      }\r\n    }\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      loadItems: () => {\r\n        let actions  = new ListActions(apis.donuts)\r\n        dispatch(actions.loadItems())\r\n      },\r\n      onBuy: (item) => {\r\n        let listAction = new ListActions(apis.regards)\r\n        dispatch(listAction.addItem({donut_id: item.id},buyCallBack))\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        dashboard: state.dashboard,\r\n        profile: state.profile,\r\n        donuts: state.donuts\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Donuts)\r\n","/home/alex/donuts/client/src/containers/pages/ProfilesPage.jsx",["1035","1036","1037","1038","1039","1040"],"import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadProfiles} from \"actions/profile/profileActions\"\nimport Regards from \"layouts/Regards\"\nimport {push} from 'connected-react-router'\n\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\nimport Profiles from 'layouts/Profiles';\nimport ListActions from 'actions/listActions';\nimport apis  from 'api/apiRoot'\nimport { stat } from 'fs';\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadProfiles: () => {\n        let listActions = new ListActions(apis.profiles)\n        dispatch(listActions.loadItems())\n        listActions = new ListActions(apis.departments)\n        dispatch(listActions.loadItems())\n      },\n      onEdit: (profile,disabled) => {\n        dispatch(modalActions.showModal(modals.PROFILE_EDIT, {...profile,disabled:disabled}))\n      },\n     \n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        profiles: state.profiles,\n        profile: state.profile,\n        departments: state.departments\n      }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiles)\n","/home/alex/donuts/client/src/containers/pages/DepartmentsPage.jsx",["1041","1042"],"import React, {Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ListActions from \"actions/listActions\"\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport apis  from 'api/apiRoot'\r\nimport Departments from '../../layouts/Departments';\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      loadItems: () => {\r\n          let actions = new ListActions(apis.departments)\r\n          dispatch(actions.loadItems())\r\n      },\r\n\r\n      onAdd: () => {\r\n        dispatch(modalActions.showModal(modals.EDIT_DEPARTMENT, {}))\r\n      },\r\n\r\n      onEdit: (item) => {\r\n        dispatch(modalActions.showModal(modals.EDIT_DEPARTMENT, item))\r\n      },\r\n\r\n      onDelete:()=> {\r\n\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        profile: state.profile,\r\n        departments: state.departments\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Departments)\r\n","/home/alex/donuts/client/src/containers/pages/NewPasswordPage.jsx",["1043","1044","1045","1046"],"import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport confrimEmailStyle from 'assets/jss/components/confrimEmailStyle'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport {loadByRecoverToken, updatePassword} from 'actions/profile/profileActions';\nimport  { Redirect } from 'react-router-dom'\nimport NewPasswordForm from 'components/forms/NewPasswordForm'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadByRecover: (recover_token) => {\n         dispatch(loadByRecoverToken(recover_token))\n      },\n\n      recover: (recover_token,password) => {\n        dispatch(updatePassword(recover_token,password))\n      },\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        authenticate: state.authenticate,\n        profile: state.profile\n      }\n}\n\n\n\nclass NewPasswordPage  extends  Component {\n    componentDidMount() {\n        this.props.loadByRecover(this.props.match.params.token)\n    }\n\n    click = (values) => {\n        console.log(values)\n        this.props.recover(this.props.match.params.token, values.new_password)\n    }\n    render() {\n\n        const {classes, profile,authenticate} = this.props\n          if (profile.user_not_found || profile.confirmed || authenticate.authenticated)  {\n            return (\n              <Redirect to= '/dashboard'/>\n            )\n          }\n          return (\n             <div className={classes.root}>\n                    <div className={classes.vertical_center}>\n                    <NewPasswordForm onSubmit={this.click}/>\n                    </div>\n            </div>\n            )\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(confrimEmailStyle)(withTranslation()(NewPasswordPage)))\n","/home/alex/donuts/client/src/containers/pages/ConfirmEmailPage.jsx",["1047","1048","1049","1050","1051","1052"],"import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {authenticate} from '../../actions/authActions'\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\nimport Button from '@material-ui/core/Button';\nimport confrimEmailStyle from 'assets/jss/components/confrimEmailStyle'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTranslation, Trans } from \"react-i18next\";\nimport {loadByToken, confirmEmail} from 'actions/profile/profileActions';\nimport  { Redirect } from 'react-router-dom'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      loadByToken: (confirm_token) => {\n         dispatch(loadByToken(confirm_token))\n      },\n\n      confirmEmail: (confirm_token) => {\n        dispatch(confirmEmail(confirm_token))\n      },\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        authenticate: state.authenticate,\n        profile: state.profile\n      }\n}\n\n\n\nclass ConfirmEmailPage  extends  Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.loadByToken(this.props.match.params.token)\n    }\n\n    click = () => {\n        this.props.confirmEmail(this.props.match.params.token)\n    }\n    render() {\n\n        const {classes, profile} = this.props\n          if (profile.user_not_found || profile.confirmed)  {\n            return (\n              <Redirect to= '/dashboard'/>\n            )\n          }\n          return (\n             <div className={classes.root}>\n                    <div className={classes.vertical_center}>\n                      <Button onClick={this.click} className={classes.button} color=\"secondary\" >\n                          <Trans>Confirm</Trans>\n                      </Button>\n                    </div>\n            </div>\n            )\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(confrimEmailStyle)(withTranslation()(ConfirmEmailPage)))\n","/home/alex/donuts/client/src/containers/pages/StorePage.jsx",["1053","1054","1055","1056","1057"],"import React, { PropTypes,Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {loadStore, showItem, updateItem} from \"actions/storeActions\"\r\nimport Store from 'components/store/Store'\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as storeActions from \"actions/storeActions\"\r\nimport * as assetActions from \"actions/assetActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport ListActions from 'actions/listActions';\r\nimport apis from 'api/apiRoot'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      loadStore: () => {\r\n        dispatch(loadStore())\r\n      },\r\n      onAddItem: () => {\r\n          dispatch(modalActions.showModal(modals.NEW_STORE_ITEM, {}))\r\n      },\r\n      onEditItem: (id) => {\r\n          dispatch(showItem(id))\r\n      },\r\n      onDeleteItem: (ids) => {\r\n          var items = ids.map(id=>{\r\n            return {id}\r\n          })\r\n          dispatch(storeActions.removeItem(items))\r\n      },\r\n      onBuyItem: (id) => {\r\n        let listAction = new ListActions(apis.regards)\r\n        dispatch(listAction.addItem({donut_id: id}))\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        dashboard: state.dashboard,\r\n        profile: state.profile,\r\n        store: state.store\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Store)\r\n","/home/alex/donuts/client/src/containers/pages/SettingsPage.jsx",["1058","1059"],"import {connect} from 'react-redux'\r\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nimport Settings  from '../../layouts/Settings';\r\nimport { reset, reduxForm } from \"redux-form\";\r\nimport apis  from 'api/apiRoot'\r\nimport ListActions from \"actions/listActions\"\r\nimport * as notifierActions from \"actions/notifierActions\"\r\nimport * as tenantActions from 'actions/tenantActions'\r\nimport {migrateAvatars,saveLogo,saveTenant} from 'actions/tenantActions'\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n      onShare: (amount, profile_ids,comment,form_id,burn_old,to_self_account) => {\r\n          dispatch(sendPoints(amount, null, profile_ids,comment, true,true,burn_old,to_self_account))\r\n          dispatch(reset(form_id))\r\n      },\r\n      loadUsers: () => {\r\n        dispatch(loadUsers())\r\n      },\r\n\r\n      loadTenant: () => {\r\n        dispatch(tenantActions.loadTenant())\r\n      },\r\n\r\n      onSaveTenant: (tenant) => {\r\n        dispatch(saveTenant(tenant))\r\n    },\r\n\r\n      onSchedulerAdd: () => {\r\n        dispatch(modalActions.showModal(modals.EDIT_SCHEDULER, {}))\r\n      },\r\n\r\n      onSchedulerEdit: (item) => {\r\n        dispatch(modalActions.showModal(modals.EDIT_SCHEDULER, item))\r\n      },\r\n      \r\n      onSchedulerDelete: (item) => {\r\n       // dispatch(modalActions.showModal(modals.EDIT_SCHEDULER, {item}))\r\n      },\r\n      \r\n      loadPlugins: () => {\r\n        let actions = new ListActions(apis.plugins)\r\n        dispatch(actions.loadItems())\r\n      },\r\n\r\n      onPluginEdit: (item) =>{\r\n        var settings_hash = {}\r\n        item.settings.forEach(property=>{\r\n           settings_hash[property.name] = property.value\r\n        })\r\n        dispatch(modalActions.showModal(modals.EDIT_PLUGIN, {...item,...settings_hash}))\r\n      },\r\n      \r\n      loadSchedulers: () => {\r\n        let actions = new ListActions(apis.schedulers)\r\n        dispatch(actions.loadItems())\r\n      },\r\n      migrateAvatars: () => {\r\n        dispatch(migrateAvatars())\r\n      },\r\n      saveLogo: (payLoad) => {\r\n        dispatch(saveLogo(payLoad))\r\n    }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        dashboard: state.dashboard,\r\n        profile: state.profile,\r\n        schedulers: state.schedulers,\r\n        plugins: state.plugins,\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\r\n","/home/alex/donuts/client/src/containers/pages/RegardsPage.jsx",["1060","1061"],"import React, {Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Regards from \"layouts/Regards\"\r\nimport {push} from 'connected-react-router'\r\nimport ListActions from 'actions/listActions';\r\nimport apis from 'api/apiRoot'\r\n\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n      loadRegards: (page) => {\r\n        let listAction = new ListActions(apis.regards)\r\n        dispatch(listAction.loadItems({id: props.match.params.id, page}))\r\n      },\r\n      onPrint: (regard) => {\r\n        dispatch(modalActions.showModal(modals.REGARDS_PRINT, {public_uid: regard.public_uid, title: regard.values[0], name: regard.name}))\r\n      },\r\n      onRedirectToStore: () => {\r\n        dispatch(push('donuts'));\r\n      },\r\n      onRequest: (regard) => {\r\n        \r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state) => {\r\n      return{\r\n        profile: state.profile,\r\n        regards: state.regards\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Regards)\r\n","/home/alex/donuts/client/src/containers/pages/UserPage.jsx",["1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074"],"import React, {Component } from 'react'\nimport {connect} from 'react-redux'\nimport {loadAccount,loadProfile, saveProfile,saveAvatar} from 'actions/profile/profileActions'\nimport  ProgressContainer from \"containers/ProgressContainer\"\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\nimport Progress from \"components/Progress\";\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport { stat } from 'fs';\nimport Dropzone from 'react-dropzone';\nimport { Button } from '@material-ui/core';\nimport Previews from 'components/Previews';\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport User from 'layouts/User';\n\nconst img = {\n    display: 'block',\n    maxwidth: 150,\n    maxHeight: 300,\n    margin:0,\n    padding:0\n  };\n  \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLoad: () => {\n            dispatch(loadAccount())\n            let actionsDepartments = new ListActions(apis.departments)\n            dispatch(actionsDepartments.loadItems())\n        },      \n        \n        onSubmit: (item) => {\n            dispatch(saveProfile(item))\n        },\n        saveAvatar: (payLoad) => {\n            dispatch(saveAvatar(payLoad))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n        dashboard: state.dashboard,\n        account: state.account,\n        profile: state.profile,\n        system: state.system,\n        departments: state.departments\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User)\n","/home/alex/donuts/client/src/containers/pages/DashboardPage.jsx",["1075","1076","1077","1078"],"import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport  { Redirect } from 'react-router-dom'\nimport {loadProfile,loadDistribBalance,loadSelfBalance} from 'actions/profile/profileActions'\nimport {loadEvents,likeEvent} from \"actions/eventActions\";\nimport Dashboard from 'layouts/Dashboard'\nimport {push} from 'connected-react-router'\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n        onRequestUser: () => {\n            dispatch(loadProfile())\n        },\n        getDistribBalance: (profile) => {\n            dispatch(loadDistribBalance(profile.distrib_account.id))\n        },\n        getSelfBalance: (profile) => {\n            dispatch(loadSelfBalance(profile.self_account.id))\n        },\n        loadEvents: (page,filter) => {\n            dispatch(loadEvents(page,filter))\n        },\n        reloadEvents: (filter) => {\n            dispatch(loadEvents(0,filter))\n        },\n        onRedirectToStore: () => {\n            dispatch(push('donuts'));\n          }\n        }\n}\n\n\nconst  mapStateToProps = (state) => {\n  return {\n      authenticate: state.authenticate,\n      profile: state.profile,\n      events: state.events\n  }\n}\n\n\n\nclass DashboardPage  extends  Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n      if(this.props.authenticate.authenticated) {\n        return (\n                <div>\n                    <Dashboard\n                    onRequestUser = {this.props.onRequestUser}\n                    profile={this.props.profile}\n                    getDistribBalance={this.props.getDistribBalance}\n                    getSelfBalance ={this.props.getSelfBalance}\n                    />\n                </div>\n            )\n\n       }\n       else\n           return (\n               <div>\n                   <Redirect to='/'/>\n               </div>\n           )\n     }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage)\n","/home/alex/donuts/client/src/containers/pages/RegisterPage.jsx",["1079","1080"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {register} from 'actions/authActions'\nimport {loadTenantByDomain} from 'actions/profile/profileActions'\nimport * as actionTypes from \"actions/actionTypes\"\nimport {reset} from 'redux-form';\nimport Register from 'layouts/Register';\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n            onRegister: (registerValues) => {\n                dispatch(register(registerValues))\n            },\n            onFindTenant: (domain) => {\n                dispatch(loadTenantByDomain(domain))\n            },\n            onReset: (form_name) => {\n                dispatch({type: actionTypes.loadFailed('CURRENT_TENANT')})\n            },\n            newRegister: () => {\n                dispatch({type: actionTypes.NEW_REGISTER})\n            }\n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n    return {\n        authenticate: state.authenticate,\n        profile: state.profile\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","/home/alex/donuts/client/src/containers/pages/HomePage.jsx",["1081","1082","1083","1084","1085"],"import React, { PropTypes,Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {connect} from 'react-redux'\nimport {demo_authenticate} from '../../actions/authActions'\nimport  { Redirect } from 'react-router-dom'\nimport Home from 'layouts/Home'\nimport {push} from 'connected-react-router'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n          onLoginRedirect: () => {\n              dispatch(push('/login'))\n          },\n          onRegisterRedirect: () => {\n              dispatch(push('/register'))\n          }, \n          onDemo: () => {\n            dispatch(demo_authenticate())         \n          }       \n    }\n}\n\n\nconst  mapStateToProps = (state) => {\n      return{\n          authenticate: state.authenticate\n      }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","/home/alex/donuts/client/src/modals/confirm/ConfirmModalView.jsx",[],"/home/alex/donuts/client/src/modals/store/StoreItemModal.jsx",["1086","1087"],"import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport StoreItemModalView from \"./StoreItemModalView\";\nimport { enqueueSnackbar } from 'actions/notifierActions';\nimport {addItem,updateItem} from 'actions/storeActions'\n\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        enqueueSnackbar: (notification) => {\n          dispatch(enqueueSnackbar(notification))\n        },\n\n        addItem: (item) => {\n          dispatch(addItem(item))\n        },\n\n        updateItem: (item) => {\n          dispatch(updateItem(item))\n        }        \n\n    }\n}\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        modal: state.modal,\n        authenticate: state.authenticate,\n        onClose: ownProps.onCloseModal,\n        dashboard: state.dashboard,\n        profile: state.profile\n    }\n}\n\n\nexport default connect( mapStateToProps,  mapDispatchToProps)(StoreItemModalView)\n","/home/alex/donuts/client/src/modals/share/ShareModal.jsx",["1088","1089"],"import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {loadUsers,sendPoints} from \"actions/dashboardActions\"\nimport ShareModalView from \"./ShareModalView\";\nimport { enqueueSnackbar } from 'actions/notifierActions';\n\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        onShare: (amount, from_profile,to_profile,comment) => {\n            dispatch(sendPoints(amount, from_profile.id, [to_profile.id],comment))\n        },\n        loadUsers: () => {\n\n          dispatch(loadUsers())\n        },\n        enqueueSnackbar: (notification) => {\n          dispatch(enqueueSnackbar(notification))\n        }\n    }\n}\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        modal: state.modal,\n        authenticate: state.authenticate,\n        onClose: ownProps.onCloseModal,\n        dashboard: state.dashboard,\n        profile: state.profile\n    }\n}\n\n\nexport default connect( mapStateToProps,  mapDispatchToProps)(ShareModalView)\n","/home/alex/donuts/client/src/components/UserImage.jsx",["1090","1091"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ImageLoader from 'components/ImageLoader'\r\n\r\n\r\nfunction  UserImage(props){\r\n    const {classes,changeable,saveAvatar,account} = props\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <ImageLoader save = {saveAvatar} changeable loaded_image ={account.user_avatar} objectId = {account.id}/>\r\n            </React.Fragment>\r\n         )\r\n}\r\nUserImage.propTypes = {\r\n    saveAvatar: PropTypes.func.isRequired,\r\n    account: PropTypes.object.isRequired,\r\n    changeable: PropTypes.bool\r\n};\r\n\r\nexport default UserImage","/home/alex/donuts/client/src/assets/jss/layouts/userStyle.jsx",["1092","1093","1094","1095"],"import {\n    drawerWidth,\n    drawerCloseWidth,\n    transition,\n    container\n  } from \"assets/jss/baseStyles.jsx\";\n  \n  const userStyle = theme => ({\n    image :{\n        display: 'block',\n        maxWidth: \"95%\",\n        maxHeight: 600,\n        margin:'auto',\n        padding:0,\n      [theme.breakpoints.down('xs')]: {\n        width: 200,\n      },\n  \n    },\n    modalImage :{\n      display: 'block',\n      maxWidth: \"95%\",\n      //maxHeight: 400,\n      margin:'auto',\n      padding:0,\n    [theme.breakpoints.up('xs')]: {\n      maxHeight: 250,\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxHeight: 400,\n    },\n    [theme.breakpoints.up('md')]: {\n     // width: 200,\n    },\n\n  },\n    caption: {\n      textAlign: 'center',\n    }\n  });\n  \n  export default userStyle;\n  ","/home/alex/donuts/client/src/modals/LayoutModal.jsx",[],"/home/alex/donuts/client/src/components/forms/reduxFormGenerator.jsx",["1096","1097","1098","1099"],"import React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport SimpleFieldForm from 'components/forms/SimpleFieldForm';\r\nimport { connect } from 'react-redux'\r\nimport DynamicForm from 'components/forms/DynamicForm';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Trans } from \"react-i18next\";\r\n\r\nclass LayoutForm extends React.Component {\r\n    componentWillMount() {\r\n        if (this.props.onLoad !==undefined) this.props.onLoad()\r\n    }\r\n\r\n    componentDidMount() {\r\n//        this.props.onLoad()\r\n      }\r\n\r\n\r\n    render (){\r\n        return (\r\n          <SimpleFieldForm  {...this.props}/>\r\n        )    \r\n      }\r\n    }\r\n\r\n\r\nclass ReduxFormGenerator {\r\n\r\n    constructor(params){\r\n        const default_options = {   \r\n            reduxForm: { \r\n                form:\"formid1\",\r\n                enableReinitialize: true,\r\n                keepDirtyOnReinitialize: true,\r\n            },\r\n            mapStateToProps: (state =>{   \r\n            }),\r\n            mapDispatchToProps: ((dispatch, props) =>{\r\n\r\n            }),\r\n            props: {},\r\n            title:\"\"\r\n        }\r\n\r\n        this.options = {\r\n            ...default_options,\r\n            ...params\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    getForm = () =>{\r\n\r\n        let form = reduxForm(\r\n           this.options.reduxForm          \r\n        )(LayoutForm)\r\n\r\n        let rForm = connect(\r\n            this.options.mapStateToProps,\r\n            this.options.mapDispatchToProps\r\n        )(form)\r\n\r\n        return rForm\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ReduxFormGenerator","/home/alex/donuts/client/src/components/grid/GridItem.jsx",[],"/home/alex/donuts/client/src/components/grid/GridContainer.jsx",[],"/home/alex/donuts/client/src/containers/ProgressContainer.jsx",[],"/home/alex/donuts/client/src/containers/CommentContainer.jsx",["1100","1101"],"import {connect} from 'react-redux'\nimport EventCard from 'components/EventCard'\nimport {likeEvent,commentItem} from \"actions/eventActions\";\nimport * as modalActions from \"actions/modal/modalActions\"\nimport * as modals from 'modals/modalList'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onProfileClick: (profile) => {\n            dispatch(modalActions.showModal(modals.PROFILE_PREVIEW, {\n                user_name: profile.user_name,\n                position: profile.position,\n                user_avatar: profile.user_avatar,\n                disabled:true}))\n         },\n        onLikeEvent: (event) => {\n            //dispatch(likeEvent(event))\n        },\n        onShowEventModal: (event) =>{\n            //dispatch(modalActions.showModal(modals.EVENT, {event: event}))\n        },\n        onComment: (event, comment) => {\n           // dispatch(commentItem(event,comment))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        post: ownProps.post,\n        commentable: false,\n    }\n}\n\nconst CommentContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventCard)\n\n\nexport default  CommentContainer\n","/home/alex/donuts/client/src/components/MenuLinks.jsx",["1102"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport sideboardStyle from \"assets/jss/components/sideboardStyle\"\r\n\r\n\r\nclass MenuLinks extends React.Component {\r\n    activeRoute(routeName) {\r\n      return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\r\n    }\r\n\r\n    render() {\r\n        const {classes,routes,color,profile} = this.props;\r\n         return (\r\n            <List className={classes.list}>\r\n              {routes.map((prop, key) => {\r\n                      if (prop.redirect || \r\n                        !prop.authenticated || \r\n                        prop.hideInMenu || \r\n                        prop.sidebarName ===undefined ||\r\n                        (prop.admin && !profile.admin) ||\r\n                        (prop.store_admin && !profile.admin && !profile.store_admin)\r\n                        ) return null;\r\n                      const listItemClasses = classNames({[\" \" + classes[color]]: this.activeRoute(prop.path)});\r\n                      console.log(listItemClasses)\r\n                      const whiteFontClasses = classNames({[\" \" + classes.whiteFont]: this.activeRoute(prop.path)});\r\n                          return (\r\n                              <NavLink\r\n                                to={prop.path}\r\n                                className={classes.item}\r\n                                activeClassName=\"active\"\r\n                                key={key}\r\n                              >\r\n                                <ListItem button className={classes.itemLink + listItemClasses}>\r\n                                  <ListItemIcon className={classes.itemIcon + whiteFontClasses}>\r\n                                    {typeof prop.icon === \"string\" ? (\r\n                                      <Icon>{prop.icon}</Icon>\r\n                                    ) : (\r\n                                      <prop.icon />\r\n                                    )}\r\n                                  </ListItemIcon>\r\n                                  <ListItemText\r\n                                    className={classes.itemText + whiteFontClasses}\r\n                                    disableTypography={true}\r\n                                  >\r\n                                      <Trans>{prop.sidebarName}</Trans>\r\n                                  </ListItemText>\r\n                                </ListItem>\r\n                              </NavLink>\r\n                          )\r\n              })}\r\n            </List>\r\n          )\r\n    }\r\n}\r\n\r\nexport default withStyles(sideboardStyle)(withTranslation(\"translations\")(MenuLinks))\r\n","/home/alex/donuts/client/src/layouts/Departments.jsx",["1103","1104"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport listStyle from \"assets/jss/layouts/listStyle\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass Departments extends Component {\r\n    componentDidMount(){\r\n        this.props.loadItems()    \r\n      }\r\n    \r\n      onAdd() {\r\n          this.props.onAdd();\r\n      }\r\n  \r\n      render() {\r\n                const { classes,departments} = this.props;\r\n                let items =[]\r\n                if (departments !==undefined && departments.items !== undefined){                \r\n                    items = departments.items.map(item=>{\r\n                    return {\r\n                        id: item.id, \r\n                        public_uid: item.public_uid,\r\n                        name: item.name, \r\n                        head_profile: item.head_profile,\r\n                        values: [item.name]}\r\n                    })\r\n                }\r\n    \r\n                let actions = [\r\n                  {\r\n                    id: 'add_new_department', \r\n                    label: 'Add', \r\n                    icon: (<Add className={classes.tableActionButtonIcon}/>),\r\n                    onClick: this.onAdd.bind(this)\r\n                  }\r\n    \r\n                ]\r\n                return (\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={6} md={6}>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>Departments</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {items}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Delete className={classes.tableActionButtonIcon + \" \" + classes.delete}/>),\r\n                              id: 'delete_depratment_action',\r\n                              label: 'Delete',\r\n                              onClick: this.props.onDelete\r\n                            },\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_depratment_action',\r\n                              label: 'Edit',\r\n                              onClick: this.props.onEdit\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                     </GridItem>                     \r\n                  </GridContainer>\r\n                  )\r\n    \r\n    }\r\n}\r\nexport default withStyles(listStyle)(Departments);","/home/alex/donuts/client/src/actions/assetActions.jsx",[],"/home/alex/donuts/client/src/layouts/Requests.jsx",["1105","1106","1107","1108","1109"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n\r\n// @material-ui/icons\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\n\r\n\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\n\r\n\r\nconst getActivatedItems = (items) =>{\r\n  return items.filter(item=>{\r\n          if (item.status===2)  return item\r\n        }\r\n  )\r\n}\r\n\r\nconst notActivatedItems = (items) =>{\r\n  return items.filter(item=>{\r\n          if (item.status===0 || item.status === 1)  return item\r\n        }\r\n  )\r\n}\r\n\r\n\r\nclass Regards extends React.Component {\r\n  componentDidMount(){\r\n    //if (this.props.regards.page == 0)this.props.loadRegards()\r\n      //this.props.regards.page = this.props.regards.page + 1\r\n      this.props.loadItems();\r\n  }\r\n\r\n  activate ()  {\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n            const { classes,requests} = this.props;\r\n            let items = requests.items.map(item=>{\r\n              return {\r\n                id: item.id, \r\n                public_uid: item.public_uid,\r\n                name: item.name, \r\n                status: item.status,\r\n                values: [item.donut_name, item.name]}\r\n            })\r\n            \r\n            return (\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                <Card>\r\n                  <CardHeader color=\"primary\">\r\n                  <CustomTableToolbar actions={[]}>\r\n                    <h4 className={classes.cardTitleWhite}><Trans>Incoming requests</Trans></h4>\r\n                  </CustomTableToolbar>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <CustomTable\r\n                    items = {notActivatedItems(items)}\r\n                    actions =  {[\r\n                      {\r\n                        icon: (<CheckCircle className={classes.tableActionButtonIcon + \" \" + classes.activate}/>),\r\n                        id: 'Activate_action',\r\n                        label: 'Activate',\r\n                        onClick: this.props.onActivate\r\n                      },                      \r\n                    ]}\r\n                    checkable = {false}\r\n                  />\r\n                  </CardBody>\r\n                  </Card>\r\n                 </GridItem>\r\n                 <GridItem xs={12} sm={6} md={6}>\r\n                 <Card>\r\n                  <CardHeader color=\"secondary\">\r\n                  <CustomTableToolbar>\r\n                    <h4 className={classes.cardTitleWhite}><Trans>Activated requests</Trans></h4>\r\n                  </CustomTableToolbar>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <CustomTable\r\n                    items = {getActivatedItems(items)}\r\n                    actions={[]}\r\n                    checkable = {false}\r\n                  />\r\n                      </CardBody>\r\n                  </Card>\r\n                 </GridItem>\r\n              </GridContainer>\r\n              )\r\n\r\n  }\r\n}\r\n\r\nexport default withStyles(listStyle)(Regards);\r\n","/home/alex/donuts/client/src/layouts/QuizLayout.jsx",["1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127"],"import React, {Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {loadAccount,loadProfile, saveProfile,saveAvatar} from 'actions/profile/profileActions'\r\nimport  ProgressContainer from \"containers/ProgressContainer\"\r\nimport ListActions from \"actions/listActions\"\r\nimport apis  from 'api/apiRoot'\r\nimport Progress from \"components/Progress\";\r\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\r\nimport { stat } from 'fs';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Button } from '@material-ui/core';\r\nimport Previews from 'components/Previews';\r\nimport GridContainer from 'components/grid/GridContainer';\r\nimport GridItem from 'components/grid/GridItem';\r\nimport userStyle from 'assets/jss/layouts/userStyle';\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UserImage from 'components/UserImage';\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\n   \r\nconst mockData =[{id: 1, value: \"1\", text: \"value1\"},{id:2,value: \"2\", text: \"value2\"},{id:3,value: \"3\", text: \"value3\"},{id:4,value: \"4\", text: \"value4\", disabled: true}]\r\nconst mockData2 =[{id: 5, value: \"value21\"},{id: 6, value: \"value22\"},{id: 7, value: \"value23\"},{id: 8, value: \"value24\", disabled: false}]\r\n\r\nconst mockQuiz =   {\r\n    name: \"Test quiz\",\r\n    author: \"mr Moonlight\",\r\n    created_at: \"2020-01-01\",\r\n    radio: true,\r\n    id:1,\r\n    questions:[{description: \"Por que?\", answers: mockData}]\r\n}\r\n\r\n\r\nclass QuizLayout  extends  Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const formGenerator = new ReduxFormGenerator({\r\n            reduxForm:{\r\n                form:\"quiz_form\",\r\n                enableReinitialize: true,\r\n                keepDirtyOnReinitialize: true \r\n            },\r\n            mapStateToProps:state => ({\r\n                hasInitial: false,\r\n                formId: \"quiz_form\",\r\n                fields: [\r\n                { \r\n                    name: \"question\", \r\n                    size: \"lg\",\r\n                    radio: true,\r\n                    source: mockData, \r\n                    label: \"1. Что делать?\",\r\n                    id: 1\r\n                },\r\n                { \r\n                    name: \"question 1 text\",  size: \"lg\",\r\n                    legend:  \"2. Por que?\",\r\n                    hideLabel: true,\r\n                    id: 2\r\n                },\r\n                { \r\n                    name: \"question text 2\",  size: \"lg\",\r\n                    legend:  \"3. Donde?\",multiline:true, rows: \"5\",\r\n                    hideLabel: true,\r\n                    id: 22\r\n                },\r\n                { \r\n                    name: \"question 2\", label: \"4. Кому на Руси жить хорошо?\", size: \"lg\",\r\n                    radio: true,\r\n                    source: mockData, \r\n                    id: 2\r\n                }],\r\n\r\n\r\n                submitCaption: \"Save changes\"     \r\n            }),\r\n            mapDispatchToProps: dispatch => ({\r\n                onLoad: this.props.onLoad,\r\n                onSubmit: this.props.onSubmit\r\n            \r\n            })             \r\n           \r\n        })\r\n\r\n        this.state ={\r\n            newLoaded: false,\r\n            preview: null\r\n        }\r\n\r\n        this.generatedForm =  formGenerator.getForm();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        const {classes,quiz} = this.props\r\n        const GeneratedForm =  this.generatedForm\r\n        return (\r\n            <React.Fragment>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>{mockQuiz.name}</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                            <GeneratedForm />\r\n                      </CardBody>  \r\n                    </Card>                      \r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(userStyle)(withTranslation()(QuizLayout))\r\n","/home/alex/donuts/client/src/actions/eventActions.jsx",["1128","1129","1130"],"import * as actionTypes from \"./actionTypes\"\nimport  * as commonActions from \"actions/commonActions\"\nimport dashboardApi from \"api/dashboardApi\"\nimport * as  profileActions from  \"actions/profile/profileActions\"\n\n\n\n\nexport function loadEvents(page,filter) {\n    return function (dispatch) {\n        const options = {\n          useToken: true,\n          action: 'load',\n          name: 'events', \n          apiFunction:   dashboardApi.loadEvents, \n          args:[page,filter]\n        }\n        return commonActions.callApi(\n            dispatch,options).then(json =>{\n                let  events   = json.events\n                if (events === undefined) {\n                  events = []\n                }\n                console.log(events)\n                if (page ==0 || page == 1) {\n                  dispatch(loadEventsSuccess(events,page,\n                      json.headers.get('per-page'),\n                      json.headers.get('total'),\n                      json.headers.get('request_date')\n                  ))\n                }\n                else {\n                  dispatch(addEventsSuccess(events,page,\n                      json.headers.get('per-page'),\n                      json.headers.get('total'),\n                      json.headers.get('request_date')\n                  ))\n                }\n        })\n    }\n}\n\nexport function loadEventWithComments(id,callback){\n  var loadFunction =  function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'load',\n      name:  \"EVENT\", \n      apiFunction:  dashboardApi.loadEventWithComment, \n      args:[id]\n    }\n    \n    return commonActions.callApi(\n      dispatch,options).then(json => {\n        commonActions.apiResult(\n          dispatch,\n          actionTypes.updateSuccess(\"EVENT\"),\n          {item: json[\"event\"]}\n        )\n        if (callback !==undefined && callback.success !==undefined) {\n          callback.success(dispatch)\n        }\n      })\n  }\n  return loadFunction.bind(this)\n}\n\nexport function commentItem(params,callback){\n    var commentFunction =  function (dispatch) {\n      const options = {\n        useToken: true,\n        action: 'comment',\n        name:  \"EVENT\", \n        apiFunction:  dashboardApi.commentItem, \n        args:[params.item,params.comment],\n        show_progress: false\n      }\n      \n      return commonActions.callApi(\n        dispatch,options).then(json => {\n          commonActions.apiResult(\n            dispatch,\n            actionTypes.updateSuccess(\"EVENT\"),\n            {item: json[\"event\"]}\n          )\n          if (callback !==undefined && callback.success !==undefined) {\n            callback.success(dispatch)\n          }\n        })\n    }\n    return commentFunction.bind(this)\n}\n\nexport function likeEvent(event){\n  return function (dispatch) {\n    const options = {\n      useToken: true,\n      action: 'update',\n      name: 'event', \n      apiFunction:   dashboardApi.likeEvent, \n      args:[event],\n      show_progress: false\n    }\n    return commonActions.callApi(\n        dispatch,options).then(json =>{\n          commonActions.apiResult(dispatch,actionTypes.updateSuccess(\"EVENT\"),{item: json.event})\n    })\n}\n}\n\n\nfunction loadEventsSuccess(events,page,per_page,total, request_date){\n    return{\n        type: actionTypes.LOAD_EVENTS_SUCCESS,\n        items: events,\n        page: page,\n        per_page,\n        total,\n        request_date\n    }\n}\n\nfunction addEventsSuccess(events,page,per_page,total, request_date){\n    return{\n        type: actionTypes.ADD_EVENTS_SUCCESS,\n        items: events,\n        page: page,\n        per_page,\n        total,\n        request_date\n    }\n}\n","/home/alex/donuts/client/src/layouts/EventLayout.jsx",["1131","1132","1133","1134","1135","1136","1137"],"\nimport React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport NewCommentContainer from 'containers/NewCommentContainer';\n\n\nexport class EventLayout extends Component {\n\n    constructor(props) {\n        super(props);     \n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: true  \n            }),\n           // mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n          \n    }\n    componentDidMount(){\n        this.props.onLoad();\n    }\n\n    render() {\n        const {events}  =this.props\n        return (\n            <React.Fragment>\n                    {events.selected !==undefined &&\n                    <GridContainer >\n                        <GridItem xs = {12} >\n                            <EventCardContainer post = {events.selected} notModal={true}/>\n                        </GridItem>\n         \n                        {events.selected.comments!==null && events.selected.comments.sort((a,b)=>{\n                            return a.id-b.id\n                        }).map((post,index) =>(\n                        <GridItem xs={12}  key = {index}>\n                            <CommentContainer  post = {post}/>\n                        </GridItem>\n                        )\n                        )}               \n                        <GridItem xs={12}>\n                          {\n                              <NewCommentContainer event={events.selected}/>                              \n                          }\n                        </GridItem>\n                    </GridContainer>\n                    }        \n            </React.Fragment>  \n           \n            )\n  }\n}\nexport default withStyles(userStyle)(EventLayout)\n","/home/alex/donuts/client/src/layouts/Settings.jsx",["1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\nimport DynamicForm from 'components/forms/DynamicForm';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport StorePage from \"containers/pages/StorePage\";\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport { useTranslation } from 'react-i18next';\r\n//import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport settingsStyles from \"assets/jss/layouts/settingsStyles.jsx\";\r\nimport { Button } from '@material-ui/core';\r\nimport Dropzone from 'react-dropzone';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {TabPanel,a11yProps} from 'components/tabs/TabPanel'\r\nimport StandartList from 'components/list/StandartList';\r\nimport TenantSettings from 'layouts/TenantSettings';\r\n\r\nconst share_all = 'share_all'\r\nconst activate_code='activate_code'\r\n\r\n\r\n\r\nfunction Settings(props) {\r\n  const {classes, profile} = props\r\n  const [value,setValue] = useState(0)\r\n  const { t, i18n } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    props.loadUsers();\r\n //   props.loadSchedulers();\r\n  },[])\r\n\r\n  const click = (values) => {\r\n    let profile_ids = props.dashboard.profiles.map(profile => profile.id);\r\n    props.onShare(values.points, profile_ids, values.message,share_all,values.burn_old, values.to_self_account);\r\n  };\r\n\r\n  const activate = (values) => {\r\n    props.onActivate(values.code, activate_code);\r\n  }\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n    return(\r\n       <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <Card>\r\n          <CardHeader plain color=\"primary\">\r\n           <Tabs \r\n           value={value} \r\n           onChange={handleChange} \r\n           aria-label=\"settings tabs\"\r\n           >\r\n            <Tab label={t(\"Store\")} {...a11yProps(0)} />\r\n            <Tab label={t(\"Schedule\")} {...a11yProps(1)} />\r\n            <Tab label={t(\"Share donuts\")} {...a11yProps(2)} />\r\n            <Tab label={t(\"Team settings\")} {...a11yProps(3)} />\r\n            <Tab label={t(\"Plugins\")} {...a11yProps(4)} />\r\n            </Tabs>\r\n          </CardHeader>\r\n          <CardBody>\r\n           <TabPanel value={value} index={0}>\r\n              <StorePage />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <StandartList \r\n            list={props.schedulers} \r\n            loadItems={props.loadSchedulers}\r\n            addItem = {props.onSchedulerAdd}\r\n            editItem = {props.onSchedulerEdit}\r\n            deleteItem = {props.onSchedulerDelete}\r\n            getValues = {(item)=>{return [item.comment]}}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n              <DynamicForm \r\n                formId={share_all} \r\n                fields={[\r\n                  { name: \"points\", xs:12,sm:12,md:12,lg:6 },\r\n                  { name: \"message\",xs:12,sm:12,md:12,lg:6,size:\"lg\", multiline:true, rows: \"5\",column:2 },\r\n                  { name: \"burn_old\",label:\"Burn old points\",xs:12,size:\"lg\", checkbox: true },\r\n                  { name: \"to_self_account\",label:\"To user account\",xs:12,size:\"lg\", checkbox: true },\r\n                ]} \r\n                columns= {[\r\n                  {id:1, xs:6},\r\n                  {id:2, xs:6}\r\n                ]}\r\n                submitCaption={\"Send to all\"}             \r\n                onSubmit={click.bind(this)} \r\n              />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={3}>\r\n             <TenantSettings  loadTenant={props.loadTenant} tenant={profile.tenant} saveLogo={props.saveLogo} saveTenant={props.onSaveTenant}/>\r\n           </TabPanel>\r\n           <TabPanel value={value} index={4}>\r\n            <StandartList \r\n            list={props.plugins} \r\n            editItem = {props.onPluginEdit}\r\n            loadItems={props.loadPlugins}\r\n            />\r\n          </TabPanel>\r\n          </CardBody>\r\n        </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    )    \r\n}\r\n\r\n\r\nexport default withStyles(settingsStyles)(Settings)","/home/alex/donuts/client/src/modals/share/ShareModalView.jsx",["1149"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport  modalStyle from 'assets/jss/modals/modalStyle'\nimport { withTranslation, Trans } from \"react-i18next\";\n\nimport ShareForm from './ShareForm'\n\n\n\n\nclass ShareModalView extends React.Component {\n\n  componentDidMount() {\n      this.props.loadUsers();\n  }\n\n\n\n  submit = values => {\n      console.log(values)\n      this.props.onShare(values.point_amount, this.props.profile, values.user,values.comment)\n      this.props.onClose()\n  }\n\n  render() {\n    const { profile, dashboard} = this.props;\n    return (\n        <React.Fragment>\n\n          <DialogTitle id=\"modal_dialog\"><Trans>Share dialog</Trans></DialogTitle>\n             <ShareForm\n              onSubmit= {this.submit}\n              label='Points'\n              measure =''\n              min ={0}\n              max ={profile.distrib_balance}\n              profiles = {dashboard.profiles}\n              userChanged = {this.userChanged}\n              onClose = {this.props.onClose}\n              currentUserId = {profile.id}\n            />\n\n\n        </React.Fragment>\n    )\n}\n}\nShareModalView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onShare: PropTypes.func.isRequired,\n    loadUsers: PropTypes.func.isRequired\n};\n\nexport default  withStyles(modalStyle)(withMobileDialog()(ShareModalView));\n","/home/alex/donuts/client/src/modals/store/StoreItemModalView.jsx",["1150"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport  modalStyle from 'assets/jss/modals/modalStyle'\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport StoreItemForm from \"./StoreItemForm\"\r\n\r\n\r\n\r\n\r\nclass StoreItemModalView extends React.Component {\r\n\r\n  constructor(props) {\r\n     super(props);\r\n      this.submit = this.submit.bind(this)\r\n      // this.state = {donut_name: 'New donut',donut_expiration: '2030-01-01', donut_price: 1}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {modal} = this.props\r\n    console.log(this.props)\r\n    if (modal.body !==undefined && modal.modalName!==\"NEW_STORE_ITEM\"){\r\n      var item = modal.body\r\n      this.setState({donut_name: item.name, donut_price: item.price,donut_expiration: item.expiration_date, id: item.id, active: item.active});\r\n    }\r\n    else {\r\n      this.setState({donut_name: 'New donut',donut_expiration: '2030-01-01', donut_price: 1})\r\n    }\r\n  }\r\n\r\n\r\n\r\n  submit = values => {\r\n      if (this.state.id ===undefined) {\r\n        this.props.addItem({name: values.donut_name, price: values.donut_price, active: values.active})\r\n      }\r\n      else{\r\n        this.props.updateItem({\r\n          name: values.donut_name,\r\n          price: values.donut_price,\r\n          expiration_date: values.donut_expiration,\r\n          active: values.active,\r\n          id: this.state.id\r\n        })\r\n      }\r\n      this.props.onClose()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <DialogTitle id=\"modal_dialog\"><Trans>Store item</Trans></DialogTitle>\r\n          <StoreItemForm\r\n            onSubmit= {this.submit}\r\n            onClose = {this.props.onClose}\r\n            initialValues = {this.state}\r\n          />\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\nStoreItemModalView.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  withStyles(modalStyle)(withMobileDialog()(StoreItemModalView));\r\n","/home/alex/donuts/client/src/assets/jss/modals/modalStyle.jsx",[],"/home/alex/donuts/client/src/actions/dashboardActions.jsx",[],"/home/alex/donuts/client/src/layouts/Statistic.jsx",["1151","1152","1153"],"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Leaderboard from 'components/charts/Leaderboard';\nimport ProgressContainer from 'containers/ProgressContainer';\nimport { Button, Typography } from '@material-ui/core';\n\n\n\nexport default class Statistic extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            show_score: true,\n            show_balance: false,\n            show_sent: false,\n            caption: \"Всего получено\"\n        }\n    }\n    componentDidMount(){\n        this.props.onLoad({show_score: true})\n    }\n\n    showScore = (event) => {\n       this.setState({\n        show_score: true,\n        show_balance: false,\n        show_sent: false,\n        caption: \"Всего получено\"\n        },  () =>{this.props.onLoad(this.state)})\n    };\n    \n    showBalance = (event) => {\n        this.setState({\n            show_score: false,\n            show_balance: true,\n            show_sent: false,\n            caption: \"Сейчас могут потратить\"\n            },  () =>{this.props.onLoad(this.state)})\n    };\n\n    showSent = (event) => {\n        this.setState({\n            show_score: false,\n            show_balance: false,\n            show_sent: true,\n            caption: \"Всего подарено\"\n            },   () =>{this.props.onLoad(this.state)})\n    }; \n\n    render() {\n       // let items =new Array(100)\n       // for (var i = 0;i<100;i++){\n        //    items[i] = {name: 'Peter'+i, score_total: Math.random()*100}\n       // }\n       // console.log(items)\n        let items = this.props.profiles.items\n        return (\n            <div>      \n                <Button onClick={this.showScore}>Всего получено</Button>\n                <Button onClick={this.showBalance}>Сейчас могут потратить</Button>\n                <Button onClick={this.showSent}>Всего подарено</Button>\n                {items.length >0 && \n                    <Leaderboard items = {items} height={items.length*30+100} caption = {this.state.caption}/>\n                }\n                {items.length == 0 && <ProgressContainer/>}\n            </div>\n        )\n    }\n}\n","/home/alex/donuts/client/src/assets/jss/components/sideboardStyle.jsx",["1154","1155","1156"],"import {\n  drawerWidth,\n  drawerCloseWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  defaultBoxShadow,\n  grayColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/baseStyles.jsx\";\n\nconst sideboardStyle = theme => ({\n    drawerPaper: {\n      border: \"none\",\n      position: \"fixed\",\n      top: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      zIndex: \"1\",\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(8),\n      },\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    hidden: {\n      display: 'none',\n    },\n    toolbar: {\n      paddingRight: drawerCloseWidth, // keep right padding when drawer closed\n    },\n    logo: {\n      position: \"relative\",\n      padding: \"15px 15px 5px 10px\",\n      zIndex: \"4\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        bottom: \"0\",\n  \n        height: \"1px\",\n        right: \"15px\",\n        width: \"calc(100% - 30px)\",\n        backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n      }\n    },\n    logoLink: {\n      ...defaultFont,\n      textTransform: \"uppercase\",\n      padding: \"5px 0\",\n      display: \"block\",\n      fontSize: \"18px\",\n      textAlign: \"left\",\n      fontWeight: \"400\",\n      lineHeight: \"30px\",\n      textDecoration: \"none\",\n      backgroundColor: \"transparent\",\n      \"&,&:hover\": {\n        color: primaryColor\n      }\n    },\n    logoImage: {\n      width: \"30px\",\n      display: \"inline-block\",\n      maxHeight: \"30px\",\n      marginLeft: \"10px\",\n      marginRight: \"15px\"\n    },\n    img: {\n      width: \"35px\",\n      top: \"17px\",\n      position: \"absolute\",\n      verticalAlign: \"middle\",\n      border: \"0\"\n    },\n    list: {\n      marginTop: \"20px\",\n      paddingLeft: \"0\",\n      paddingTop: \"0\",\n      paddingBottom: \"0\",\n      marginBottom: \"0\",\n      listStyle: \"none\",\n      position: \"unset\"\n    },\n    item: {\n      position: \"relative\",\n      display: \"block\",\n      //height:\"40px\",\n      textDecoration: \"none\",\n      \"&:hover,&:focus,&:visited,&\": {\n        color: \"black\"\n      }\n    },\n    itemLink: {\n      width: \"210px\",\n      height:\"40px\",\n      transition: \"all 300ms linear\",\n      margin: \"10px 10px 0\",\n      borderRadius: \"3px\",\n      position: \"relative\",\n      display: \"block\",\n      padding: \"5px 10px\",\n      //-backgroundColor: \"transparent\",\n      ...defaultFont\n    },\n    itemIcon: {\n      width: \"24px\",\n      marginLeft: \"10px\",\n      height: \"30px\",\n      fontSize: \"24px\",\n      paddingTop:\"3px\",\n      lineHeight: \"30px\",\n      float: \"left\",\n      marginRight: \"18px\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      color: \"rgba(0, 0, 0, 0.8)\"\n    },\n    itemText: {\n      ...defaultFont,\n      margin: \"0\",\n      lineHeight: \"30px\",\n      fontSize: \"14px\",\n    },\n    purple: {\n      backgroundColor: primaryColor,\n      ...primaryBoxShadow,\n      \"&:hover\": {\n        backgroundColor: primaryColor,\n        ...primaryBoxShadow\n      }\n    },\n    gray: {\n      backgroundColor: grayColor,\n      ...defaultBoxShadow,\n      paddingTop:\"5px\",\n      \"&:hover\": {\n        backgroundColor: grayColor,\n        ...defaultBoxShadow,\n        paddingTop: \"5px\"\n      }\n    },\n    blue: {\n      backgroundColor: infoColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\",\n      \"&:hover\": {\n        backgroundColor: infoColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\"\n      }\n    },\n    green: {\n      backgroundColor: successColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\",\n      \"&:hover\": {\n        backgroundColor: successColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\"\n      }\n    },\n    orange: {\n      backgroundColor: warningColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\",\n      \"&:hover\": {\n        backgroundColor: warningColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\"\n      }\n    },\n    red: {\n      backgroundColor: dangerColor,\n      boxShadow:\n        \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\",\n      \"&:hover\": {\n        backgroundColor: dangerColor,\n        boxShadow:\n          \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\"\n      }\n    },\n    sidebarWrapper: {\n      position: \"relative\",\n      height: \"calc(100vh - 75px)\",\n      overflow: \"auto\",\n      width: drawerWidth,\n      zIndex: \"4\",\n      overflowScrolling: \"touch\"\n    },\n})\nexport default sideboardStyle;\n","/home/alex/donuts/client/src/layouts/AccountOperations.jsx",["1157","1158","1159","1160"],"import React, { Component, useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle\";\r\n\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport OperationField from 'components/table/fields/OperationField';\r\n\r\n\r\nclass AccountOperations extends Component {\r\n    componentDidMount(){\r\n       this.props.loadItems(1)\r\n      }\r\n      loadMore = () => {\r\n        this.props.loadItems(this.props.account_operations.page+1)\r\n      }\r\n  \r\n      render() {\r\n                const { classes,account_operations} = this.props;\r\n                let items =[]\r\n                if (account_operations !==undefined && account_operations.items !== undefined){                \r\n                    items = account_operations.items.map(item=>{\r\n                    return {\r\n                        id: item.id, \r\n                        sum: item.direction*item.amount,\r\n                        operation: item,\r\n                        comment: item.comment, \r\n                        sender_name: item.sender_name,\r\n                        created_at:  item.created_at!==null ?item.created_at:\"-\",\r\n                           values: [\r\n                           // item.created_at!==null ?item.created_at:\"-\",\r\n                           ]}\r\n                    })\r\n                    items = items\r\n                }\r\n    \r\n                let actions = [\r\n                \r\n    \r\n                ]\r\n                return (\r\n                  <React.Fragment>\r\n                  <GridContainer>\r\n                    <GridItem xs={12} >\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>History</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {items}\r\n                        actions =  {[\r\n                           \r\n                          ]}\r\n                        checkable = {false}\r\n                      >\r\n                          <OperationField receiver sender/>\r\n                      </CustomTable>\r\n                      </CardBody>\r\n                      </Card>\r\n                     </GridItem>                     \r\n                  </GridContainer>\r\n                    <DialogActions>\r\n                    {(account_operations.page+1)*account_operations.per_page<account_operations.total&& <Button  className = {classes.button} onClick={this.loadMore} color=\"primary\" >\r\n                        <Trans>More</Trans>\r\n                    </Button>}\r\n                    </DialogActions>\r\n                    </React.Fragment>\r\n                  )\r\n    \r\n    }\r\n}\r\nexport default withStyles(listStyle)(AccountOperations);","/home/alex/donuts/client/src/layouts/Donuts.jsx",["1161","1162","1163","1164"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Shop from \"@material-ui/icons/Shop\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\r\n\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass Donuts extends Component {\r\n    componentDidMount(){\r\n        this.props.loadItems()    \r\n      }\r\n    \r\n  \r\n  \r\n      render() {\r\n                const { classes,donuts} = this.props;\r\n                let items =[]\r\n                if (donuts !==undefined && donuts.items !== undefined){                \r\n                    items = donuts.items.map(item=>{\r\n                    return {\r\n                        id: item.id, \r\n                        name: item.name,                         \r\n                        values: [item.name,item.price]}\r\n                    })\r\n                }\r\n    \r\n                let actions = [\r\n     \r\n                ]\r\n                return (\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={6} md={6}>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>Donuts</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {items}\r\n                        actions =  {[\r\n                             {\r\n                              icon: (<Shop className={classes.tableActionButtonIcon + \" \" + classes.buy}/>),\r\n                              id: 'buy_donut',\r\n                              label: 'Buy',\r\n                              onClick: this.props.onBuy\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                     </GridItem>                     \r\n                  </GridContainer>\r\n                  )\r\n    \r\n    }\r\n}\r\nexport default withStyles(listStyle)(Donuts);","/home/alex/donuts/client/src/layouts/Profiles.jsx",["1165","1166","1167","1168","1169","1170","1171","1172","1173"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/icons\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\n\r\nclass People extends React.Component {\r\n  componentDidMount(){\r\n      this.props.loadProfiles()\r\n  }\r\n\r\n  open(profile) {\r\n    let disabled = !this.props.profile.admin\r\n    this.props.onEdit(profile,disabled)\r\n  }\r\n\r\n\r\n  getProfiles(items, department){\r\n        return items.filter(item=>item!==null && \r\n          (\r\n            (item.department===null && department===null)\r\n              || \r\n            (item.department!==null && department!==null && item.department.id===department.id)\r\n          )\r\n          ).map(profile =>{\r\n          return {\r\n            id: profile.id, \r\n            ...profile,\r\n            values: [profile.name],\r\n            avatar: profile.user_avatar\r\n          }\r\n        })\r\n  }\r\n\r\n  getDepartmenrsSorted(departments){\r\n\r\n    return departments.sort((a,b) =>{\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n   \r\n      return 0;\r\n    })\r\n  }\r\n \r\n\r\n  render() {\r\n            const { classes,profiles,departments} = this.props;\r\n            let actions = [\r\n             \r\n\r\n            ]\r\n\r\n            const withoutDep =  this.getProfiles(profiles.items,null)\r\n            \r\n            return (\r\n              <React.Fragment>\r\n                 {withoutDep.length>0 &&<GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                      <CardHeader color=\"secondary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>Without depratment</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {withoutDep}\r\n                        rowClick={this.open.bind(this)}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_user',\r\n                              label: 'Edit',\r\n                              onClick: this.open.bind(this)\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                    </GridItem>                \r\n                  </GridContainer>}\r\n                {this.getDepartmenrsSorted(departments.items).map(department =>\r\n                  <GridContainer key={department!==null ? department.id: \"undefined_department\"}>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                      <CardHeader color=\"primary\">\r\n                      <CustomTableToolbar actions={actions}>\r\n                        <h4 className={classes.cardTitleWhite}><Trans>{department!== null?department.name: \"Without depratment\"}</Trans></h4>\r\n                      </CustomTableToolbar>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                      <CustomTable\r\n                        items = {this.getProfiles(profiles.items,department)}\r\n                        rowClick={this.open.bind(this)}\r\n                        actions =  {[\r\n                            {\r\n                              icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                              id: 'edit_user',\r\n                              label: 'Edit',\r\n                              onClick:  this.open.bind(this)\r\n                            },\r\n                          ]}\r\n                        checkable = {false}\r\n                      />\r\n                      </CardBody>\r\n                      </Card>\r\n                    </GridItem>                \r\n                  </GridContainer>\r\n                  )}\r\n              </React.Fragment>\r\n              )\r\n\r\n  }\r\n}\r\n\r\nexport default withStyles(listStyle)(People);\r\n","/home/alex/donuts/client/src/components/forms/NewPasswordForm.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/confrimEmailStyle.jsx",[],"/home/alex/donuts/client/src/actions/tenantActions.jsx",["1174"],"import * as actionTypes from \"actions/actionTypes\"\r\nimport * as actions from \"actions/actionTypes\"\r\nimport  * as commonActions from \"actions/commonActions\"\r\nimport *  as notifierActions from \"actions/notifierActions\"\r\nimport tenantApi from 'api/tenantApi'\r\n\r\n\r\n\r\nexport function migrateAvatars(domain){\r\n  return function(dispatch){\r\n        const options = {\r\n        useToken: true,\r\n        action: 'migrate',\r\n        name: 'avatars', \r\n        apiFunction:tenantApi.migrateAvatars,\r\n        args:[]\r\n        }\r\n\r\n        return commonActions.callApi(dispatch,options).then(json=>{\r\n        commonActions.apiResult(dispatch,\"MIGRATE_SUCCESS\",{})\r\n        dispatch(notifierActions.enqueueSnackbar({\r\n            message: \"migrated\",\r\n            options: {\r\n                variant: 'success',\r\n            }\r\n        }))\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadTenant() {\r\n  return function (dispatch) {\r\n      return commonActions.callApi(\r\n          dispatch,\r\n          {\r\n            apiFunction: tenantApi.showTenant,\r\n            args:[],\r\n            name:\"tenant\",\r\n            action: \"load\",              \r\n          }).then(json =>{\r\n              let  tenant   = json[\"tenant\"]               \r\n             commonActions.apiResult(dispatch,actions.loadSuccess('CURRENT_TENANT'), {tenant},()=>{return{user_not_found: true}})\r\n          })\r\n  }\r\n}\r\n\r\nexport function saveTenant(tenant){\r\n  return function (dispatch) {\r\n    const options = {\r\n      useToken: true,\r\n      action: 'save',\r\n      name: 'CURRENT_TENANT', \r\n      apiFunction: tenantApi.saveTenant,\r\n      args:[tenant]\r\n    }    \r\n\r\n      return commonActions.callApi(\r\n          dispatch,options).then(json =>{\r\n            let  tenant   = json[\"tenant\"]               \r\n            commonActions.apiResult(dispatch,actions.saveItemSuccess('CURRENT_TENANT'), {tenant},()=>{return{user_not_found: true}})\r\n            dispatch(loadTenant())\r\n          })\r\n  }\r\n}\r\n\r\n\r\nexport function saveLogo(payLoad) {\r\n    return function (dispatch) {\r\n      const options = {\r\n        useToken: true,\r\n        action: 'save',\r\n        name: 'logo', \r\n        apiFunction: tenantApi.saveLogo,\r\n        args:[payLoad]\r\n      }    \r\n  \r\n        return commonActions.callApi(\r\n            dispatch,options).then(json =>{\r\n              commonActions.apiResult(dispatch,\"SAVE_LOGO_SUCCESS\", {} )\r\n              dispatch(notifierActions.enqueueSnackbar({\r\n                message: \"saved\",\r\n                options: {\r\n                    variant: 'success',\r\n                }\r\n            }))\r\n            })\r\n    }\r\n  \r\n  }\r\n","/home/alex/donuts/client/src/layouts/Regards.jsx",["1175","1176","1177","1178","1179","1180","1181","1182","1183","1184"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/icons\r\nimport Print from \"@material-ui/icons/Print\";\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\n\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle.jsx\";\r\nimport CustomTableToolbar from \"../components/table/CustomTableToolbar\";\r\n\r\n\r\n\r\nconst getActivatedItems = (items) =>{\r\n  return items.filter(item=>{\r\n          if (item.status===2)  return item\r\n        }\r\n  )\r\n}\r\n\r\nconst notActivatedItems = (items) =>{\r\n  return items.filter(item=>{\r\n          if (item.status===0 || item.status === 1)  return item\r\n        }\r\n  )\r\n}\r\n\r\nclass Regards extends React.Component {\r\n  componentDidMount(){\r\n    //if (this.props.regards.page == 0)this.props.loadRegards()\r\n      //this.props.regards.page = this.props.regards.page + 1\r\n      this.props.loadRegards();\r\n  }\r\n\r\n  onPrint(item) {\r\n    console.log(item)\r\n    this.props.onPrint(item)\r\n  }\r\n\r\n  redirectToStore() {\r\n    this.props.onRedirectToStore()\r\n  }\r\n  render() {\r\n            const { classes,regards} = this.props;\r\n            let items = regards.items.map(item=>{\r\n              return {\r\n                id: item.id, \r\n                public_uid: item.public_uid,\r\n                name: item.name, \r\n                status: item.status,\r\n                values: [item.donut_name]}\r\n            })\r\n\r\n            let actions = [\r\n              {\r\n                id: 'redirectToStore1', \r\n                label: 'Add', \r\n                icon: (<Store className={classes.tableActionButtonIcon}/>),\r\n                onClick: this.redirectToStore.bind(this)\r\n              }\r\n\r\n            ]\r\n            \r\n            return (\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                <Card>\r\n                  <CardHeader color=\"primary\">\r\n                  <CustomTableToolbar actions={actions}>\r\n                    <h4 className={classes.cardTitleWhite}><Trans>Regards i can use</Trans></h4>\r\n                  </CustomTableToolbar>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <CustomTable\r\n                    items = {notActivatedItems(items)}\r\n                    rowClick={this.onPrint.bind(this)}\r\n                    actions =  {[\r\n                        {\r\n                          icon: (<Print className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                          id: 'action_print_regard',\r\n                          label: 'Print',\r\n                          onClick: (item) => this.onPrint.bind(this,item)\r\n                        },\r\n                      ]}\r\n                    checkable = {false}\r\n                  />\r\n                  </CardBody>\r\n                  </Card>\r\n                 </GridItem>\r\n                 <GridItem xs={12} sm={6} md={6}>\r\n                 <Card>\r\n                  <CardHeader color=\"secondary\">\r\n                  <CustomTableToolbar>\r\n                    <h4 className={classes.cardTitleWhite}><Trans>Already used regards</Trans></h4>\r\n                  </CustomTableToolbar>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <CustomTable\r\n                    items = {getActivatedItems(items)}\r\n                    actions={[]}\r\n                    checkable = {false}\r\n                  />\r\n                      </CardBody>\r\n                  </Card>\r\n                 </GridItem>\r\n              </GridContainer>\r\n              )\r\n\r\n  }\r\n}\r\n\r\nexport default withStyles(listStyle)(Regards);\r\n","/home/alex/donuts/client/src/layouts/User.jsx",["1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199"],"import React, {Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {loadAccount,loadProfile, saveProfile,saveAvatar} from 'actions/profile/profileActions'\r\nimport  ProgressContainer from \"containers/ProgressContainer\"\r\nimport ListActions from \"actions/listActions\"\r\nimport apis  from 'api/apiRoot'\r\nimport Progress from \"components/Progress\";\r\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\r\nimport { stat } from 'fs';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Button } from '@material-ui/core';\r\nimport Previews from 'components/Previews';\r\nimport GridContainer from 'components/grid/GridContainer';\r\nimport GridItem from 'components/grid/GridItem';\r\nimport userStyle from 'assets/jss/layouts/userStyle';\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UserImage from 'components/UserImage';\r\n\r\n\r\n\r\nclass User  extends  Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const formGenerator = new ReduxFormGenerator({\r\n            reduxForm:{\r\n                form:\"profile_settings\",\r\n                enableReinitialize: true,\r\n                keepDirtyOnReinitialize: true \r\n            },\r\n            mapStateToProps:state => ({\r\n                hasInitial: true,\r\n                initialValues: state.account.data ,\r\n                formId: \"profile_settings\",\r\n                fields: [\r\n               // { name: \"user_avatar\", label: \"Avatar\", md:3,image: true},\r\n                { name: \"email\", label: \"Email\", xs:12 ,size: \"lg\", disabled: !props.profile.admin},\r\n                { name: \"first_name\", label: \"Name\", lg:6,size: \"lg\" },\r\n                { name: \"last_name\", label: \"Surname\", lg:6,size: \"lg\"},\r\n                { name: \"department\", source: this.props.departments.items, size: \"lg\",disabled: !props.profile.admin},\r\n                { name: \"position\", label: \"Position\", size: \"lg\"}],\r\n                submitCaption: \"Save changes\"     \r\n            }),\r\n            mapDispatchToProps: dispatch => ({\r\n                onLoad: this.props.onLoad,\r\n                onSubmit: this.props.onSubmit\r\n            \r\n            })             \r\n           \r\n        })\r\n\r\n        this.state ={\r\n            newLoaded: false,\r\n            preview: null\r\n        }\r\n\r\n        this.generatedForm =  formGenerator.getForm();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n    \r\n    readFile(files) {\r\n        if (files && files[0]) {\r\n            let formPayLoad = new FormData();\r\n            formPayLoad.append('uploaded_image', files[0]);\r\n            this.props.saveAvatar(formPayLoad)   \r\n            let preview = URL.createObjectURL(files[0])\r\n            this.setState({newLoaded:true, preview: preview})                   \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes,account,saveAvatar} = this.props\r\n        const GeneratedForm =  this.generatedForm\r\n        return (\r\n            <React.Fragment>\r\n                    <GridContainer>\r\n                        <GridItem xs={12}  sm={6} lg={6}>\r\n                         {account.data.id !==undefined && <UserImage account={account.data} saveAvatar={saveAvatar} changeable={true}/>}\r\n                             \r\n                        </GridItem>\r\n                        <GridItem xs={12}  sm={6} lg={6}>\r\n                            <GeneratedForm />\r\n                        </GridItem>\r\n                    </GridContainer>\r\n            </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(userStyle)(withTranslation()(User))\r\n","/home/alex/donuts/client/src/layouts/Register.jsx",[],"/home/alex/donuts/client/src/layouts/Dashboard.jsx",["1200","1201","1202","1203","1204","1205"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport dashboardStyle from 'assets/jss/components/dashboardStyle'\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport SelfAccountContainer from \"containers/SelfAccountContainer\";\r\nimport DistribAccountContainer from \"containers/DistribAccountContainer\";\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport EventListContainer from 'containers/EventListContainer';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {TabPanel,a11yProps} from 'components/tabs/TabPanel'\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass Dashboard extends   Component {\r\n   \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            value: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.onRequestUser();\r\n        if (this.props.page == 0)this.props.loadEvents(this.props.page+1)\r\n        //TODO: TImer https://medium.com/@machadogj/timers-in-react-with-redux-apps-9a5a722162e8\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.props.loadEvents(this.props.page+1)\r\n    }\r\n\r\n    doNut() {\r\n\r\n    }\r\n\r\n    reloadEvents(filter){\r\n        this.props.reloadEvents(filter)\r\n    }\r\n\r\n    handleChange(event, newValue){\r\n        this.setState({value:newValue});\r\n    }\r\n\r\n    render() {\r\n        const {classes, profile,t} = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <GridContainer>\r\n                       \r\n                       <GridItem xs={12} sm={7} md={7} className={classes.logo}>\r\n                            {profile.logo!==undefined && profile.logo.url!=undefined&& profile.logo.url!=null &&    <img className={classes.logo} src={profile.logo.url}/>}\r\n\r\n                        </GridItem>\r\n\r\n                        <GridItem xs={12} sm={5} md={5}>\r\n                        <div className = {classes.flexContainer}>\r\n                        <hr className = {classes.flexLine}/>\r\n                        <section><Trans>Balance</Trans></section>\r\n                        <hr className = {classes.flexLine}/>\r\n                    </div>\r\n                          {profile !== undefined && profile.self_account !== undefined  && <SelfAccountContainer/>}\r\n                          {profile !== undefined && profile.distrib_account !== undefined  && <DistribAccountContainer/>}\r\n                        </GridItem>\r\n                        <Tabs \r\n                                value={this.state.value} \r\n                                onChange={this.handleChange.bind(this)} \r\n                                aria-label=\"settings tabs\"\r\n                                >\r\n                                    <Tab label={t(\"Events\")} {...a11yProps(0)} />\r\n                                    <Tab label={t(\"News\")} {...a11yProps(1)} />\r\n                            </Tabs> \r\n                    <GridItem xs={12} >\r\n                        <TabPanel value={this.state.value} index={0}>\r\n                            <div className = {classes.flexContainer}>\r\n                                <hr className = {classes.flexLine}/>\r\n                                    <section>\r\n                                        <Trans>Events</Trans>\r\n                                    </section>\r\n                                <hr className = {classes.flexLine}/>\r\n                            </div>\r\n                            <EventListContainer/>\r\n                        </TabPanel>\r\n                        <TabPanel value={this.state.value} index={1}>\r\n                        <div className = {classes.flexContainer}>\r\n                                <hr className = {classes.flexLine}/>\r\n                                    <section>\r\n                                        <Trans>News</Trans>\r\n                                    </section>\r\n                                <hr className = {classes.flexLine}/>\r\n                            </div>\r\n                            <Paper/>  \r\n                        </TabPanel>\r\n                    </GridItem>                         \r\n                   </GridContainer>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nDashboard.props = {\r\n    \r\n}\r\nexport default withStyles(dashboardStyle)(withTranslation(\"translations\")(Dashboard));\r\n","/home/alex/donuts/client/src/layouts/Home.jsx",["1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {push } from 'connected-react-router'\nimport { withTranslation, Trans } from \"react-i18next\";\n\nimport homeStyle from 'assets/jss/components/homeStyle'\n\nclass Home extends React.Component {\n\n\n  handleLogIn = () => {\n      this.props.onLoginRedirect()\n  }\n  handleRegister = () => {\n      this.props.onRegisterRedirect()\n  }\n  handleGuestLogin =() => {\n    this.props.onDemo()\n  }\n\n  render() {\n      const { classes } = this.props;\n      return (\n        <React.Fragment>\n          <main>\n            {/* Hero unit */}\n            <div className={classes.heroUnit}>\n              <div className={classes.heroContent}>\n                <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  Do Nuts\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                  <Trans>CONST_GREETINGS</Trans>\n                </Typography>\n                <div className={classes.heroButtons}>\n                  <Grid container spacing={16} justify=\"center\">\n                    <Grid item>\n                      <Button variant=\"contained\" color=\"primary\" onClick={this.handleGuestLogin}>\n                         Demo\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLogIn}>\n                        Sign In\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleRegister}>\n                        Sign Up\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n\n          </main>\n          {/* Footer */}\n          <footer className={classes.footer}>\n            <Typography variant=\"caption\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            ЦКИ 2019\n            </Typography>\n          </footer>\n          {/* End footer */}\n        </React.Fragment>\n      );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onLoginRedirect: PropTypes.func.isRequired,\n  onRegisterRedirect: PropTypes.func.isRequired,\n};\n\nexport default withStyles(homeStyle)(Home);\n","/home/alex/donuts/client/src/components/Previews.jsx",["1217"],"import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumb = {\n  display: 'flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  //marginBottom: 8,\n  //marginRight: 8,\n  margin: 'auto',\n  width: 200,\n  height: 200,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\n\nfunction Previews(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n\nexport default Previews\n","/home/alex/donuts/client/src/components/Progress.jsx",[],"/home/alex/donuts/client/src/actions/storeActions.jsx",[],"/home/alex/donuts/client/src/components/store/Store.jsx",["1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport  StoreTableHead from \"./StoreTableHead\"\r\nimport  StoreToolbar from \"./StoreToolbar\"\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 100,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass Store extends React.Component {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: 'price',\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  };\r\n\r\n\r\n  componentDidMount = ()=>{\r\n      this.props.loadStore()\r\n  }\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: this.props.store.items.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleEdit = () =>{\r\n    if (this.state.selected.length>0){\r\n      this.props.onEditItem(this.state.selected[0])\r\n    }\r\n  }\r\n\r\n  handleBuyItem = () => {\r\n    if (this.state.selected.length>0){\r\n      this.props.onBuyItem(this.state.selected[0])\r\n    }\r\n  }\r\n\r\n  handleDelete = () =>{\r\n    this.props.onDeleteItem(this.state.selected)\r\n    this.setState({ selected: [] });\r\n  }\r\n\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const data = this.props.store.items\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div>\r\n        <StoreToolbar\r\n          numSelected={selected.length}\r\n          onAddItem = {this.props.onAddItem}\r\n          onEditItem = {this.handleEdit}\r\n          onDeleteItem = {this.handleDelete}\r\n          onBuyItem = {this.handleBuyItem}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <StoreTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{n.price}</TableCell>\r\n                      <TableCell align=\"left\">{n.expiration_date}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStore.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Store);\r\n","/home/alex/donuts/client/src/components/ImageLoader.jsx",[],"/home/alex/donuts/client/src/components/table/CustomTableToolbar.jsx",["1231","1232","1233"],"import React, { Component } from 'react'\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport customTableStyle from \"assets/jss/components/customTableStyle.jsx\";\r\n\r\nlet CustomTableToolbar =props => {\r\n        const { numSelected, classes,children,actions} = props;\r\n        const { t} = useTranslation();\r\n        let tableActions = actions !==undefined ? actions : []\r\n        return (\r\n        <Toolbar\r\n            className={classNames(classes.toolbar, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n          >\r\n          <div className={classes.title}>\r\n            {numSelected > 0 ? (\r\n              <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                {numSelected}   <Trans>selected</Trans>\r\n              </Typography>\r\n            ) : (\r\n              <div>{children}</div>\r\n            )}\r\n          </div>\r\n          <div >\r\n          {tableActions.map(action=>(\r\n            <Tooltip \r\n              key= {action.label.concat(action.id)}\r\n              title={t(action.label)}  \r\n              classes={{ tooltip: classes.tooltip }}\r\n              onClick = {action.onClick}\r\n            >\r\n              <IconButton aria-label={action.label}  className={classes.tableActionButton}>\r\n                {action.icon}\r\n              </IconButton>\r\n            </Tooltip>          \r\n            )\r\n          )}\r\n          </div>\r\n        </Toolbar>\r\n    );       \r\n  }\r\n\r\n\r\nexport default withStyles(customTableStyle)(CustomTableToolbar)","/home/alex/donuts/client/src/assets/jss/layouts/listStyle.jsx",["1234","1235","1236","1237","1238"],"import {\r\n    defaultFont,\r\n    primaryColor,\r\n    successColor,\r\n    blackColor,\r\n    dangerColor,\r\n    grayColor,\r\n    whiteColor,\r\n    hexToRgb\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n  \r\n  const listStyle = {\r\n    tableActionButtonIcon: {\r\n      width: \"27px\",\r\n      height: \"27px\"\r\n    },\r\n    edit: {\r\n      backgroundColor: \"transparent\",\r\n      color: primaryColor,\r\n      boxShadow: \"none\",\r\n      fontSize: \"30\"\r\n    },\r\n    buy: {\r\n        backgroundColor: \"transparent\",\r\n        color: successColor[3],\r\n        boxShadow: \"none\",\r\n        fontSize: \"30\"\r\n      },\r\n    activate: {\r\n        backgroundColor: \"transparent\",\r\n        color: successColor[3],\r\n        boxShadow: \"none\",\r\n        fontSize: \"30\"\r\n      },\r\n    close: {\r\n      backgroundColor: \"transparent\",\r\n      color: dangerColor[0],\r\n      boxShadow: \"none\"\r\n    }\r\n  \r\n  };\r\n  export default listStyle;\r\n  ","/home/alex/donuts/client/src/modals/share/ShareForm.jsx",[],"/home/alex/donuts/client/src/modals/store/StoreItemForm.jsx",["1239"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport modalStyle from 'assets/jss/modals/modalStyle'\r\n\r\nimport {renderNumberField,renderDateField, renderCheckbox} from 'components/forms/common/render'\r\nimport {renderTextField} from 'components/forms/common/text'\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n      'donut_name',\r\n      'donut_price'\r\n  ]\r\n\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n\r\n  return errors\r\n}\r\n\r\n\r\n\r\nclass StoreItemForm extends  Component {\r\n      render() {\r\n        const { handleSubmit, pristine,  submitting, classes,name} = this.props\r\n        console.log(this.props)\r\n        return (\r\n              <form onSubmit={handleSubmit} className={classes.container}>\r\n              <DialogContent className={classes.root}>\r\n                <div>\r\n                  <Field\r\n                    name=\"donut_name\"\r\n                    component={renderTextField}\r\n                    label=\"name\"\r\n                    className={classes.textField}\r\n                  //  input = {{value:'123'}}\r\n                  />\r\n               </div>\r\n               <div>\r\n                 <Field\r\n                   name=\"donut_price\"\r\n                   component={renderNumberField}\r\n                   label=\"price\"\r\n                   className={classes.textField}\r\n                   placeholder=\"price\"\r\n                 />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  name=\"donut_expiration\"\r\n                  component={renderDateField}\r\n                  label=\"expiration\"\r\n                  className={classes.textField}\r\n                  placeholder=\"expiration\"\r\n                />\r\n             </div>\r\n             <Field\r\n                  name=\"active\"\r\n                  component={renderCheckbox}\r\n                  label=\"active\"\r\n                  className={classes.textField}\r\n                  placeholder=\"active\"\r\n                />\r\n    \r\n\r\n\r\n            </DialogContent>\r\n             <DialogActions>\r\n                 <Button type=\"submit\" disabled={pristine || submitting}  color=\"primary\" autoFocus>\r\n                     Submit\r\n                 </Button>\r\n                 <Button onClick={this.props.onClose} color=\"secondary\" >\r\n                     Close\r\n                 </Button>\r\n             </DialogActions>\r\n\r\n              </form>\r\n            )\r\n          }\r\n}\r\n\r\nStoreItemForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nStoreItemForm =  reduxForm({\r\n  form: 'StoreItemForm', // a unique identifier for this form\r\n  validate,\r\n  //asyncValidate\r\n})(StoreItemForm)\r\n\r\nexport default withStyles(modalStyle)(StoreItemForm);\r\n","/home/alex/donuts/client/src/components/EventCard.jsx",["1240","1241","1242","1243","1244","1245","1246","1247"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport classNames from \"classnames\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport UserAvatar from './UserAvatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport eventCardStyles from 'assets/jss/components/eventCardStyle';\r\nimport ProfileButton from 'components/ProfileButton';\r\nimport Operation from './OperationText';\r\nimport OperationText from './OperationText';\r\nimport OperationContainer from 'containers/OperationContainer';\r\n\r\n\r\n\r\nclass  EventCard extends React.Component {\r\n\r\n    state = { expanded: false };\r\n\r\n    handleExpandClick = () => {\r\n        this.setState(state => ({ expanded: !state.expanded }));\r\n    };\r\n\r\n    click() {\r\n        this.props.onProfileClick(this.props.post)\r\n    }\r\n    userClick(){\r\n        this.props.onProfileClick(this.props.post.operation.to_profile)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { classes, post,t,commentable,likeable} = this.props;\r\n        const avatarClass = classNames({\r\n            [classes.avatar]: true,\r\n            [classes.avatarPrivate]: !post.public,            \r\n          });\r\n         \r\n        const amountClass = classNames({\r\n            [classes.operationText]: true,\r\n            [classes.amountText]: true,\r\n            [classes.plusText]: post.operation && post.operation.direction >0,\r\n            [classes.minusText]: post.operation && post.operation.direction <0\r\n        })\r\n        const cardClass = classNames({\r\n        [classes.card]: true,\r\n        [classes.cardPrivate]: !post.public,            \r\n        });\r\n\r\n        const likeClass = classNames({\r\n            [classes.liked]: post.liked\r\n        })\r\n\r\n        let avatar_url = null\r\n        if (post.user_avatar !== undefined && post.user_avatar !==null){\r\n            avatar_url = post.user_avatar.thumb.url\r\n        }\r\n \r\n        let title = (<Button className={classes.accountButton} onClick={this.click.bind(this)}>\r\n                        {post.user_name}\r\n                      </Button>)\r\n        return (\r\n            <Card className={cardClass}>\r\n                <CardHeader\r\n                    className={classes.cardHeader}\r\n                    avatar={\r\n                        <React.Fragment>\r\n                            {post.public && <UserAvatar  onClick={this.click.bind(this)} className ={classes.avatar} avatar_url={avatar_url} alt={post.user_name} />}\r\n                            {!post.public && <Avatar className ={classes.avatar}><AndroidIcon/></Avatar>}                             \r\n                        </React.Fragment>\r\n                    }\r\n                    action={ \r\n                        <Tooltip title={!post.public ? t(\"Only you can see it\"): t(\"Profile\")}>\r\n                        <IconButton  aria-label= {!post.public ? t(\"Only you can see it\"): t(\"Profile\")}>\r\n                            {!post.public &&<LockIcon/>}   \r\n                        </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                    title={post.public? title: \"Сервис бот\"}\r\n                    subheader={post.public && post.position}\r\n                 />   \r\n\r\n                <CardContent className={classes.content}>\r\n                           <OperationContainer receiver operation={post.operation}/>\r\n                      <Typography component=\"p\" className={classes.operationText}>\r\n                                    {post.operation && post.public &&\r\n                                            post.extra_content}\r\n                                    {(!post.operation || !post.extra_content) && post.content}\r\n                      </Typography>   \r\n                </CardContent>\r\n\r\n                <CardActions className={classes.actions} disableSpacing>          \r\n                    {(commentable || likeable) && <IconButton aria-label=\"Add to favorites\" onClick={this.props.onLikeEvent.bind(this,post)} className={likeClass}>\r\n                        <FavoriteIcon />\r\n                        {post.likes.length>0 && post.likes.length}\r\n                    </IconButton>\r\n                    }\r\n                    {commentable && <IconButton aria-label=\"Comment\" onClick={this.props.onShowEventModal.bind(this,post)}>\r\n                        <CommentIcon/>\r\n                        {post.comments_count!==undefined && post.comments_count!==0 && post.comments_count}\r\n                    </IconButton>\r\n                    }\r\n                    {post.extra_content && <IconButton\r\n                        className={classnames(classes.expand, {\r\n                            [classes.expandOpen]: this.state.expanded,\r\n                        })}\r\n                        onClick={this.handleExpandClick}\r\n                        aria-expanded={this.state.expanded}\r\n                        aria-label=\"Show more\"\r\n                    >              \r\n                        <ExpandMoreIcon />\r\n                    </IconButton>}\r\n\r\n                    <Typography variant=\"caption\" component='div' className= {classes.dateCaption}>\r\n                        {post.date_string}\r\n                    </Typography>      \r\n\r\n                </CardActions>\r\n                 <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        {post.extra_content}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nEventCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(eventCardStyles)(withTranslation()(EventCard));\r\n","/home/alex/donuts/client/src/components/card/CardBody.jsx",[],"/home/alex/donuts/client/src/components/card/CardHeader.jsx",[],"/home/alex/donuts/client/src/components/card/Card.jsx",[],"/home/alex/donuts/client/src/api/dashboardApi.jsx",["1248","1249"],"import {post,get,del,put,request} from './api'\r\n\r\nconst USERS_URL = '/api/profiles'\r\nconst SEND_POINT_URL = '/api/account_operations'\r\nconst EVENTS_URL = '/api/events'\r\n\r\nexport default class DashboardApi {\r\n    static loadUsers(token) {\r\n      return  get(USERS_URL, token)\r\n    }\r\n\r\n    static sendPoints(token, amount, from_profile_id, to_profile_ids,comment, is_for_distrib,share_for_all,burn_old,to_self_account) {\r\n      let body = JSON.stringify({ amount,to_profile_ids: to_profile_ids, from_profile_id,comment, is_for_distrib,share_for_all,burn_old,to_self_account})\r\n       return post(SEND_POINT_URL, body,token)\r\n    }\r\n\r\n\r\n    static loadEvents(token,page,filter={}) {\r\n        let filterString = \"\"\r\n        if (filter.showMine){\r\n          filterString = filterString + \"&showMine=true\"\r\n        }\r\n        return get(EVENTS_URL+'?page=' + page+filterString, token)\r\n    }\r\n\r\n    static loadEventWithComment(token,id){\r\n      return get(EVENTS_URL+'/'+id,token)\r\n    }\r\n\r\n\r\n    static likeEvent(token,event) {\r\n      let body = JSON.stringify({\r\n        like: true, \r\n      })\r\n      return put(EVENTS_URL+'/'+event.id, body,token)\r\n    }\r\n\r\n    static commentItem(token, event, comment){\r\n      let body =JSON.stringify({\r\n        text: comment\r\n      })\r\n      if (comment===\"\" || comment===undefined) return Promise.reject('Can not be empty');\r\n      return post(EVENTS_URL + \"/\" + event.id + \"/comments\", body,token )\r\n    }\r\n\r\n}\r\n","/home/alex/donuts/client/src/containers/NewCommentContainer.jsx",["1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265"],"import React, { Component } from 'react'\nimport ListActions from \"actions/listActions\"\nimport apis  from 'api/apiRoot'\n\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\nimport LayoutModal from 'modals/LayoutModal';\nimport {connect} from 'react-redux'\nimport GridContainer from 'components/grid/GridContainer';\nimport GridItem from 'components/grid/GridItem';\nimport userStyle from 'assets/jss/layouts/userStyle';\nimport {likeEvent,commentItem, loadEventWithComments} from \"actions/eventActions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { DialogActions, Button } from '@material-ui/core';\nimport { Trans } from 'react-i18next';\nimport EventCardContainer from 'containers/EventCardContainer';\nimport CommentContainer from 'containers/CommentContainer';\nimport * as notifierActions from \"actions/notifierActions\"\nimport { reset, reduxForm } from \"redux-form\";\nimport ProgressContainer from 'containers/ProgressContainer';\n\nconst commentCallback = (form_id) => {\n    return {\n        success: (dispatch,response) => {\n          dispatch(notifierActions.enqueueSnackbar({\n            message: 'Comment saved',\n            options: {\n                variant: 'success',\n            }\n          })      \n          )\n          dispatch(reset(form_id))\n        }\n      }\n    }\n\n\nconst mapDispatchToProps = (dispatch,props) => {\n    return {\n        onSubmit: (values) => {  \n            dispatch(commentItem({item: props.event,comment: values.text},commentCallback('new_comment_form')))\n        },\n  \n    }\n}\n\nconst  mapStateToProps = (state, ownProps) => {\n    return{\n      event: ownProps.event\n    }\n}\n\n\n\nexport class EventModal extends Component {\n    componentWillMount(){\n        \n    }\n\n    constructor(props) {\n        super(props);\n        const formGenerator = new ReduxFormGenerator({\n            reduxForm:{\n                form:\"new_comment_form\",\n                enableReinitialize: true,\n                keepDirtyOnReinitialize: true \n            },\n            mapStateToProps:state => ({\n                hasInitial: false,\n                formId: \"new_comment_form\",\n                fields: [\n                  { name: \"text\", label: \"your comment\", size: \"lg\",xd:12,rows:\"4\"},\n                ],\n                submitCaption: \"Send\",\n                cancelable: false  \n            }),\n            mapDispatchToProps, \n           \n        })\n\n        this.generatedForm =  formGenerator.getForm();\n    }\n\n    render() {\n        const {classes, modal,event}  =this.props\n        const GeneratedForm =  this.generatedForm\n        return (\n            <React.Fragment>                \n                <GeneratedForm formId= {\"new_comment_form\"} onCloseModal={this.props.onCloseModal} event ={event}/>\n           </React.Fragment>\n            )\n  }\n}\n\n\nexport default withStyles(userStyle)(connect(mapStateToProps, mapDispatchToProps)(EventModal))\n","/home/alex/donuts/client/src/layouts/TenantSettings.jsx",["1266","1267"],"import React, {Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport GridContainer from 'components/grid/GridContainer';\r\nimport GridItem from 'components/grid/GridItem';\r\nimport ReduxFormGenerator from 'components/forms/reduxFormGenerator';\r\nimport settingsStyles from \"assets/jss/layouts/settingsStyles.jsx\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ImageLoader from 'components/ImageLoader'\r\n\r\n\r\nclass TenantSettings  extends  Component {\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        const formGenerator = new ReduxFormGenerator({\r\n            reduxForm:{\r\n                form:\"profile_settings\",\r\n                enableReinitialize: true,\r\n                keepDirtyOnReinitialize: true \r\n            },\r\n            mapStateToProps:state => ({\r\n                hasInitial: true,\r\n                initialValues: state.profile.tenant,\r\n                formId: \"tenant_settings\",\r\n                fields: [\r\n               // { name: \"user_avatar\", label: \"Avatar\", md:3,image: true},\r\n                { name: \"caption\", label: \"Caption\", xs:12 ,size: \"lg\"},\r\n                { name: \"domain\", label: \"Domain\", lg:6,size: \"lg\" }],\r\n                submitCaption: \"Save changes\"     \r\n            }),\r\n            mapDispatchToProps: dispatch => ({\r\n                onLoad:  props.loadTenant,\r\n                onSubmit: props.saveTenant      \r\n            })             \r\n           \r\n        })       \r\n \r\n        this.state ={\r\n            newLoaded: false,\r\n            preview: null\r\n        }\r\n\r\n        this.generatedForm =  formGenerator.getForm();\r\n    }\r\n  \r\n    componentDidMount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        URL.revokeObjectURL(this.state.preview)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { classes,saveFile,saveLogo,tenant,...other } = this.props;\r\n        const GeneratedForm =  this.generatedForm\r\n        return (\r\n                <React.Fragment>\r\n                        <GridContainer>\r\n                            <GridItem xs={12}  sm={6} lg={6}>\r\n                            <ImageLoader save = {saveLogo} changeable loaded_image ={tenant.logo} objectId = {tenant.id}/>\r\n                                \r\n                            </GridItem>\r\n                            <GridItem xs={12}  sm={6} lg={6}>\r\n                                <GeneratedForm />\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                </React.Fragment>\r\n        );\r\n    }\r\n  }\r\n  \r\n  TenantSettings.propTypes = {\r\n    tenant: PropTypes.object,\r\n    saveLogo: PropTypes.func,\r\n    loadTenant: PropTypes.func,\r\n    saveTenant: PropTypes.func\r\n  };\r\n  \r\n  \r\n  export default withStyles(settingsStyles)(TenantSettings)","/home/alex/donuts/client/src/components/list/StandartList.jsx",["1268","1269","1270","1271","1272","1273"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport CustomTable from 'components/table/CustomTable';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport Card from \"components/card/Card.jsx\";\r\nimport CardHeader from \"components/card/CardHeader.jsx\";\r\nimport CardBody from \"components/card/CardBody.jsx\";\r\nimport CustomTableToolbar from \"components/table/CustomTableToolbar\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\nimport listStyle from \"assets/jss/layouts/listStyle\";\r\n\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n\r\nfunction StandartList(props){\r\n\r\n    const {classes, list,name,editItem,loadItems,deleteItem,addItem, getValues} = props\r\n\r\n    const { t, i18n } = useTranslation();\r\n    useEffect(() => {\r\n      loadItems();      \r\n    },[])\r\n\r\n    \r\n    const onDelete = (item) =>{\r\n       if (typeof(deleteItem)=='function') deleteItem(item)\r\n    }\r\n\r\n    const onAdd = () => {\r\n      if (typeof(addItem)=='function') addItem();\r\n    }\r\n      \r\n    const onEdit=(item) =>{\r\n      if (typeof(editItem)=='function') editItem(item)\r\n    } \r\n\r\n           \r\n    let items= []\r\n    if (list !==undefined && list.items !== undefined){                \r\n        items = list.items.map(item=>{\r\n            return {\r\n                ...item,\r\n                values: getValues !==undefined ? getValues(item):[item.name]        \r\n            }\r\n        })\r\n      }\r\n\r\n    let header_actions = [\r\n      {\r\n        id: 'add_new_item_'+name, \r\n        label: 'Add', \r\n        icon: (<Add className={classes.tableActionButtonIcon}/>),\r\n        onClick: onAdd\r\n      }\r\n    ]\r\n  \r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={6}>\r\n        <Card>\r\n          <CardHeader color=\"secondary\">\r\n          <CustomTableToolbar actions={header_actions}>\r\n            <h4 className={classes.cardTitleWhite}><Trans>name</Trans></h4>\r\n          </CustomTableToolbar>\r\n          </CardHeader>\r\n     \r\n          <CardBody>\r\n          <CustomTable\r\n            items = {items}\r\n            actions =  {[\r\n                {\r\n                  icon: (<Delete className={classes.tableActionButtonIcon + \" \" + classes.delete}/>),\r\n                  id: 'delete_item_action_'+name,\r\n                  label: 'Delete',\r\n                  onClick: onDelete\r\n                },\r\n                {\r\n                  icon: (<Edit className={classes.tableActionButtonIcon + \" \" + classes.edit}/>),\r\n                  id: 'edit_item_action_'+name,\r\n                  label: 'Edit',\r\n                  onClick: onEdit\r\n                },\r\n              ]}\r\n            checkable = {false}\r\n          />\r\n          </CardBody>\r\n          </Card>\r\n          </GridItem>                     \r\n      </GridContainer>\r\n      )\r\n    \r\n}         \r\n\r\nexport default withStyles(listStyle)(StandartList);","/home/alex/donuts/client/src/components/store/StoreTableHead.jsx",["1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\nimport { useTranslation, Trans,withTranslation } from \"react-i18next\";\n\n\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label:'Donut name' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n  { id: 'expiration_date', numeric: false, disablePadding: false, label: 'Expiration date' },\n];\n\n\nclass StoreTableHead extends React.Component {\n\n\n\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    <Trans>{row.label}</Trans>\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this,\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nStoreTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default  withTranslation()(StoreTableHead);\n","/home/alex/donuts/client/src/components/store/StoreToolbar.jsx",["1286","1287","1288","1289","1290"],"\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n      display: 'flex',\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n  toolButton: {\r\n\r\n  }\r\n});\r\n\r\nlet StoreToolbar = props => {\r\n  const { numSelected, classes,onAddItem, onEditItem,onDeleteItem, onBuyItem } = props;\r\n  const { t, i18n } = useTranslation();\r\n\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <span className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" component={'span'} variant=\"subtitle1\">\r\n            {numSelected}   <Trans>selected</Trans>\r\n          </Typography>\r\n        ) : (\r\n          <Typography component={'span'} variant=\"h6\" id=\"tableTitle\">\r\n            <Trans>Goods</Trans>\r\n          </Typography>\r\n        )}\r\n      </span>\r\n      <span className={classes.spacer} />\r\n      <span className={classes.actions}>\r\n          {numSelected == 1 &&\r\n              <Tooltip title={t(\"Edit\")} className={classes.toolButton} onClick={onEditItem}>\r\n                  <IconButton aria-label=\"Edit\">\r\n                    <EditIcon />\r\n                  </IconButton>\r\n              </Tooltip>\r\n          }\r\n          {numSelected == 1 &&\r\n              <Tooltip title={t(\"Buy\")} className={classes.toolButton} onClick={onBuyItem}>\r\n                  <IconButton aria-label=\"Buy\">\r\n                   <AddShoppingCartIcon />\r\n                  </IconButton>\r\n              </Tooltip>\r\n          }\r\n          {numSelected > 0 ? (\r\n            <Tooltip title={t(\"Delete\")} className={classes.toolButton} onClick={onDeleteItem}>\r\n              <IconButton aria-label=\"Delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title={t(\"Add\")} className={classes.toolButton}>\r\n              <IconButton aria-label=\"Add\" onClick={onAddItem}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n      </span>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nStoreToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(toolbarStyles)(StoreToolbar);\r\n","/home/alex/donuts/client/src/components/tabs/TabPanel.jsx",["1291","1292","1293","1294","1295"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`tabpanel-${index}`}\r\n        aria-labelledby={`tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n           {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n\r\n  export function a11yProps(index) {\r\n    return {\r\n      id: `tab-${index}`,\r\n      'aria-controls': `tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n","/home/alex/donuts/client/src/assets/jss/components/registerFormStyle.jsx",["1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307"],"import {\n    drawerWidth,\n    drawerCloseWidth,\n    transition,\n    boxShadow,\n    defaultFont,\n    primaryColor,\n    primaryBoxShadow,\n    defaultBoxShadow,\n    grayColor,\n    infoColor,\n    successColor,\n    warningColor,\n    dangerColor\n  } from \"assets/jss/baseStyles.jsx\";\n\nconst registerFormStyle = theme => ({\n    container: {\n        display: 'block',\n    },\n    content: {\n        maxWidth: 600,\n        margin: '0 auto',\n        display: 'flex',        \n      },\n    checkBox: {\n      width: 200\n    },\n    button: {\n        width: 200,\n        display: 'flex',\n        margin: 'auto',\n        padding: 0\n    },\n    cancelButton: {\n        maxWidth: 200,\n        display: 'flex',\n        margin: 'auto',\n        textAlign: 'left',\n        padding: 0,\n        color: grayColor[0]\n    },\n    textField: {\n        width: 250,\n        display: 'flex',\n        margin: 'auto'\n    },\n    caption: {\n        marginTop: 5,\n      }\n});\n\nexport default registerFormStyle;\n","/home/alex/donuts/client/src/assets/jss/components/homeStyle.jsx",["1308","1309","1310","1311","1312","1313","1314","1315"],"import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor\n} from \"assets/jss/baseStyles\";\n\n\nconst homeStyle = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroUnit: {\n    backgroundColor: 'transparent',\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing(8)}px 0 ${theme.spacing(6)}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing(8)}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: 'transparent',\n    padding: theme.spacing(6),\n  },\n});\nexport default  homeStyle;\n","/home/alex/donuts/client/src/components/charts/Leaderboard.jsx",["1316","1317","1318"],"import React from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\n import { withTranslation, Trans } from \"react-i18next\";\n import { withStyles } from '@material-ui/core/styles';\nimport leaderBoardStyle from 'assets/jss/components/leaderBoardStyle';\n\nexport  class Leaderboard extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      width: 100,\n      height: 100, \n    }\n  }\n\n  componentWillMount(){\n    this.setState({height: this.props.height})\n  }\n\n  render() {\n    const {items,t,classes} = this.props;\n    const sortedItems = items.sort((a,b)=>{\n      if (a.score_total > b.score_total) {\n        return -1;\n      }\n      if (a.score_total < b.score_total) {\n        return 1;\n      }\n   \n      return 0;\n    })\n\n    const labels = sortedItems.map(item=> item.name)\n    const data = {\n        labels: labels,\n        datasets: [\n          {\n            label: t('points'),\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: sortedItems.map(item=>{return item.score_total})\n            \n          }\n        ]\n      };\n\n    return (\n      <div>\n        <h2><Trans>{this.props.caption}</Trans></h2>\n        <div>\n        <HorizontalBar data={data} \n          height={this.state.height}\n          width ={this.state.width} \n          options={{ maintainAspectRatio: false,responsive:true }}/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withTranslation()(Leaderboard)","/home/alex/donuts/client/src/components/OperationText.jsx",["1319","1320","1321"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from \"classnames\";\r\nimport { Trans } from \"react-i18next\";\r\nimport ProfileButton from './ProfileButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    successColor,\r\n    dangerColor,\r\n  } from \"assets/jss/baseStyles.jsx\";\r\nimport PurchaseButton from './PurchaseButton';\r\n\r\nconst style = (theme) => ({\r\n    operationText: {\r\n        display: 'inline-flex',\r\n        margin: \"auto 2px\",\r\n        padding: 2,\r\n        whiteSpace: \"pre-wrap\",       /* css-3 */\r\n        wordBreak: \"break-word\",\r\n    },\r\n    amountText:{\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n     },\r\n     plusText:{\r\n        color:successColor[1]\r\n     },\r\n     minusText:{\r\n        color:dangerColor[1]\r\n     },\r\n     operationContainer: {\r\n        padding: 0,\r\n        margin: 0,\r\n\r\n     },      \r\n\r\n      \r\n});\r\n\r\nfunction OperationText(props) {\r\n    const {classes,operation,onToProfileClick,onFromProfileClick,receiver,sender, onPurchaseClick} = props;\r\n    const amountClass = classNames({\r\n        [classes.operationText]: true,\r\n        [classes.amountText]: true,\r\n        [classes.plusText]: operation && operation.direction >0,\r\n        [classes.minusText]: operation && operation.direction <0\r\n    })\r\n    let to_profile\r\n    let from_profile\r\n    if (operation !==null && operation !== undefined){\r\n        if (operation.to_profile !== undefined){\r\n            to_profile = {...operation.to_profile, name:operation.to_user_name }\r\n        }\r\n        if (operation.from_profile !== undefined){\r\n            from_profile = {...operation.from_profile, name:operation.from_user_name }\r\n        }\r\n    }\r\n\r\n    const toProfileClick = ()=>{\r\n        onToProfileClick(operation);\r\n    }\r\n    const fromProfileClick = () => {\r\n        onFromProfileClick(operation)\r\n    }\r\n    const purchaseClick =()=>{\r\n        onPurchaseClick(operation)\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n        {operation !== undefined && operation!==null && <Grid container className={classes.operationContainer}>\r\n            <span className={amountClass}> {operation.direction===1?\"+\":\"\"}{operation.amount}  </span> \r\n            {receiver  && operation.to_profile !== undefined &&operation.to_profile !== undefined && operation.to_profile!==null && \r\n            <React.Fragment>\r\n                     <span className={classes.operationText}> <Trans>for</Trans> </span>  \r\n                     <ProfileButton profile ={to_profile} onClick={toProfileClick}/>\r\n            </React.Fragment> \r\n            }\r\n            {sender && operation.from_profile !== undefined && operation.from_profile!==null &&\r\n                <React.Fragment>\r\n                    <span className={classes.operationText}> <Trans>from</Trans> </span>  \r\n                    <ProfileButton profile ={from_profile} onClick={fromProfileClick}/>\r\n                </React.Fragment>\r\n            }\r\n            {operation.created_at !== undefined && operation.created_at!==null &&  <span className={classes.operationText}>{operation.created_at}</span>}\r\n            {operation.deal_type=='buy' && <PurchaseButton onClick={purchaseClick}/>}\r\n    </Grid>}\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nOperationText.propTypes = {\r\n    onToProfileClick: PropTypes.func,\r\n    onFromProfileClick: PropTypes.func,\r\n    onPurchaseClick: PropTypes.func,\r\n  };\r\n  \r\n\r\nexport default withStyles(style)(OperationText)\r\n","/home/alex/donuts/client/src/assets/jss/components/customTableStyle.jsx",["1322","1323"],"import {\r\n  defaultFont,\r\n  primaryColor,\r\n  blackColor,\r\n  dangerColor,\r\n  grayColor,\r\n  whiteColor,\r\n  hexToRgb\r\n} from \"assets/jss/baseStyles.jsx\";\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport checkboxAndRadioStyle from \"assets/jss/checkBoxAndRadioStyle.jsx\";\r\nconst customTableStyle = theme => ({\r\n  ...checkboxAndRadioStyle,\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  tooltip: {\r\n      padding: \"10px 15px\",\r\n      minWidth: \"130px\",\r\n      lineHeight: \"1.7em\",\r\n      border: \"none\",\r\n      borderRadius: \"3px\",\r\n      boxShadow:\r\n        \"0 8px 10px 1px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.14), 0 3px 14px 2px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 5px 5px -3px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.2)\",\r\n      maxWidth: \"200px\",\r\n      textAlign: \"center\",\r\n      fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\r\n      fontSize: \"12px\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"400\",\r\n      textShadow: \"none\",\r\n      textTransform: \"none\",\r\n      letterSpacing: \"normal\",\r\n      wordBreak: \"normal\",\r\n      wordSpacing: \"normal\",\r\n      wordWrap: \"normal\",\r\n      whiteSpace: \"normal\",\r\n      lineBreak: \"auto\"\r\n  },\r\n\r\n  button: {\r\n      font: \"inherit\",\r\n      textTransform: \"none\"\r\n  },\r\n\r\n  cardTitleWhite: {\r\n    color: whiteColor,\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n\r\n  table: {\r\n    marginBottom: \"0\",\r\n    overflow: \"visible\",\r\n    background: whiteColor,\r\n   // maxWidth: \"600px\"\r\n  },\r\n  tableRow: {\r\n    position: \"relative\",\r\n    borderBottom: \"1px solid \" + grayColor[5],\r\n    justifyContent: \"space-between\",\r\n   display: \"flex\",\r\n\r\n  },\r\n  tableActions: {\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n    border: \"none\",\r\n    padding: \"12px 0px !important\",\r\n    verticalAlign: \"middle\",\r\n    alignSelf: \"flex-end\",\r\n    justifyContent: \"flex-end\"\r\n    //width: \"30px\",\r\n  },\r\n  tableAvatar: {\r\n\r\n  },\r\n  tableCell: {\r\n    ...defaultFont,\r\n    padding: \"8px\",\r\n   // verticalAlign: \"middle\",\r\n    margin: \"auto\",\r\n    alignSelf: \"stretch\",\r\n    border: \"none\",//\"1px solid \" + grayColor[5],\r\n    lineHeight: \"1.42857143\",\r\n    fontSize: \"14px\",\r\n    width: \"100%\"\r\n  },\r\n\r\n  tableActionButton: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    padding: \"0\"\r\n  },\r\n\r\n  toolbar: {\r\n    margin: \"0 0 0 0\",\r\n    padding: \"0 0 0 0\",\r\n    minHeight:\"20px\",\r\n    \r\n  },\r\n\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  \r\n  title: {\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    flexGrow: \"1\"\r\n  },\r\n  not_active: {\r\n    backgroundColor: grayColor[3],\r\n    textDecoration: \"line-through\",\r\n  }\r\n  \r\n});\r\nexport default customTableStyle;\r\n","/home/alex/donuts/client/src/components/UserAvatar.jsx",[],"/home/alex/donuts/client/src/components/table/fields/OperationField.jsx",["1324"],"import React, {useContext} from 'react'\r\n\r\nimport CustomTableItemContext from 'components/table/customTableItemContext'\r\nimport OperationText from \"components/OperationText\";\r\nimport OperationContainer from 'containers/OperationContainer';\r\n\r\n\r\nfunction OperationField(props) {\r\n  const item = useContext(CustomTableItemContext)\r\n  const {operation} = item;\r\n  return(\r\n    <OperationContainer operation = {operation} {...props}/>\r\n  )\r\n}\r\n\r\nexport default OperationField","/home/alex/donuts/client/src/assets/jss/components/cardStyle.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/cardBodyStyle.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/cardHeaderStyle.jsx",["1325"],"import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  secondaryCardHeader,\r\n  whiteColor,\r\n  blackColor,\r\n  grayColor\r\n} from \"assets/jss/baseStyles.jsx\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: grayColor[2]\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\"\r\n      }\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\"\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\"\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"5px !important\"\r\n    }\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\"\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\"\r\n    }\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\"\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\"\r\n    }\r\n  },\r\n  warningCardHeader: {\r\n   // color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader\r\n    }\r\n  },\r\n  successCardHeader: {\r\n   // color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader\r\n    }\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader\r\n    }\r\n  },\r\n  infoCardHeader: {\r\n   // color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader\r\n    }\r\n  },\r\n  primaryCardHeader: {\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader\r\n    },\r\n    color: whiteColor,\r\n  },\r\n  secondaryCardHeader: {\r\n   // color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...secondaryCardHeader\r\n    }\r\n  },\r\n  roseCardHeader: {\r\n  //  color: blackColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","/home/alex/donuts/client/src/containers/EventListContainer.jsx",[],"/home/alex/donuts/client/src/containers/DistribAccountContainer.jsx",[],"/home/alex/donuts/client/src/containers/SelfAccountContainer.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/imageLoaderStyle.jsx",["1326","1327","1328","1329"],"import {\r\n    drawerWidth,\r\n    drawerCloseWidth,\r\n    transition,\r\n    container\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n  \r\n  const imageLoaderStyle = theme => ({\r\n    image :{\r\n        display: 'block',\r\n        maxWidth: \"95%\",\r\n        maxHeight: 600,\r\n        margin:'auto',\r\n        padding:0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: 200,\r\n      },\r\n  \r\n    },\r\n    modalImage :{\r\n      display: 'block',\r\n      maxWidth: \"95%\",\r\n      //maxHeight: 400,\r\n      margin:'auto',\r\n      padding:0,\r\n    [theme.breakpoints.up('xs')]: {\r\n      maxHeight: 250,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      maxHeight: 400,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n     // width: 200,\r\n    },\r\n\r\n  },\r\n    caption: {\r\n      textAlign: 'center',\r\n    }\r\n  });\r\n  \r\n  export default imageLoaderStyle;\r\n  ","/home/alex/donuts/client/src/components/forms/common/render.jsx",["1330","1331","1332","1333","1334","1335","1336"],"import React  from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputWithRange from \"components/input/InputWithRange\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Input from '@material-ui/core/Input';\r\nimport AutoDownshift from 'components/downshift/AutoDownshift'\r\nimport { optionalCallExpression, placeholder } from '@babel/types';\r\nimport FormTextField from 'components/FormTextField';\r\nimport {Trans, withTranslation,useTranslation } from 'react-i18next';\r\nimport classNames from \"classnames\";\r\n\r\nexport const renderNumberField = ({\r\n  label,\r\n  input,\r\n  options,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <FormControl className={custom.className}>\r\n  <TextField\r\n    id={label + Math.random().toString()}\r\n    label={label}\r\n    placeholder={label}\r\n    type=\"number\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n    }}\r\n    error={touched && invalid}\r\n    disabled = {options!==undefined ? options.disabled: false}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n  <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>    \r\n  </FormControl>\r\n)\r\n\r\n\r\nexport const renderDateField = ({\r\n  label,\r\n  input,\r\n  options,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    id={label + Math.random().toString()}\r\n    label={label}\r\n    placeholder={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    InputLabelProps={{\r\n      shrink: true,\r\n    }}\r\n    disabled = {options!==undefined ? options.disabled: false}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n)\r\n\r\n\r\n\r\nexport const renderCheckbox =  ({\r\n  label,\r\n  input,\r\n  options,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <div>\r\n    <FormControlLabel className={custom.className}\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}     \r\n          disabled = {options!==undefined ? options.disabled: false}     \r\n        />\r\n      }\r\n      label={label}\r\n     /// classes={{\r\n    //    label: custom.labelClass, // class name, e.g. `classes-nesting-label-x`\r\n      //}}\r\n    />\r\n  </div>\r\n)\r\n\r\n\r\n\r\nexport const renderInputWithRange =  ({\r\n  label,\r\n  input,\r\n  options,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n\r\n  <FormControl className={custom.className}>\r\n      <Input\r\n          id={label + Math.random().toString()}\r\n          label={label}\r\n          error={touched && invalid}\r\n          placeholder ={placeholder}//{label+ ' from ' + custom.min + ' to '+ custom.max}\r\n          value = {input.value}\r\n          onChange ={input.onChange}\r\n          endAdornment={<InputAdornment position=\"end\">{custom.measure}</InputAdornment>}\r\n          disabled = {options!==undefined ? options.disabled: false}\r\n          {...input}\r\n          {...custom}\r\n          inputProps={{\r\n              'aria-label': {label},\r\n          }\r\n\r\n        }\r\n      />\r\n      <FormHelperText id={label+'helper-text'} className={custom.className}> <Trans>{error}</Trans></FormHelperText>\r\n  </FormControl>\r\n)\r\n\r\n\r\nexport const renderDownshift = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  options,\r\n  classes={},\r\n  ...custom\r\n}) =>  (\r\n  <FormControl className={classNames({\r\n      [custom.className]:custom.className,\r\n      [classes.formControl]:classes!==undefined ,\r\n      [classes.downshiftControl]:classes!==undefined\r\n    })}>\r\n  \r\n    <AutoDownshift\r\n      id={label + Math.random()}\r\n      label={label}\r\n      placeholder = {custom.placeholder}\r\n      error={touched && invalid}\r\n      source = {custom.source}\r\n      input = {input}\r\n      options = {options ? options: {}}\r\n      className={custom.className}\r\n    />\r\n    <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>\r\n    \r\n  </FormControl>\r\n  )\r\n","/home/alex/donuts/client/src/containers/OperationContainer.jsx",[],"/home/alex/donuts/client/src/assets/jss/layouts/settingsStyles.jsx",["1337","1338","1339","1340","1341","1342","1343"],"import {\r\n    defaultFont,\r\n    primaryColor,\r\n    blackColor,\r\n    dangerColor,\r\n    grayColor,\r\n    whiteColor,\r\n    hexToRgb\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n  \r\n  const settingStyle = {\r\n \r\n  };\r\n  export default settingStyle;\r\n  ","/home/alex/donuts/client/src/components/ProfileButton.jsx",["1344","1345","1346","1347","1348"],"import React, { useState, useEffect } from 'react';\r\nimport UserAvatar from './UserAvatar';\r\nimport {Button } from '@material-ui/core';\r\nimport profileButtonStyle from 'assets/jss/components/profileButtonStyle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux'\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\n\r\nfunction ProfileButton(props){\r\nconst {classes, profile,onClick} = props; \r\nlet  thumb_url   \r\nif (profile.avatar !==undefined && profile.avatar !== null ){\r\n    thumb_url = profile.avatar.thumb.url \r\n}\r\n\r\nreturn(\r\n    <React.Fragment>\r\n    <Button className={classes.accountButton} onClick={onClick}> \r\n        <UserAvatar className ={classes.smallAvatar} avatar_url={thumb_url} user_name={profile.name}/>\r\n    </Button>\r\n   </React.Fragment>\r\n)\r\n}\r\n\r\nexport default withStyles(profileButtonStyle)(ProfileButton)\r\n\r\n","/home/alex/donuts/client/src/assets/jss/components/eventCardStyle.jsx",["1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361"],"import {\r\n    warningCardHeader,\r\n    successCardHeader,\r\n    dangerCardHeader,\r\n    infoCardHeader,\r\n    primaryCardHeader,\r\n    roseCardHeader,\r\n    secondaryCardHeader,\r\n    whiteColor,\r\n    infoColor,\r\n    successColor,\r\n    dangerColor,\r\n    infoBoxShadow,\r\n    successBoxShadow,\r\n    grayBoxShadow,\r\n    grayColor,\r\n    hexToRgb\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n  \r\n\r\nconst eventCardStyles = theme => ({\r\n    card: {\r\n        margin: \"auto\",\r\n        maxWidth: 700,\r\n\r\n    },\r\n    cardHeader: {\r\n        //...grayBoxShadow,\r\n        paddingBottom: 5,\r\n        marginBottom: 5,\r\n        position: \"relative\",\r\n       // backgroundColor: infoColor[4],\r\n       \"&:after\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n  \r\n        height: \"1px\",\r\n        right: \"15px\",\r\n        width: \"calc(100% - 30px)\",\r\n        backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\r\n      }\r\n    },\r\n    cardPrivate: {\r\n        backgroundColor: infoColor[4],\r\n    },\r\n    liked :{\r\n        color: infoColor[2],\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n    },\r\n    dateCaption: {\r\n        marginLeft: 'auto', \r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n       // marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'white',\r\n        color: infoColor[2],\r\n    },\r\n    avatarPrivate: {\r\n        backgroundColor: infoColor[2],\r\n    },\r\n    bigAvatar: {\r\n        margin: 10,\r\n        width: 60,\r\n        height: 60,\r\n      },\r\n      content: {\r\n        padding: \"0 10px 0 10px\",\r\n       // textAlign: \"right\"\r\n      },\r\n\r\n     smallAvatar: {\r\n        width:28,\r\n        height:28\r\n     },\r\n    \r\n     accountButton: {\r\n        textTransform: 'none' ,\r\n        fontWeight: 400,\r\n        paddingLeft: 0 \r\n     },\r\n     flexLine: {\r\n        flexGrow: 1,\r\n        height: 1,\r\n        marginTop: \"0px\",\r\n        marginBottom: \"0px\",\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n    }, \r\n      \r\n});\r\n export default eventCardStyles","/home/alex/donuts/client/src/components/PurchaseButton.jsx",["1362","1363"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Trans } from \"react-i18next\";\r\nimport Button from '@material-ui/core/Button';\r\nconst styles = theme => ({\r\n    smallButton: {\r\n        fontSize: \"smaller\",\r\n        height: 20,\r\n        marginTop: 5\r\n    },\r\n\r\n});\r\n\r\nfunction PurchaseButton(props){\r\n    const {classes, onClick} = props; \r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Button variant=\"outlined\" color=\"secondary\" className={classes.smallButton} onClick={onClick}>\r\n                    <Trans>Purchase</Trans>\r\n            </Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PurchaseButton);\r\n\r\n","/home/alex/donuts/client/src/assets/jss/components/dashboardStyle.jsx",[],"/home/alex/donuts/client/src/components/table/CustomTable.jsx",["1364","1365","1366"],"import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport customTableStyle from \"assets/jss/components/customTableStyle.jsx\";\r\nimport { useTranslation} from \"react-i18next\";\r\nimport classNames from \"classnames\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport UserAvatar from 'components/UserAvatar';\r\n\r\nimport { CustomTableItemProvider } from './customTableItemContext'\r\n\r\nfunction  RowAction(props)  {\r\n  const {item, action, classes} = props\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const click = () =>{\r\n      action.onClick(item)\r\n  }\r\n  return <Tooltip key={item.id + '_' + action.id} id={action.id} title={t(action.label)} placement=\"top\" classes={{ tooltip: classes.tooltip }} onClick={click}>\r\n    <IconButton aria-label={action.label} className={classes.tableActionButton}>\r\n      {action.icon}\r\n    </IconButton>\r\n  </Tooltip>;}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CustomTable extends React.Component {\r\n  state = {\r\n    checked: []\r\n  };\r\n\r\n  handleToggle = item => () => {\r\n    const { checked } = this.state;\r\n    const currentIndex = checked.indexOf(item);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(item);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked\r\n    });\r\n  };\r\n\r\n  handleRowClick(item) {\r\n      if (this.props.rowClick !==undefined){\r\n        this.props.rowClick(item)\r\n      }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { classes, items,actions,checkable} = this.props;\r\n    const tableCellClasses = classes.tableCell;\r\n    const tableRowAvatar = classes.tableAvatar\r\n    return (\r\n      <React.Fragment>\r\n            <Table className={classes.table}>\r\n              <TableBody>\r\n                {items.map(item => (\r\n                  <TableRow key={item.id} className={classNames({\r\n                    [classes.tableRow]: true,\r\n                    [classes.not_active]: item.active ==false,    \r\n                  })}>\r\n                    {checkable && <TableCell className={tableCellClasses}>\r\n                      <Checkbox\r\n                        checked={this.state.checked.indexOf(item) !== -1}\r\n                        tabIndex={-1}\r\n                        onClick={this.handleToggle(item)}\r\n                        checkedIcon={<Check className={classes.checkedIcon} />}\r\n                        icon={<Check className={classes.uncheckedIcon} />}\r\n                        classes={{\r\n                          checked: classes.checked,\r\n                          root: classes.root\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                   }\r\n                   {item.avatar !==undefined && <TableCell key={item.id+'_avatar'} className={tableRowAvatar}>\r\n                          <UserAvatar  avatar_url={item.avatar.thumb.url} onClick ={this.handleRowClick.bind(this,item)} />\r\n                    </TableCell>\r\n                   }\r\n                  {this.props.children !==undefined && <TableCell key={item.id+'component'}className={tableCellClasses}>\r\n                   <CustomTableItemProvider value={item}>\r\n                       {this.props.children}\r\n                  </CustomTableItemProvider>\r\n                   </TableCell>\r\n                   }\r\n                   {item.values.map((value,index)=>(\r\n                     <TableCell key={item.id+'_'+index} className={tableCellClasses}>\r\n                          <Button className={classes.button}  onClick ={this.handleRowClick.bind(this,item)}>{value}</Button>\r\n                     </TableCell>\r\n                   ))}\r\n\r\n                    <TableCell className={classes.tableActions}>\r\n\r\n                        {actions.map(action=>(\r\n                          <RowAction item={item} action={action} classes={classes} key={action.id}/>\r\n                        ))}\r\n\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  checkable: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(customTableStyle)(CustomTable);\r\n\r\n","/home/alex/donuts/client/src/containers/EventCardContainer.jsx",["1367","1368"],"import {connect} from 'react-redux'\r\nimport EventCard from 'components/EventCard'\r\nimport {likeEvent,commentItem,loadEventWithComments} from \"actions/eventActions\";\r\nimport * as modalActions from \"actions/modal/modalActions\"\r\nimport * as modals from 'modals/modalList'\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps) => {\r\n    return {\r\n        onProfileClick: (post) => {\r\n            dispatch(modalActions.showModal(modals.PROFILE_PREVIEW, {\r\n                user_name: post.user_name,\r\n                position: post.position,\r\n                user_avatar: post.user_avatar,\r\n                disabled:true}))\r\n         },\r\n        onLikeEvent: (event) => {\r\n           dispatch(likeEvent(event))\r\n           if (ownProps.notModal == true){\r\n               dispatch(loadEventWithComments(event.id,))   \r\n           }\r\n        },\r\n        onShowEventModal: (event) =>{\r\n            dispatch(modalActions.showModal(modals.EVENT, {event: event}))\r\n        },\r\n        onComment: (event, comment) => {\r\n            dispatch(commentItem(event,comment))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state,ownProps) => {\r\n    return {\r\n        post: ownProps.post,\r\n        commentable: ownProps.notModal === undefined || ownProps.notModal==false,      \r\n        likeable:true\r\n    }\r\n}\r\n\r\nconst EventCardContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EventCard)\r\n\r\n\r\nexport default  EventCardContainer\r\n","/home/alex/donuts/client/src/assets/jss/checkBoxAndRadioStyle.jsx",[],"/home/alex/donuts/client/src/components/forms/register/RegisterForm.jsx",["1369","1370","1371","1372","1373"],"import React, {Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport asyncValidate from './asyncValidate'\r\nimport registerFormStyle from 'assets/jss/components/registerFormStyle'\r\nimport {renderTextField} from 'components/forms/common/text'\r\n\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\nconst FORM_NAME ='RegisterForm'\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'first_name',\r\n    'last_name',\r\n    'email',\r\n    'password'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  return errors\r\n}\r\n\r\n\r\n\r\n\r\nconst radioButton = ({ input, ...rest }) => (\r\n  <FormControl>\r\n    <RadioGroup {...input} {...rest}>\r\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n    </RadioGroup>\r\n  </FormControl>\r\n)\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RegisterForm extends  Component {\r\n\r\n\r\n      onReset() {\r\n         this.props.onReset()\r\n         this.props.reset()\r\n      }\r\n      render() {\r\n          const { handleSubmit, pristine,  submitting, classes, authenticate } = this.props\r\n          if(authenticate.registered && !authenticate.confirmed) {\r\n              return (\r\n                  <div>\r\n                      <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                          <Trans>Confirmation email was sent to</Trans> {authenticate.email}\r\n                      </Typography>\r\n                  </div>\r\n              )\r\n          }else {\r\n          return (\r\n          <form onSubmit={handleSubmit}  className={classes.container}>\r\n            <div>\r\n              <Field\r\n                name=\"first_name\"\r\n                component={renderTextField}\r\n                label=\"First Name\"\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Field name=\"last_name\" component={renderTextField} label=\"Last Name\" className={classes.textField}/>\r\n            </div>\r\n            <div>\r\n              <Field name=\"email\" component={renderTextField} label=\"Email\" className={classes.textField}/>\r\n            </div>\r\n \r\n            <div>\r\n              <Field\r\n                name=\"password\"\r\n                component={renderTextField}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <br/>\r\n              <Button type=\"submit\" disabled={pristine || submitting} className={classes.button} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n              <Button type=\"button\" disabled={pristine || submitting} onClick={this.onReset.bind(this)} className={classes.button}>\r\n                Clear Values\r\n              </Button>\r\n\r\n          </form>\r\n          )}\r\n    }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nRegisterForm =  reduxForm({\r\n  form: FORM_NAME, // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(RegisterForm)\r\n\r\nexport default withStyles(registerFormStyle)(withTranslation()(RegisterForm))\r\n","/home/alex/donuts/client/src/assets/jss/components/leaderBoardStyle.jsx",["1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386"],"import {\r\n    drawerWidth,\r\n    drawerCloseWidth,\r\n    transition,\r\n    boxShadow,\r\n    defaultFont,\r\n    primaryColor,\r\n    primaryBoxShadow,\r\n    defaultBoxShadow,\r\n    grayColor,\r\n    infoColor,\r\n    successColor,\r\n    warningColor,\r\n    dangerColor\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n\r\nconst leaderBoardStyle = theme => ({\r\n    container: {\r\n        display: 'block',\r\n        height: \"100%\"\r\n    },\r\n\r\n});\r\n\r\nexport default leaderBoardStyle;\r\n","/home/alex/donuts/client/src/components/table/customTableItemContext.jsx",[],"/home/alex/donuts/client/src/components/forms/DynamicForm.jsx",["1387","1388","1389"],"import React, {Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { reduxForm } from 'redux-form'\nimport formStyle from 'assets/jss/components/formStyle'\nimport { withTranslation, Trans} from \"react-i18next\";\nimport SimpleFieldForm from \"components/forms/SimpleFieldForm\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from \"classnames\";\n\n\nclass DynamicForm extends  Component {\n    render() {\n         const { classes,t,submitCaption,fields,formId,cancelable,cancelCaption,color, detachedSubmit} = this.props;\n         const min = 1;\n         const max = 10000;\n         const rand = min + Math.random() * (max - min);\n\n         const form = reduxForm({\n             form: formId,\n             enableReinitialize: true, \n         })(SimpleFieldForm)\n         const DForm = form\n\n         const okButtonClass = classNames({\n            [classes.button]: true,\n            [classes.okButton]: cancelable,\n            [classes[color + \"Button\"]]: color,\n            \n          });\n    \n          const cancelButtonClass = classNames({\n            [classes.button]: true,\n            [classes.cancelButton]: true,    \n          });\n         \n         return (\n                <div>\n                    <DForm {...this.props} />\n                    {detachedSubmit && <div>\n                            {cancelable && <Button className={cancelButtonClass}  onClick = {this.props.onCancel}>\n                            <Trans>{cancelCaption? cancelCaption :\"Close\"}</Trans>\n                            </Button>\n                            }\n\n                                    \n                        <Button\n                                type=\"submit\"\n                                className={okButtonClass}                           \n                                \n                            >\n                                <Trans>{submitCaption}</Trans>\n                            </Button>   \n                        </div>\n                    }\n                </div>\n                )\n            \n    }\n\n}\n\nDynamicForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    fields: PropTypes.array.isRequired,\n    submitCaption: PropTypes.string.isRequired,\n    formId: PropTypes.string.isRequired\n}\n\n\nexport default withStyles(formStyle)(withTranslation()(DynamicForm))\n","/home/alex/donuts/client/src/components/EventList.jsx",["1390","1391","1392"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport EventCard from 'components/EventCard'\r\nimport ProgressContainer from \"containers/ProgressContainer\";\r\nimport EventCardContainer from 'containers/EventCardContainer';\r\nimport EventsFilter from './EventsFilter';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport eventsFilterStyle from 'assets/jss/components/eventsFilterStyle';\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\nimport eventsListStyle from 'assets/jss/components/eventsListStyle';\r\n\r\nclass  EventList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            filter: {\r\n                showMine: false\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      //this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\r\n      if (this.props.events.page == 0)this.props.loadEvents(this.props.events.page+1)\r\n    }\r\n    componentWillUnmount() {\r\n     // clearInterval(this.interval);\r\n    }\r\n\r\n    filter(filter) {\r\n        this.setState({filter: {...filter}})\r\n        this.props.reloadEvents(filter)        \r\n    }\r\n    loadMore = () => {\r\n        this.props.loadEvents(this.props.events.page+1,this.state.filter)\r\n    }\r\n\r\n    render() {\r\n        const {events,classes} = this.props\r\n        let items = events.items\r\n        return (\r\n            <React.Fragment>\r\n                <EventsFilter onFilter={this.filter.bind(this)}/>\r\n                <GridContainer>\r\n                    <ProgressContainer/>                    \r\n                    {items!==undefined && items.map((post,index) =>(\r\n                        <GridItem xs={12} sm={12} md={6} key = {index}>\r\n                            <EventCardContainer  post = {post}/>\r\n                        </GridItem>\r\n                        )\r\n                    )}\r\n\r\n                </GridContainer>\r\n                \r\n                <DialogActions>\r\n                    {(events.page+1)*events.per_page<events.total&& <Button  className = {classes.button} onClick={this.loadMore} color=\"primary\" >\r\n                        <Trans>More</Trans>\r\n                     </Button>}\r\n                     </DialogActions>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEventList.props = {\r\n    reloadEvents: PropTypes.func.isRequired,\r\n    loadEvents: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default withStyles(eventsListStyle)(withTranslation(\"translations\")(EventList));","/home/alex/donuts/client/src/components/AccountBalance.jsx",["1393"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {card} from 'assets/jss/baseStyles'\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport classNames from 'classnames';\r\nimport { withTranslation} from \"react-i18next\";\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        ...card,\r\n       minWidth: \"275px\",\r\n       margin:5,\r\n    },\r\n    content: {\r\n        paddingBottom: 3,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 3,\r\n        fontSize: 13,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    iconSmall: {\r\n        fontSize: 20,\r\n    },\r\n});\r\n\r\nclass  AccountBalance extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes, title,  lastOperation, balance,shareable,shopable,t,profile } = this.props;\r\n        let lastAmountName=\"\";\r\n        if (lastOperation !==undefined && lastOperation !==null){\r\n            if (shareable){\r\n                lastAmountName = t('donut', {count: lastOperation.amount})\r\n            }else{\r\n                lastAmountName = t('point', {count: lastOperation.amount})\r\n            }\r\n        }\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {t(title)}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        {balance} {shareable && t('donut', {count: balance})}{shopable && t('point', {count: balance})}\r\n                        </Typography>\r\n                    <Button>\r\n                        {lastOperation !==undefined && lastOperation !==null && \r\n                        <Typography className={classes.pos} color=\"textSecondary\" onClick={this.props.onHistory.bind(this,profile)}>\r\n                            {lastOperation.direction}{lastOperation.amount}  {lastAmountName}  {lastOperation.date}\r\n                        </Typography>\r\n                        }\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions>\r\n                    {balance>0 && shareable &&<Button size=\"small\" color=\"primary\" onClick={this.props.onShare}>\r\n                        {t(\"Share\")}\r\n                        <CakeIcon className={classNames(classes.rightIcon, classes.iconSmall)} />\r\n                    </Button>}\r\n                    {balance>0 && shopable &&<Button size=\"small\" color=\"primary\" onClick={this.props.onRedirectToStore}>\r\n                        {t(\"Go to shop\")}\r\n                        <LocalMallIcon className={classNames(classes.rightIcon, classes.iconSmall)} />\r\n                    </Button>}\r\n                </CardActions>\r\n            </Card>\r\n         );\r\n    }\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    getBalance: PropTypes.func.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    balance: PropTypes.number.isRequired,\r\n    shareable: PropTypes.bool.isRequired,\r\n    shopable: PropTypes.bool.isRequired,\r\n    lastUpdate: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles)(withTranslation()(AccountBalance));\r\n","/home/alex/donuts/client/src/components/FormTextField.jsx",[],"/home/alex/donuts/client/src/components/forms/register/asyncValidate.jsx",["1394"],"import AuthenticateApi from 'api/authenticateApi'\n\n\nconst asyncValidate = (values /*, dispatch */) => {\n    return AuthenticateApi.validateEmail(values.email).then((response) => {\n        if (!response.valid) {\n            throw { email: 'That email is taken' };\n        }\n    });\n};\nexport default asyncValidate;\n","/home/alex/donuts/client/src/assets/jss/components/profileButtonStyle.jsx",[],"/home/alex/donuts/client/src/components/downshift/AutoDownshift.jsx",["1395","1396"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from './Input'\r\nimport Suggestion from './Suggestion'\r\n\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n        margin: 0\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(2),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputInput: {\r\n        width: 'auto',\r\n        flexGrow: 1,\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n});\r\n\r\n\r\nfunction getSuggestions(value, source) {\r\n    if (value === undefined || !value || source==undefined) {return []}\r\n\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n        ? []\r\n        : source.filter(suggestion => {\r\n            const keep =\r\n                count < 5 &&  suggestion.name.toLowerCase().includes(inputValue);\r\n\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        });\r\n}\r\n\r\nconst itemToString = item => (item ? item.name : \"\");\r\n\r\nfunction callAllEventHandlers(...fns) {\r\n  return (event, ...args) =>\r\n    fns.some(fn => {\r\n      if (fn) {\r\n        fn(event, ...args)\r\n      }\r\n      return (\r\n        event.preventDownshiftDefault ||\r\n        (event.hasOwnProperty('nativeEvent') &&\r\n          event.nativeEvent.preventDownshiftDefault)\r\n      )\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction AutoDownshift(props) {\r\n    const {classes, placeholder,source,  input,touched, invalid, error,className,options } = props;\r\n//getInputProps({placeholder: placeholder, touched, invalid, error, onFocus: input.onFocus, onBlur: input.onBlur})\r\n   console.log(props)\r\n    return (\r\n        <React.Fragment>\r\n                <Downshift\r\n                           itemToString={itemToString}\r\n                           onChange={selectedItem => {input.onChange(selectedItem)}}\r\n                           selectedItem = {options!==undefined ? options.initialValue :undefined}\r\n                           initialSelectedItem =  {options!==undefined ? options.initialValue :undefined}\r\n                >\r\n                    {({\r\n                          getInputProps,\r\n                          getItemProps,\r\n                          getMenuProps,\r\n                          highlightedIndex,\r\n                          inputValue,\r\n                          isOpen,\r\n                          selectedItem\r\n                      }) => (\r\n                        <div>\r\n                            <Input\r\n                                fullWidth={true}\r\n                                className={className}\r\n                                classes = {classes}\r\n                                options = {options}\r\n                                //{...getInputProps({placeholder: placeholder})}\r\n                                InputProps ={getInputProps({placeholder: placeholder, touched, invalid, error, onFocus: input.onFocus,\r\n                                  name: input.name,\r\n\r\n                                   })}\r\n                            />\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square elevation={2} >\r\n                                        {getSuggestions(inputValue, source).map((suggestion, index) =>\r\n                                            <Suggestion\r\n                                                key = {suggestion.id}\r\n                                                suggestion = {suggestion}\r\n                                                index = {index}\r\n                                                itemProps = {getItemProps({ item: suggestion })}\r\n                                                highlightedIndex={highlightedIndex}\r\n                                                selectedItem = {selectedItem}\r\n                                            />\r\n                                        )}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Downshift>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nAutoDownshift.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    source: PropTypes.array\r\n}\r\n\r\nexport default withStyles(styles)(AutoDownshift)\r\n","/home/alex/donuts/client/src/components/input/InputWithRange.jsx",[],"/home/alex/donuts/client/src/components/forms/SimpleFieldForm.jsx",["1397","1398","1399"],"import React, {Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport formStyle from 'assets/jss/components/formStyle'\r\nimport {renderDownshift,renderInputWithRange, renderCheckbox} from 'components/forms/common/render'\r\nimport {renderRadio} from 'components/forms/common/radio'\r\nimport {renderTextField} from 'components/forms/common/text'\r\nimport { withTranslation, Trans} from \"react-i18next\";\r\nimport GridItem from \"components/grid/GridItem.jsx\";\r\nimport GridContainer from \"components/grid/GridContainer.jsx\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nclass SimpleFieldForm extends  Component {\r\n\r\n    field_xs(field){\r\n        return field.xs ? field.xs : 12\r\n    }\r\n\r\n    field_sm(field){\r\n        return field.sm ?field.sm:this.field_xs(field)\r\n    }\r\n\r\n    field_md(field){\r\n        return field.md ?field.md:this.field_sm(field)\r\n    }\r\n\r\n    field_lg(field){\r\n        return field.lg ?field.lg:this.field_md(field)\r\n    }\r\n\r\n    field_class(field,classes){\r\n        return  classNames({\r\n            [classes.textField]:true,\r\n            [classes[field.size + \"Field\"]]: field.size,\r\n        })    \r\n\r\n    }\r\n\r\n    getComponent() {\r\n        //todo: render checkbox\r\n    }\r\n\r\n    render() {\r\n         const { classes,t,\r\n            submitCaption,fields,columns,\r\n            formId,\r\n            color,\r\n            cancelCaption,\r\n            cancelable,\r\n            detachedSubmit,\r\n            initialValues,\r\n            hasInitial\r\n        } = this.props;\r\n\r\n         const okButtonClass = classNames({\r\n            [classes.button]: true,\r\n            [classes.okButton]: cancelable,\r\n            [classes[color + \"Button\"]]: color,\r\n            \r\n          });\r\n    \r\n          const cancelButtonClass = classNames({\r\n            [classes.button]: true,\r\n            [classes.cancelButton]: true,    \r\n          });\r\n        \r\n        if (columns!==undefined) {\r\n            \r\n        }\r\n        return (\r\n                <form onSubmit={this.props.handleSubmit} className={classes.container}>\r\n                  <GridContainer>\r\n                        <GridItem xs={12} className={classes.gridItem}>\r\n                        <GridContainer>\r\n                        {fields.map(field=>(         \r\n                        <GridItem   key={field.name.concat(\"_key\")} \r\n                                xs={this.field_xs(field)} \r\n                                sm={this.field_sm(field)}\r\n                                md={this.field_md(field)} \r\n                                lg={this.field_lg(field)}\r\n                                className = {classNames({\r\n                                    [classes.gridItem]:true,\r\n                                    [classes.downshiftControl]:field.source\r\n                                })}\r\n                            >\r\n                            {field.image && initialValues[field.name]!==undefined && \r\n                                <img className={classes.image} src={initialValues[field.name].url} alt=\"not found\"/>\r\n                            }\r\n                            {!field.image && \r\n                                this.renderField(field, formId, t, classes, hasInitial, initialValues)\r\n                            }\r\n                            </GridItem>     \r\n                            \r\n                        ))}\r\n                        </GridContainer>             \r\n                        </GridItem>\r\n                        <GridItem xs={12}>\r\n                                {!detachedSubmit && <div>\r\n                            {cancelable && <Button className={cancelButtonClass}  onClick = {this.props.onCancel}>\r\n                                <Trans>{cancelCaption? cancelCaption :\"Close\"}</Trans>\r\n                                </Button>\r\n                            }\r\n\r\n                                        \r\n                            <Button\r\n                                    type=\"submit\"\r\n                                    className={okButtonClass}                           \r\n                                    \r\n                                >\r\n                                    <Trans>{submitCaption}</Trans>\r\n                            </Button>\r\n                            </div>\r\n                                }\r\n                        </GridItem>\r\n                  </GridContainer>                   \r\n      \r\n                    \r\n\r\n                 </form>\r\n        )\r\n    }\r\n\r\n\r\n    renderField(field, formId, t, classes, hasInitial, initialValues) {\r\n        let component\r\n        let label\r\n        if (field.checkbox){\r\n            component = renderCheckbox\r\n        } else if(field.radio){\r\n            component = renderRadio\r\n        }\r\n        else{\r\n            component = field.source ? renderDownshift : renderTextField\r\n        }   \r\n            \r\n        if (field.hideLabel === true){\r\n            label=\"\"\r\n        }   \r\n        else{\r\n            label=t(field.label ? field.label : field.name)\r\n        }\r\n        return <Field \r\n            name={field.name} \r\n            id={formId.concat(field.name)} \r\n            legend ={field.legend}\r\n            label={label} \r\n            placeholder = {label}\r\n            component={component}             \r\n            autoComplete=\"off\" \r\n            className={this.field_class(field, classes)} \r\n            classes = {classes}\r\n            source={field.source} \r\n           // labelClass = {classes.label}\r\n            options={{\r\n                initialValue: !hasInitial ? undefined : (initialValues[field.name] !== undefined ? initialValues[field.name] : \"\"),\r\n                disabled: field.disabled\r\n                }} \r\n            multiline \r\n            rows={field.rows}/>;\r\n    }\r\n}\r\n\r\nSimpleFieldForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    fields: PropTypes.array.isRequired,\r\n    columns: PropTypes.array,\r\n    submitCaption: PropTypes.string.isRequired,\r\n    formId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default withStyles(formStyle)(withTranslation()(SimpleFieldForm))\r\n","/home/alex/donuts/client/src/assets/jss/components/headerStyle.jsx",[],"/home/alex/donuts/client/src/containers/menu/AccountMenuContainer.jsx",["1400"],"import {connect} from 'react-redux'\nimport AccountMenu from \"components/menu/AccountMenu\";\nimport {authenticate,logout,checkAuth}  from 'actions/authActions'\nimport {push } from 'connected-react-router'\nimport { stat } from 'fs';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (username,password) => {\n            dispatch(authenticate(username,password))\n        },\n        onLogOut: () => {\n            dispatch(logout())\n        },\n        onCheckAuth: () => {\n            dispatch(checkAuth())\n        },\n        onLoginRedirect: () => {\n            dispatch(push('/login'))\n        },\n        onRegisterRedirect: () => {\n            dispatch(push('/register'))\n        },\n        onAccount: () => {\n            dispatch(push('/account'))\n        }\n    }\n}\n\n\nconst  mapStateToProps = (state,ownProps) => {\n    return {\n        authenticate: state.authenticate,\n        location: ownProps.location,\n        profile: state.profile\n    }\n}\n\nconst accountMenuStyle = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountMenu)\n\n\nexport default  accountMenuStyle\n","/home/alex/donuts/client/src/components/EventsFilter.jsx",["1401","1402","1403"],"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport eventsFilterStyle from 'assets/jss/components/eventsFilterStyle';\nimport { withTranslation, Trans, useTranslation } from \"react-i18next\";\nimport { withStyles } from '@material-ui/core/styles';\nimport GridContainer from './grid/GridContainer';\nimport GridItem from './grid/GridItem';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nclass EventsFilter extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            showMine: false\n        }\n    }\n\n\n\n     handleChange = name =>event => {\n        this.setState({ ...this.state, [name]: event.target.checked }, () =>{\n            this.props.onFilter(this.state)\n        })\n    };\n\n\n    render(){\n        const {t} = this.props\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm ={6} md={4} lg ={3}>\n                    <FormGroup row>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                checked={this.state.showMine}\n                                onChange={this.handleChange('showMine')}\n                                value=\"showMine\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            }\n                            label={t(\"Show only mine\")}\n                        />\n                    </FormGroup>\n\n                </GridItem>\n            </GridContainer>\n        )\n    }\n    \n}\n\n\nexport default withStyles(eventsFilterStyle)(withTranslation()(EventsFilter))","/home/alex/donuts/client/src/components/downshift/Suggestion.jsx",[],"/home/alex/donuts/client/src/components/downshift/Input.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/eventsListStyle.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/eventsFilterStyle.jsx",["1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419"],"import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    secondaryCardHeader,\n    whiteColor,\n    infoColor,\n    successColor,\n    dangerColor,\n    infoBoxShadow,\n    successBoxShadow,\n    grayBoxShadow,\n    grayColor,\n    hexToRgb\n  } from \"assets/jss/baseStyles.jsx\";\n  \n\nconst eventsFilterStyle = theme => ({\n   \n      \n});\n export default eventsFilterStyle","/home/alex/donuts/client/src/components/forms/common/radio.jsx",["1420","1421"],"import React  from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {Trans, withTranslation,useTranslation } from 'react-i18next';\r\nimport classNames from \"classnames\";\r\n\r\nimport radiGroupStyle from 'assets/jss/components/radioGroupStyle';\r\n\r\nconst useStyles = makeStyles(radiGroupStyle)\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const renderRadio =  ({\r\n    label,\r\n    id,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    options,\r\n    classes={},\r\n    ...custom\r\n  }) =>  (\r\n    <FormControl className={classNames({\r\n        [custom.className]:custom.className,\r\n      })}>\r\n     <FormLabel component=\"legend\">{label}</FormLabel>\r\n     <RadioGroup aria-label={\"quiz\"+id} name=\"quiz\" value={custom.value}  onChange={input.onChange}    >\r\n        {custom.source.map(item =>{\r\n            return <FormControlLabel key={id+'/'+item.value} value={item.value} control={<StyledRadio />} label={item.text} disabled={item.disabled}/>\r\n        })}           \r\n      </RadioGroup>\r\n      <FormHelperText id={label+'helper-text'} className={custom.className}><Trans>{error}</Trans></FormHelperText>\r\n      \r\n    </FormControl>\r\n  )","/home/alex/donuts/client/src/components/menu/AccountMenu.jsx",["1422","1423","1424","1425","1426","1427"],"import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Exit from \"@material-ui/icons/ExitToApp\";\r\nimport Menu  from '@material-ui/core/Menu';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport UserAvatar from 'react-user-avatar'\r\nimport appRoutes from \"routes/appRoutes.jsx\";\r\nimport menuStyle from \"assets/jss/components/accountMenuStyle.jsx\";\r\nimport MenuLinks from \"components/MenuLinks\";\r\nimport { withTranslation, Trans } from \"react-i18next\";\r\n\r\n\r\nconst WrappedLinks = React.forwardRef((props, ref) => <MenuLinks forwardedRef={ref} {...props} />)\r\n\r\nclass AccountMenu extends React.Component {\r\n    state = {\r\n        auth: true,\r\n        anchorEl: null,\r\n    };\r\n\r\n    handleChange = (event, checked) => {\r\n        this.setState({ auth: checked });\r\n    };\r\n\r\n    handleMenu = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.setState({ anchorEl: null });\r\n        this.props.onLogOut()\r\n    }\r\n\r\n    handleLogIn = () => {\r\n        this.setState({ anchorEl: null });\r\n        this.props.onLoginRedirect()\r\n    }\r\n    handleRegister = () => {\r\n        this.setState({ anchorEl: null });\r\n        this.props.onRegisterRedirect()\r\n    }\r\n\r\n    handleAccount =() => {\r\n        this.setState({ anchorEl: null });\r\n        this.props.onAccount()\r\n    }\r\n\r\n    render() {\r\n        const { classes,profile } = this.props;\r\n        const {anchorEl } = this.state;\r\n        console.log(\"Account menu\");\r\n        console.log(this.props);\r\n        let auth = this.props.authenticate.authenticated;\r\n        const open = Boolean(anchorEl);\r\n        let avatar_url = null\r\n        if (profile.user_avatar !== undefined && profile.user_avatar !==null){\r\n            avatar_url = profile.user_avatar.thumb.url\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <IconButton\r\n                    aria-owns={open ? 'menu-account' : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleMenu}\r\n                    color=\"inherit\"\r\n                >\r\n                                      \r\n                    {avatar_url!==undefined && avatar_url!==null && <UserAvatar size=\"30\" name={profile.name} src={avatar_url} />}\r\n                    {!avatar_url && <AccountCircle />}\r\n                </IconButton>\r\n              \r\n                    <Menu\r\n                        id=\"menu-account\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open}\r\n                        onClose={this.handleClose}\r\n                        onClick={this.handleClose}\r\n                    >\r\n                        {!auth && (<MenuItem onClick={this.handleLogIn}>Log In</MenuItem>)}\r\n                        {!auth && (<MenuItem onClick={this.handleRegister}>Registration</MenuItem>)}\r\n                         <WrappedLinks profile={profile} routes={appRoutes} location={this.props.location}/>\r\n                        {auth && (<MenuItem onClick={this.handleLogOut}> <Exit></Exit> <Trans>Log Out</Trans></MenuItem>)}\r\n                    </Menu>\r\n      \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAccountMenu.propTypes = {\r\n    onLoginRedirect: PropTypes.func.isRequired,\r\n    onLogOut: PropTypes.func.isRequired,\r\n    onAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(menuStyle)(AccountMenu);\r\n","/home/alex/donuts/client/src/assets/jss/components/accountMenuStyle.jsx",[],"/home/alex/donuts/client/src/assets/jss/components/radioGroupStyle.jsx",["1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441"],"import {\r\n    drawerWidth,\r\n    drawerCloseWidth,\r\n    transition,\r\n    boxShadow,\r\n    defaultFont,\r\n    primaryColor,\r\n    primaryBoxShadow,\r\n    defaultBoxShadow,\r\n    grayColor,\r\n    infoColor,\r\n    successColor,\r\n    warningColor,\r\n    dangerColor,\r\n    whiteColor,\r\n    hexToRgb\r\n  } from \"assets/jss/baseStyles.jsx\";\r\n\r\n\r\n const radioGroupStyle = theme => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: '50%',\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: successColor[0],\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: successColor[4],\r\n    },\r\n  }\r\n});\r\nexport default radioGroupStyle;",{"ruleId":"1442","replacedBy":"1443"},{"ruleId":"1444","replacedBy":"1445"},{"ruleId":"1446","severity":1,"message":"1447","line":1,"column":39,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":46},{"ruleId":"1446","severity":1,"message":"1450","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1451","line":38,"column":7,"nodeType":"1448","messageId":"1449","endLine":38,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1452","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1453","line":1,"column":9,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1454","line":1,"column":15,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1455","line":7,"column":7,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1456","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1458","line":278,"column":10,"nodeType":"1448","messageId":"1449","endLine":278,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1459","line":286,"column":10,"nodeType":"1448","messageId":"1449","endLine":286,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1460","line":2,"column":13,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1464","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1465","line":4,"column":11,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1466","line":5,"column":21,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":39},{"ruleId":"1446","severity":1,"message":"1467","line":5,"column":40,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":55},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1464","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1465","line":8,"column":11,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1468","line":1,"column":10,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":27},{"ruleId":"1469","severity":1,"message":"1470","line":27,"column":11,"nodeType":"1448","messageId":"1471","endLine":27,"endColumn":20},{"ruleId":"1472","severity":1,"message":"1473","line":23,"column":10,"nodeType":"1474","messageId":"1475","endLine":23,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1457","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1476","line":5,"column":13,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1477","line":6,"column":13,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":19},{"ruleId":"1478","severity":1,"message":"1479","line":40,"column":33,"nodeType":"1480","messageId":"1481","endLine":40,"endColumn":35},{"ruleId":"1478","severity":1,"message":"1479","line":40,"column":50,"nodeType":"1480","messageId":"1481","endLine":40,"endColumn":52},{"ruleId":"1446","severity":1,"message":"1482","line":2,"column":18,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1482","line":2,"column":18,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1483","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1484","line":13,"column":9,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1485","line":14,"column":9,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1486","line":14,"column":22,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1487","line":14,"column":29,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":38},{"ruleId":"1446","severity":1,"message":"1488","line":15,"column":9,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1489","line":23,"column":10,"nodeType":"1448","messageId":"1449","endLine":23,"endColumn":19},{"ruleId":"1490","severity":1,"message":"1491","line":41,"column":32,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":34},{"ruleId":"1490","severity":1,"message":"1491","line":54,"column":36,"nodeType":"1492","messageId":"1493","endLine":54,"endColumn":38},{"ruleId":"1446","severity":1,"message":"1494","line":95,"column":15,"nodeType":"1448","messageId":"1449","endLine":95,"endColumn":17},{"ruleId":"1478","severity":1,"message":"1479","line":27,"column":32,"nodeType":"1480","messageId":"1481","endLine":27,"endColumn":34},{"ruleId":"1478","severity":1,"message":"1479","line":27,"column":77,"nodeType":"1480","messageId":"1481","endLine":27,"endColumn":79},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1453","line":2,"column":9,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1482","line":2,"column":18,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1496","line":2,"column":22,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1495","line":2,"column":26,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":2,"column":18,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1496","line":2,"column":22,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1495","line":2,"column":26,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1497","line":4,"column":7,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1498","line":5,"column":7,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1499","line":6,"column":7,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":2,"column":18,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1496","line":2,"column":22,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1495","line":2,"column":26,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1500","line":21,"column":9,"nodeType":"1448","messageId":"1449","endLine":21,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1461","line":25,"column":8,"nodeType":"1448","messageId":"1449","endLine":25,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":3,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1466","line":2,"column":21,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":39},{"ruleId":"1446","severity":1,"message":"1467","line":2,"column":40,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":55},{"ruleId":"1446","severity":1,"message":"1502","line":6,"column":26,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":40},{"ruleId":"1446","severity":1,"message":"1503","line":45,"column":40,"nodeType":"1448","messageId":"1449","endLine":45,"endColumn":44},{"ruleId":"1446","severity":1,"message":"1485","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1504","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1505","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1506","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1507","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1508","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1509","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1510","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1511","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1512","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1513","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1514","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1515","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1516","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1517","line":84,"column":16,"nodeType":"1448","messageId":"1449","endLine":84,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1518","line":84,"column":25,"nodeType":"1448","messageId":"1449","endLine":84,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1456","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1519","line":11,"column":9,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1520","line":13,"column":10,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1521","line":13,"column":25,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1522","line":14,"column":10,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1523","line":18,"column":17,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1517","line":92,"column":16,"nodeType":"1448","messageId":"1449","endLine":92,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1456","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1516","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1524","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1525","line":4,"column":20,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1526","line":4,"column":30,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":40},{"ruleId":"1446","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1528","line":6,"column":13,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1477","line":7,"column":13,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1529","line":9,"column":13,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1530","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1519","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1531","line":3,"column":19,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1532","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1533","line":10,"column":10,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1534","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1535","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1536","line":14,"column":10,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1522","line":14,"column":27,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1537","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1538","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1539","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1540","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1464","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1541","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1542","line":15,"column":8,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1543","line":16,"column":8,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1544","line":17,"column":8,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1545","line":18,"column":8,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1546","line":20,"column":8,"nodeType":"1448","messageId":"1449","endLine":20,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1547","line":21,"column":10,"nodeType":"1448","messageId":"1449","endLine":21,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1522","line":26,"column":27,"nodeType":"1448","messageId":"1449","endLine":26,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1548","line":54,"column":11,"nodeType":"1448","messageId":"1449","endLine":54,"endColumn":15},{"ruleId":"1549","severity":1,"message":"1550","line":57,"column":11,"nodeType":"1551","endLine":61,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1527","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1552","line":4,"column":10,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1524","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1525","line":3,"column":20,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1526","line":3,"column":30,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":40},{"ruleId":"1446","severity":1,"message":"1527","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1528","line":5,"column":13,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1477","line":6,"column":13,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1529","line":8,"column":13,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":16,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1553","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1554","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1488","line":5,"column":9,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1533","line":12,"column":10,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":16,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1464","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1485","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1522","line":7,"column":27,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1464","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1485","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1530","line":5,"column":9,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1555","line":5,"column":19,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":29},{"ruleId":"1556","severity":1,"message":"1557","line":36,"column":5,"nodeType":"1558","messageId":"1559","endLine":38,"endColumn":6},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1526","line":3,"column":30,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":40},{"ruleId":"1446","severity":1,"message":"1528","line":7,"column":13,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1523","line":6,"column":17,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1560","line":9,"column":13,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":16,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":16,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1561","line":3,"column":21,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1562","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1563","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1564","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1533","line":9,"column":10,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1535","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1521","line":11,"column":10,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1565","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1566","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1567","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1568","line":17,"column":7,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":10},{"ruleId":"1446","severity":1,"message":"1519","line":5,"column":20,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":29},{"ruleId":"1446","severity":1,"message":"1476","line":8,"column":13,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1477","line":9,"column":13,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":19},{"ruleId":"1556","severity":1,"message":"1557","line":46,"column":5,"nodeType":"1558","messageId":"1559","endLine":48,"endColumn":6},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1569","line":6,"column":9,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1462","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1464","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1465","line":5,"column":11,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1461","line":1,"column":8,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1517","line":7,"column":12,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1570","line":7,"column":20,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1571","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1489","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1573","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1574","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1575","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1522","line":8,"column":9,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1519","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1531","line":3,"column":19,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1536","line":15,"column":10,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1576","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1536","line":20,"column":10,"nodeType":"1448","messageId":"1449","endLine":20,"endColumn":25},{"ruleId":"1490","severity":1,"message":"1577","line":29,"column":27,"nodeType":"1492","messageId":"1493","endLine":29,"endColumn":29},{"ruleId":"1490","severity":1,"message":"1577","line":36,"column":27,"nodeType":"1492","messageId":"1493","endLine":36,"endColumn":29},{"ruleId":"1446","severity":1,"message":"1484","line":2,"column":9,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1552","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1561","line":3,"column":21,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1578","line":3,"column":34,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":45},{"ruleId":"1446","severity":1,"message":"1579","line":3,"column":46,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":56},{"ruleId":"1446","severity":1,"message":"1562","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1456","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1563","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1533","line":9,"column":10,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1535","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1521","line":11,"column":10,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1565","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1566","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1567","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1516","line":18,"column":8,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1580","line":26,"column":7,"nodeType":"1448","messageId":"1449","endLine":26,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1581","line":109,"column":24,"nodeType":"1448","messageId":"1449","endLine":109,"endColumn":28},{"ruleId":"1446","severity":1,"message":"1582","line":4,"column":14,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":28},{"ruleId":"1478","severity":1,"message":"1479","line":25,"column":26,"nodeType":"1480","messageId":"1481","endLine":25,"endColumn":28},{"ruleId":"1478","severity":1,"message":"1479","line":25,"column":38,"nodeType":"1480","messageId":"1481","endLine":25,"endColumn":40},{"ruleId":"1446","severity":1,"message":"1456","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1583","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1484","line":8,"column":9,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1520","line":13,"column":10,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1521","line":13,"column":25,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1522","line":14,"column":10,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1584","line":2,"column":10,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1462","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1536","line":11,"column":10,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1522","line":11,"column":27,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1521","line":15,"column":10,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1535","line":16,"column":8,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1538","line":17,"column":8,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1517","line":30,"column":10,"nodeType":"1448","messageId":"1449","endLine":30,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1503","line":32,"column":14,"nodeType":"1448","messageId":"1449","endLine":32,"endColumn":18},{"ruleId":"1585","severity":1,"message":"1586","line":37,"column":5,"nodeType":"1587","endLine":37,"endColumn":7,"suggestions":"1588"},{"ruleId":"1446","severity":1,"message":"1589","line":44,"column":9,"nodeType":"1448","messageId":"1449","endLine":44,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1536","line":7,"column":10,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1536","line":7,"column":10,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1464","line":5,"column":18,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":28},{"ruleId":"1478","severity":1,"message":"1479","line":66,"column":31,"nodeType":"1480","messageId":"1481","endLine":66,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":3,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1590","line":5,"column":3,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1514","line":15,"column":3,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1591","line":1,"column":28,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":38},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1536","line":17,"column":10,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":25},{"ruleId":"1592","severity":1,"message":"1593","line":46,"column":29,"nodeType":"1448","messageId":"1594","endLine":46,"endColumn":34},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1595","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":11},{"ruleId":"1446","severity":1,"message":"1596","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1536","line":20,"column":10,"nodeType":"1448","messageId":"1449","endLine":20,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1576","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1597","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1598","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1599","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1527","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1600","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1601","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1536","line":23,"column":10,"nodeType":"1448","messageId":"1449","endLine":23,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1460","line":1,"column":13,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1576","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1597","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1598","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1599","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1600","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1601","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1536","line":23,"column":10,"nodeType":"1448","messageId":"1449","endLine":23,"endColumn":25},{"ruleId":"1490","severity":1,"message":"1577","line":32,"column":27,"nodeType":"1492","messageId":"1493","endLine":32,"endColumn":29},{"ruleId":"1490","severity":1,"message":"1577","line":39,"column":27,"nodeType":"1492","messageId":"1493","endLine":39,"endColumn":29},{"ruleId":"1446","severity":1,"message":"1484","line":2,"column":9,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1552","line":3,"column":9,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1561","line":3,"column":21,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1578","line":3,"column":34,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":45},{"ruleId":"1446","severity":1,"message":"1579","line":3,"column":46,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":56},{"ruleId":"1446","severity":1,"message":"1562","line":4,"column":9,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1456","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1563","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1533","line":9,"column":10,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1535","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1521","line":11,"column":10,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1565","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1522","line":16,"column":27,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1517","line":81,"column":16,"nodeType":"1448","messageId":"1449","endLine":81,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1602","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1603","line":11,"column":8,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":14},{"ruleId":"1478","severity":1,"message":"1479","line":30,"column":29,"nodeType":"1480","messageId":"1481","endLine":30,"endColumn":31},{"ruleId":"1478","severity":1,"message":"1604","line":59,"column":74,"nodeType":"1480","messageId":"1481","endLine":59,"endColumn":76},{"ruleId":"1605","severity":1,"message":"1606","line":59,"column":117,"nodeType":"1551","endLine":59,"endColumn":171},{"ruleId":"1446","severity":1,"message":"1607","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1538","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1608","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1609","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1610","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1611","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1612","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1537","line":11,"column":8,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1539","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1488","line":16,"column":9,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1536","line":17,"column":10,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":25},{"ruleId":"1605","severity":1,"message":"1606","line":51,"column":9,"nodeType":"1551","endLine":54,"endColumn":11},{"ruleId":"1446","severity":1,"message":"1607","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1613","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1614","line":11,"column":8,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1539","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1464","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1615","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1599","line":16,"column":8,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1598","line":17,"column":8,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1616","line":18,"column":8,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1602","line":19,"column":8,"nodeType":"1448","messageId":"1449","endLine":19,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1617","line":20,"column":10,"nodeType":"1448","messageId":"1449","endLine":20,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1502","line":21,"column":10,"nodeType":"1448","messageId":"1449","endLine":21,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1522","line":21,"column":26,"nodeType":"1448","messageId":"1449","endLine":21,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1463","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1462","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1602","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1618","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1619","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1620","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1514","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1621","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1622","line":35,"column":62,"nodeType":"1448","messageId":"1449","endLine":35,"endColumn":66},{"ruleId":"1446","severity":1,"message":"1522","line":22,"column":27,"nodeType":"1448","messageId":"1449","endLine":22,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1615","line":23,"column":10,"nodeType":"1448","messageId":"1449","endLine":23,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1623","line":25,"column":8,"nodeType":"1448","messageId":"1449","endLine":25,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1624","line":27,"column":8,"nodeType":"1448","messageId":"1449","endLine":27,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1625","line":28,"column":8,"nodeType":"1448","messageId":"1449","endLine":28,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1626","line":29,"column":8,"nodeType":"1448","messageId":"1449","endLine":29,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1627","line":53,"column":15,"nodeType":"1448","messageId":"1449","endLine":53,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1628","line":58,"column":15,"nodeType":"1448","messageId":"1449","endLine":58,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1482","line":1,"column":18,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1495","line":1,"column":26,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":33},{"ruleId":"1446","severity":1,"message":"1456","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1457","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1583","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1566","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1567","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1519","line":11,"column":9,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1629","line":11,"column":32,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":53},{"ruleId":"1446","severity":1,"message":"1520","line":13,"column":10,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1521","line":13,"column":25,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1522","line":14,"column":10,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1630","line":15,"column":8,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1631","line":16,"column":8,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1523","line":18,"column":17,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1562","line":19,"column":8,"nodeType":"1448","messageId":"1449","endLine":19,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1517","line":84,"column":16,"nodeType":"1448","messageId":"1449","endLine":84,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1518","line":84,"column":25,"nodeType":"1448","messageId":"1449","endLine":84,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1584","line":7,"column":10,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1632","line":56,"column":53,"nodeType":"1448","messageId":"1449","endLine":56,"endColumn":58},{"ruleId":"1446","severity":1,"message":"1633","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1536","line":17,"column":10,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1634","line":25,"column":13,"nodeType":"1448","messageId":"1449","endLine":25,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1503","line":25,"column":16,"nodeType":"1448","messageId":"1449","endLine":25,"endColumn":20},{"ruleId":"1585","severity":1,"message":"1635","line":28,"column":7,"nodeType":"1587","endLine":28,"endColumn":9,"suggestions":"1636"},{"ruleId":"1446","severity":1,"message":"1607","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1637","line":4,"column":10,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1638","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1639","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1640","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1539","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1464","line":13,"column":8,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1615","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1599","line":16,"column":8,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1616","line":18,"column":8,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1602","line":19,"column":8,"nodeType":"1448","messageId":"1449","endLine":19,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1502","line":20,"column":10,"nodeType":"1448","messageId":"1449","endLine":20,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1615","line":8,"column":8,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1597","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1503","line":51,"column":14,"nodeType":"1448","messageId":"1449","endLine":51,"endColumn":18},{"ruleId":"1478","severity":1,"message":"1479","line":73,"column":24,"nodeType":"1480","messageId":"1481","endLine":73,"endColumn":26},{"ruleId":"1478","severity":1,"message":"1479","line":80,"column":24,"nodeType":"1480","messageId":"1481","endLine":80,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1538","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1641","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1642","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":11},{"ruleId":"1446","severity":1,"message":"1464","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1643","line":37,"column":9,"nodeType":"1448","messageId":"1449","endLine":37,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1571","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1590","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1618","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1644","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1645","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1646","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1647","line":11,"column":5,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1648","line":12,"column":5,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1649","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1650","line":14,"column":5,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1489","line":2,"column":3,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1618","line":3,"column":3,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1644","line":4,"column":3,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1646","line":5,"column":3,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1647","line":6,"column":3,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1648","line":7,"column":3,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1649","line":8,"column":3,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1650","line":9,"column":3,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1637","line":4,"column":11,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1651","line":5,"column":8,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1517","line":21,"column":20,"nodeType":"1448","messageId":"1449","endLine":21,"endColumn":27},{"ruleId":"1446","severity":1,"message":"1633","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1652","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1478","severity":1,"message":"1479","line":86,"column":33,"nodeType":"1480","messageId":"1481","endLine":86,"endColumn":35},{"ruleId":"1446","severity":1,"message":"1644","line":3,"column":3,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1650","line":5,"column":3,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1626","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1619","line":10,"column":3,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1571","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1489","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1521","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1653","line":7,"column":8,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1654","line":9,"column":8,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1655","line":13,"column":10,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1656","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1536","line":15,"column":16,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1502","line":15,"column":32,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":46},{"ruleId":"1446","severity":1,"message":"1618","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1644","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1619","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1650","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1620","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1514","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1621","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1633","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1652","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1484","line":6,"column":9,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1476","line":7,"column":13,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1477","line":8,"column":13,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1507","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1508","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1509","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1510","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1511","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1512","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1513","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1514","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1648","line":11,"column":5,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1650","line":12,"column":5,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1657","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1658","line":14,"column":5,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1659","line":15,"column":5,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1633","line":1,"column":17,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1652","line":1,"column":27,"nodeType":"1448","messageId":"1449","endLine":1,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1576","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1503","line":26,"column":14,"nodeType":"1448","messageId":"1449","endLine":26,"endColumn":18},{"ruleId":"1478","severity":1,"message":"1479","line":82,"column":55,"nodeType":"1480","messageId":"1481","endLine":82,"endColumn":57},{"ruleId":"1478","severity":1,"message":"1479","line":18,"column":34,"nodeType":"1480","messageId":"1481","endLine":18,"endColumn":36},{"ruleId":"1478","severity":1,"message":"1479","line":35,"column":74,"nodeType":"1480","messageId":"1481","endLine":35,"endColumn":76},{"ruleId":"1446","severity":1,"message":"1660","line":4,"column":8,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1661","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1662","line":11,"column":8,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1663","line":49,"column":7,"nodeType":"1448","messageId":"1449","endLine":49,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1664","line":58,"column":7,"nodeType":"1448","messageId":"1449","endLine":58,"endColumn":23},{"ruleId":"1446","severity":1,"message":"1571","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1590","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1618","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1644","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1645","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1646","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1620","line":10,"column":5,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1647","line":11,"column":5,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1648","line":12,"column":5,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1649","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1650","line":14,"column":5,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1634","line":14,"column":26,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":27},{"ruleId":"1446","severity":1,"message":"1665","line":14,"column":42,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":48},{"ruleId":"1446","severity":1,"message":"1666","line":17,"column":16,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":20},{"ruleId":"1446","severity":1,"message":"1667","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1668","line":12,"column":8,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":25},{"ruleId":"1478","severity":1,"message":"1479","line":30,"column":34,"nodeType":"1480","messageId":"1481","endLine":30,"endColumn":36},{"ruleId":"1446","severity":1,"message":"1598","line":14,"column":10,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":17},{"ruleId":"1669","severity":1,"message":"1670","line":7,"column":13,"nodeType":"1671","messageId":"1672","endLine":7,"endColumn":52},{"ruleId":"1478","severity":1,"message":"1479","line":38,"column":48,"nodeType":"1480","messageId":"1481","endLine":38,"endColumn":50},{"ruleId":"1446","severity":1,"message":"1673","line":60,"column":10,"nodeType":"1448","messageId":"1449","endLine":60,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1523","line":6,"column":17,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":26},{"ruleId":"1446","severity":1,"message":"1674","line":8,"column":25,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":45},{"ruleId":"1446","severity":1,"message":"1520","line":14,"column":8,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1533","line":5,"column":10,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1462","line":2,"column":8,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1522","line":4,"column":27,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":32},{"ruleId":"1446","severity":1,"message":"1502","line":4,"column":34,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":48},{"ruleId":"1446","severity":1,"message":"1507","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1508","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1509","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1510","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1511","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":22},{"ruleId":"1446","severity":1,"message":"1512","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1513","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1514","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1647","line":10,"column":5,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1648","line":11,"column":5,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1650","line":12,"column":5,"nodeType":"1448","messageId":"1449","endLine":12,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1657","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1658","line":14,"column":5,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1659","line":15,"column":5,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1620","line":16,"column":5,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1621","line":17,"column":5,"nodeType":"1448","messageId":"1449","endLine":17,"endColumn":13},{"ruleId":"1446","severity":1,"message":"1536","line":10,"column":16,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":31},{"ruleId":"1446","severity":1,"message":"1502","line":10,"column":32,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":46},{"ruleId":"1446","severity":1,"message":"1607","line":3,"column":8,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":18},{"ruleId":"1446","severity":1,"message":"1546","line":6,"column":8,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":12},{"ruleId":"1446","severity":1,"message":"1675","line":10,"column":8,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1676","line":11,"column":8,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1536","line":18,"column":10,"nodeType":"1448","messageId":"1449","endLine":18,"endColumn":25},{"ruleId":"1446","severity":1,"message":"1517","line":62,"column":17,"nodeType":"1448","messageId":"1449","endLine":62,"endColumn":24},{"ruleId":"1446","severity":1,"message":"1571","line":2,"column":5,"nodeType":"1448","messageId":"1449","endLine":2,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1501","line":3,"column":5,"nodeType":"1448","messageId":"1449","endLine":3,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1572","line":4,"column":5,"nodeType":"1448","messageId":"1449","endLine":4,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1590","line":5,"column":5,"nodeType":"1448","messageId":"1449","endLine":5,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1618","line":6,"column":5,"nodeType":"1448","messageId":"1449","endLine":6,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1644","line":7,"column":5,"nodeType":"1448","messageId":"1449","endLine":7,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1645","line":8,"column":5,"nodeType":"1448","messageId":"1449","endLine":8,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1646","line":9,"column":5,"nodeType":"1448","messageId":"1449","endLine":9,"endColumn":21},{"ruleId":"1446","severity":1,"message":"1620","line":10,"column":5,"nodeType":"1448","messageId":"1449","endLine":10,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1647","line":11,"column":5,"nodeType":"1448","messageId":"1449","endLine":11,"endColumn":14},{"ruleId":"1446","severity":1,"message":"1649","line":13,"column":5,"nodeType":"1448","messageId":"1449","endLine":13,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1650","line":14,"column":5,"nodeType":"1448","messageId":"1449","endLine":14,"endColumn":16},{"ruleId":"1446","severity":1,"message":"1514","line":15,"column":5,"nodeType":"1448","messageId":"1449","endLine":15,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1621","line":16,"column":5,"nodeType":"1448","messageId":"1449","endLine":16,"endColumn":13},"no-native-reassign",["1677"],"no-negated-in-lhs",["1678"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'autoMergeLevel1' is defined but never used.","'subscribe' is assigned a value but never used.","'LoginPage' is defined but never used.","'post' is defined but never used.","'get' is defined but never used.","'SECRET_URL' is assigned a value but never used.","'ListActions' is defined but never used.","'apis' is defined but never used.","'saveProfileSuccess' is defined but never used.","'profileSuccess' is defined but never used.","'actionTypes' is defined but never used.","'React' is defined but never used.","'PropTypes' is defined but never used.","'Component' is defined but never used.","'Typography' is defined but never used.","'Redirect' is defined but never used.","'loadDistribBalance' is defined but never used.","'loadSelfBalance' is defined but never used.","'demo_authenticate' is defined but never used.","no-redeclare","'new_state' is already defined.","redeclared","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'modalActions' is defined but never used.","'modals' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'del' is defined but never used.","'purple' is defined but never used.","'connect' is defined but never used.","'authenticate' is defined but never used.","'logout' is defined but never used.","'checkAuth' is defined but never used.","'push' is defined but never used.","'container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ps' is assigned a value but never used.","'request' is defined but never used.","'put' is defined but never used.","'SEND_POINT_URL' is assigned a value but never used.","'EVENTS_URL' is assigned a value but never used.","'REGARDS_URL' is assigned a value but never used.","'StorePage' is defined but never used.","'drawerCloseWidth' is defined but never used.","'useTranslation' is defined but never used.","'i18n' is assigned a value but never used.","'Input' is defined but never used.","'InputAdornment' is defined but never used.","'AccountCircle' is defined but never used.","'warningCardHeader' is defined but never used.","'successCardHeader' is defined but never used.","'dangerCardHeader' is defined but never used.","'infoCardHeader' is defined but never used.","'primaryCardHeader' is defined but never used.","'roseCardHeader' is defined but never used.","'secondaryCardHeader' is defined but never used.","'whiteColor' is defined but never used.","'roseColor' is defined but never used.","'UserImage' is defined but never used.","'classes' is assigned a value but never used.","'modal' is assigned a value but never used.","'likeEvent' is defined but never used.","'DialogActions' is defined but never used.","'Button' is defined but never used.","'Trans' is defined but never used.","'reduxForm' is defined but never used.","'loadStore' is defined but never used.","'showItem' is defined but never used.","'updateItem' is defined but never used.","'Store' is defined but never used.","'assetActions' is defined but never used.","'storeActions' is defined but never used.","'loadUsers' is defined but never used.","'commentItem' is defined but never used.","'queryString' is defined but never used.","'stat' is defined but never used.","'logo' is defined but never used.","'Dropzone' is defined but never used.","'withTranslation' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Icon' is defined but never used.","'NavLink' is defined but never used.","'auth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loadAccount' is defined but never used.","'loadProfiles' is defined but never used.","'Regards' is defined but never used.","'sendPoints' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'notifierActions' is defined but never used.","'loadProfile' is defined but never used.","'ProgressContainer' is defined but never used.","'Progress' is defined but never used.","'ReduxFormGenerator' is defined but never used.","'Previews' is defined but never used.","'GridContainer' is defined but never used.","'GridItem' is defined but never used.","'img' is assigned a value but never used.","'reset' is defined but never used.","'changeable' is assigned a value but never used.","'drawerWidth' is defined but never used.","'transition' is defined but never used.","'DynamicForm' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'classnames' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'saveProfile' is defined but never used.","'saveAvatar' is defined but never used.","'mockData2' is assigned a value but never used.","'quiz' is assigned a value but never used.","'profileActions' is defined but never used.","'LayoutModal' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1679"],"'activate' is assigned a value but never used.","'boxShadow' is defined but never used.","'useContext' is defined but never used.","no-self-assign","'items' is assigned to itself.","selfAssignment","'Add' is defined but never used.","'Delete' is defined but never used.","'Checkbox' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'Close' is defined but never used.","'Check' is defined but never used.","'AddIcon' is defined but never used.","'Hidden' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'classNames' is defined but never used.","'CameraIcon' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'TableHead' is defined but never used.","'TableSortLabel' is defined but never used.","'Paper' is defined but never used.","'DeleteIcon' is defined but never used.","'lighten' is defined but never used.","'defaultFont' is defined but never used.","'blackColor' is defined but never used.","'grayColor' is defined but never used.","'hexToRgb' is defined but never used.","'name' is assigned a value but never used.","'Grid' is defined but never used.","'ProfileButton' is defined but never used.","'Operation' is defined but never used.","'OperationText' is defined but never used.","'avatarClass' is assigned a value but never used.","'amountClass' is assigned a value but never used.","'loadEventWithComments' is defined but never used.","'EventCardContainer' is defined but never used.","'CommentContainer' is defined but never used.","'other' is assigned a value but never used.","'useState' is defined but never used.","'t' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadItems'. Either include it or remove the dependency array.",["1680"],"'withStyles' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TablePagination' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'useStyles' is assigned a value but never used.","'primaryColor' is defined but never used.","'primaryBoxShadow' is defined but never used.","'defaultBoxShadow' is defined but never used.","'infoColor' is defined but never used.","'successColor' is defined but never used.","'warningColor' is defined but never used.","'dangerColor' is defined but never used.","'leaderBoardStyle' is defined but never used.","'useEffect' is defined but never used.","'InputWithRange' is defined but never used.","'RadioGroup' is defined but never used.","'optionalCallExpression' is defined but never used.","'FormTextField' is defined but never used.","'infoBoxShadow' is defined but never used.","'successBoxShadow' is defined but never used.","'grayBoxShadow' is defined but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'radioButton' is assigned a value but never used.","'renderFromHelper' is assigned a value but never used.","'fields' is assigned a value but never used.","'rand' is assigned a value but never used.","'EventCard' is defined but never used.","'eventsFilterStyle' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'callAllEventHandlers' is defined but never used.","'renderInputWithRange' is defined but never used.","'MenuList' is defined but never used.","'ClickAwayListener' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1681","fix":"1682"},{"desc":"1683","fix":"1684"},"Update the dependencies array to be: [props]",{"range":"1685","text":"1686"},"Update the dependencies array to be: [loadItems]",{"range":"1687","text":"1688"},[1478,1480],"[props]",[1084,1086],"[loadItems]"]